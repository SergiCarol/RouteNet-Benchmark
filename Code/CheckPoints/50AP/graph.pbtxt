node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tensors/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 331
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 331
          }
        }
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_100.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_101.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_102.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_103.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_105.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_106.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_108.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_109.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_10.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_110.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_111.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_112.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_113.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_114.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_116.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_117.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_118.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_11.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_120.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_121.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_122.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_124.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_125.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_126.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_12.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_130.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_131.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_132.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_133.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_134.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_135.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_136.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_137.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_138.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_13.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_15.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_16.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_17.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_18.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_19.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_1.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_20.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_21.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_22.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_23.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_24.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_25.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_26.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_27.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_28.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_29.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_2.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_33.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_34.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_36.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_38.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_39.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_3.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_40.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_41.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_43.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_44.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_46.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_47.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_48.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_49.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_50.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_51.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_53.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_54.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_55.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_56.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_57.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_58.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_59.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_5.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_60.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_61.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_62.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_63.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_65.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_66.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_68.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_69.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_72.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_73.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_75.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_76.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_77.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_78.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_7.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_80.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_81.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_82.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_83.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_84.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_85.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_86.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_87.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_88.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_89.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_8.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_90.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_91.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_92.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_93.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_95.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_96.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_98.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_99.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_9.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_100.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_101.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_102.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_104.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_105.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_106.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_107.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_108.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_10.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_112.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_113.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_114.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_116.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_117.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_118.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_119.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_120.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_121.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_122.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_123.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_124.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_125.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_126.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_127.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_128.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_12.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_130.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_131.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_132.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_133.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_134.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_136.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_138.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_13.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_14.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_15.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_16.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_19.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_1.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_20.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_21.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_22.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_23.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_25.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_27.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_28.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_29.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_2.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_30.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_32.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_33.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_34.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_36.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_37.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_38.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_39.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_3.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_41.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_42.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_44.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_46.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_47.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_48.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_49.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_4.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_50.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_51.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_53.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_54.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_55.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_57.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_58.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_59.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_5.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_60.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_63.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_64.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_66.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_67.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_69.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_6.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_70.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_72.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_73.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_74.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_75.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_76.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_77.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_78.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_7.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_80.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_81.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_82.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_84.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_85.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_86.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_87.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_89.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_8.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_90.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_91.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_92.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_93.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_94.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_95.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_96.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_97.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_98.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_99.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_9.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_100.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_103.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_104.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_105.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_106.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_108.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_109.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_10.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_110.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_111.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_112.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_113.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_114.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_115.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_116.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_11.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_121.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_122.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_123.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_124.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_125.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_126.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_128.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_129.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_12.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_130.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_131.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_132.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_133.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_134.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_135.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_136.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_137.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_14.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_16.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_17.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_18.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_19.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_1.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_20.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_22.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_23.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_27.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_29.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_2.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_30.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_31.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_32.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_33.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_34.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_35.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_36.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_38.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_3.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_40.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_41.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_42.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_43.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_44.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_47.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_49.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_4.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_50.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_51.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_52.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_53.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_54.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_55.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_56.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_57.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_58.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_59.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_5.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_60.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_63.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_64.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_65.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_66.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_68.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_69.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_6.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_70.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_73.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_74.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_75.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_76.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_77.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_78.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_79.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_7.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_80.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_81.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_82.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_84.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_85.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_86.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_87.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_88.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_8.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_90.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_91.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_92.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_93.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_94.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_95.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_96.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_97.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_98.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_99.tfrecords"
        string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_9.tfrecords"
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 331
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "cycle_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4
      }
    }
  }
}
node {
  name: "block_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "sloppy"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "buffer_output_elements"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "prefetch_input_elements"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 8
      }
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "seed_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 2450
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 2450
      }
    }
  }
}
node {
  name: "padding_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "padding_value_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "padding_value_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "padding_value_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "padding_value_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "padding_value_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "padding_value_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "padding_value_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "buffer_size_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_2nBXRk7Lda0"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/gates/kernel"
    }
  }
}
node {
  name: "gru_cell/gates/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/gates/kernel"
  input: "gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/gates/bias"
    }
  }
}
node {
  name: "gru_cell/gates/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/gates/bias"
  input: "gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/candidate/kernel"
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/kernel"
  input: "gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/candidate/bias"
    }
  }
}
node {
  name: "gru_cell/candidate/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/bias"
  input: "gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru_cell_1/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gru_cell_1/gates/kernel/Initializer/random_uniform/max"
  input: "gru_cell_1/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gru_cell_1/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "gru_cell_1/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "gru_cell_1/gates/kernel/Initializer/random_uniform/mul"
  input: "gru_cell_1/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/gates/kernel"
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/kernel"
  input: "gru_cell_1/gates/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/gates/bias"
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/bias"
  input: "gru_cell_1/gates/bias/Initializer/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru_cell_1/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gru_cell_1/candidate/kernel/Initializer/random_uniform/max"
  input: "gru_cell_1/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gru_cell_1/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "gru_cell_1/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "gru_cell_1/candidate/kernel/Initializer/random_uniform/mul"
  input: "gru_cell_1/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/candidate/kernel"
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/kernel"
  input: "gru_cell_1/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/candidate/bias"
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/bias"
  input: "gru_cell_1/candidate/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14433756470680237
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel"
    }
  }
}
node {
  name: "dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias"
    }
  }
}
node {
  name: "dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_1/kernel/Initializer/random_uniform/max"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_1/kernel/Initializer/random_uniform/mul"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1527949720621109
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1527949720621109
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_2/kernel/Initializer/random_uniform/max"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_2/kernel/Initializer/random_uniform/mul"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel"
    }
  }
}
node {
  name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias"
    }
  }
}
node {
  name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "dense_2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/Shape"
  op: "Shape"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/strided_slice"
  op: "StridedSlice"
  input: "map/Shape"
  input: "map/strided_slice/stack"
  input: "map/strided_slice/stack_1"
  input: "map/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArray"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArray_2"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArray_3"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArray_4"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArray_5"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArray_6"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack/Shape"
  input: "map/TensorArrayUnstack/strided_slice/stack"
  input: "map/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range"
  op: "Range"
  input: "map/TensorArrayUnstack/range/start"
  input: "map/TensorArrayUnstack/strided_slice"
  input: "map/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray"
  input: "map/TensorArrayUnstack/range"
  input: "IteratorGetNext"
  input: "map/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/Shape"
  op: "Shape"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack_1/Shape"
  input: "map/TensorArrayUnstack_1/strided_slice/stack"
  input: "map/TensorArrayUnstack_1/strided_slice/stack_1"
  input: "map/TensorArrayUnstack_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/range"
  op: "Range"
  input: "map/TensorArrayUnstack_1/range/start"
  input: "map/TensorArrayUnstack_1/strided_slice"
  input: "map/TensorArrayUnstack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_1/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray_1"
  input: "map/TensorArrayUnstack_1/range"
  input: "IteratorGetNext:1"
  input: "map/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/Shape"
  op: "Shape"
  input: "IteratorGetNext:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack_2/Shape"
  input: "map/TensorArrayUnstack_2/strided_slice/stack"
  input: "map/TensorArrayUnstack_2/strided_slice/stack_1"
  input: "map/TensorArrayUnstack_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/range"
  op: "Range"
  input: "map/TensorArrayUnstack_2/range/start"
  input: "map/TensorArrayUnstack_2/strided_slice"
  input: "map/TensorArrayUnstack_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_2/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray_2"
  input: "map/TensorArrayUnstack_2/range"
  input: "IteratorGetNext:2"
  input: "map/TensorArray_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/Shape"
  op: "Shape"
  input: "IteratorGetNext:3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack_3/Shape"
  input: "map/TensorArrayUnstack_3/strided_slice/stack"
  input: "map/TensorArrayUnstack_3/strided_slice/stack_1"
  input: "map/TensorArrayUnstack_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/range"
  op: "Range"
  input: "map/TensorArrayUnstack_3/range/start"
  input: "map/TensorArrayUnstack_3/strided_slice"
  input: "map/TensorArrayUnstack_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_3/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray_3"
  input: "map/TensorArrayUnstack_3/range"
  input: "IteratorGetNext:3"
  input: "map/TensorArray_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/Shape"
  op: "Shape"
  input: "IteratorGetNext:4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack_4/Shape"
  input: "map/TensorArrayUnstack_4/strided_slice/stack"
  input: "map/TensorArrayUnstack_4/strided_slice/stack_1"
  input: "map/TensorArrayUnstack_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/range"
  op: "Range"
  input: "map/TensorArrayUnstack_4/range/start"
  input: "map/TensorArrayUnstack_4/strided_slice"
  input: "map/TensorArrayUnstack_4/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_4/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray_4"
  input: "map/TensorArrayUnstack_4/range"
  input: "IteratorGetNext:4"
  input: "map/TensorArray_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/Shape"
  op: "Shape"
  input: "IteratorGetNext:5"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack_5/Shape"
  input: "map/TensorArrayUnstack_5/strided_slice/stack"
  input: "map/TensorArrayUnstack_5/strided_slice/stack_1"
  input: "map/TensorArrayUnstack_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/range"
  op: "Range"
  input: "map/TensorArrayUnstack_5/range/start"
  input: "map/TensorArrayUnstack_5/strided_slice"
  input: "map/TensorArrayUnstack_5/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_5/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray_5"
  input: "map/TensorArrayUnstack_5/range"
  input: "IteratorGetNext:5"
  input: "map/TensorArray_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/Shape"
  op: "Shape"
  input: "IteratorGetNext:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack_6/Shape"
  input: "map/TensorArrayUnstack_6/strided_slice/stack"
  input: "map/TensorArrayUnstack_6/strided_slice/stack_1"
  input: "map/TensorArrayUnstack_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/range"
  op: "Range"
  input: "map/TensorArrayUnstack_6/range/start"
  input: "map/TensorArrayUnstack_6/strided_slice"
  input: "map/TensorArrayUnstack_6/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack_6/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray_6"
  input: "map/TensorArrayUnstack_6/range"
  input: "IteratorGetNext:6"
  input: "map/TensorArray_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArray_7"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/Enter"
  op: "Enter"
  input: "map/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Enter_1"
  op: "Enter"
  input: "map/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Enter_2"
  op: "Enter"
  input: "map/TensorArray_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Merge"
  op: "Merge"
  input: "map/while/Enter"
  input: "map/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Merge_1"
  op: "Merge"
  input: "map/while/Enter_1"
  input: "map/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Merge_2"
  op: "Merge"
  input: "map/while/Enter_2"
  input: "map/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Less"
  op: "Less"
  input: "map/while/Merge"
  input: "map/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Less/Enter"
  op: "Enter"
  input: "map/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Less_1"
  op: "Less"
  input: "map/while/Merge_1"
  input: "map/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/Less"
  input: "map/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/LoopCond"
  op: "LoopCond"
  input: "map/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch"
  op: "Switch"
  input: "map/while/Merge"
  input: "map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch_1"
  op: "Switch"
  input: "map/while/Merge_1"
  input: "map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch_2"
  op: "Switch"
  input: "map/while/Merge_2"
  input: "map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity"
  op: "Identity"
  input: "map/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_1"
  op: "Identity"
  input: "map/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_2"
  op: "Identity"
  input: "map/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/add/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/add"
  op: "Add"
  input: "map/while/Identity"
  input: "map/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_1"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3_1/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3_1/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_1/Enter"
  op: "Enter"
  input: "map/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_1/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack_1/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_2"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3_2/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3_2/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_2/Enter"
  op: "Enter"
  input: "map/TensorArray_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_2/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack_2/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_3"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3_3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3_3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_3/Enter"
  op: "Enter"
  input: "map/TensorArray_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_3/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack_3/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_4"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3_4/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3_4/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_4/Enter"
  op: "Enter"
  input: "map/TensorArray_4"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_4/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack_4/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_5"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3_5/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3_5/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_5/Enter"
  op: "Enter"
  input: "map/TensorArray_5"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_5/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack_5/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_6"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3_6/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3_6/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_6/Enter"
  op: "Enter"
  input: "map/TensorArray_6"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3_6/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack_6/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/comnet_model/stack/1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_1"
  input: "map/while/comnet_model/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/zeros"
  op: "Fill"
  input: "map/while/comnet_model/stack"
  input: "map/while/comnet_model/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "map/while/comnet_model/stack_1/1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 31
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_1"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ExpandDims"
  op: "ExpandDims"
  input: "map/while/TensorArrayReadV3_6"
  input: "map/while/comnet_model/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/zeros_1/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/zeros_1"
  op: "Fill"
  input: "map/while/comnet_model/stack_1"
  input: "map/while/comnet_model/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "map/while/comnet_model/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/ExpandDims"
  input: "map/while/comnet_model/zeros_1"
  input: "map/while/comnet_model/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice/stack_1"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_3"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice/Cast"
  op: "Cast"
  input: "map/while/comnet_model/strided_slice/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice/Cast_1"
  op: "Cast"
  input: "map/while/comnet_model/strided_slice/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice"
  op: "StridedSlice"
  input: "map/while/TensorArrayReadV3"
  input: "map/while/comnet_model/strided_slice/Cast"
  input: "map/while/comnet_model/strided_slice/stack_1"
  input: "map/while/comnet_model/strided_slice/Cast_1"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_1/stack_1"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_3"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_1/Cast"
  op: "Cast"
  input: "map/while/comnet_model/strided_slice_1/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_1/Cast_1"
  op: "Cast"
  input: "map/while/comnet_model/strided_slice_1/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/TensorArrayReadV3_4"
  input: "map/while/comnet_model/strided_slice_1/Cast"
  input: "map/while/comnet_model/strided_slice_1/stack_1"
  input: "map/while/comnet_model/strided_slice_1/Cast_1"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_2/stack_1"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_3"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_2/Cast"
  op: "Cast"
  input: "map/while/comnet_model/strided_slice_2/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_2/Cast_1"
  op: "Cast"
  input: "map/while/comnet_model/strided_slice_2/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/TensorArrayReadV3_5"
  input: "map/while/comnet_model/strided_slice_2/Cast"
  input: "map/while/comnet_model/strided_slice_2/stack_1"
  input: "map/while/comnet_model/strided_slice_2/Cast_1"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2"
  op: "GatherV2"
  input: "map/while/comnet_model/zeros"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/comnet_model/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_2"
  op: "Pack"
  input: "map/while/comnet_model/strided_slice_1"
  input: "map/while/comnet_model/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/Max"
  op: "Max"
  input: "map/while/comnet_model/strided_slice_2"
  input: "map/while/comnet_model/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/add/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/add"
  op: "Add"
  input: "map/while/comnet_model/Max"
  input: "map/while/comnet_model/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_3/2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_3"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/add"
  input: "map/while/comnet_model/stack_3/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like/Shape"
  op: "Shape"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like"
  op: "Fill"
  input: "map/while/comnet_model/ones_like/Shape"
  input: "map/while/comnet_model/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/SegmentSum"
  op: "SegmentSum"
  input: "map/while/comnet_model/ones_like"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ScatterNd"
  op: "ScatterNd"
  input: "map/while/comnet_model/stack_2"
  input: "map/while/comnet_model/GatherV2"
  input: "map/while/comnet_model/stack_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Rank"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/range"
  op: "Range"
  input: "map/while/comnet_model/rnn/range/start"
  input: "map/while/comnet_model/rnn/Rank"
  input: "map/while/comnet_model/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/concat/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn/concat/values_0"
  input: "map/while/comnet_model/rnn/range"
  input: "map/while/comnet_model/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/transpose"
  op: "Transpose"
  input: "map/while/comnet_model/ScatterNd"
  input: "map/while/comnet_model/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/ToInt32"
  op: "Cast"
  input: "map/while/comnet_model/SegmentSum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/sequence_length"
  op: "Identity"
  input: "map/while/comnet_model/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn/Shape"
  input: "map/while/comnet_model/rnn/strided_slice/stack"
  input: "map/while/comnet_model/rnn/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/rnn/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/stack"
  op: "Pack"
  input: "map/while/comnet_model/rnn/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Equal"
  op: "Equal"
  input: "map/while/comnet_model/rnn/Shape_1"
  input: "map/while/comnet_model/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/All"
  op: "All"
  input: "map/while/comnet_model/rnn/Equal"
  input: "map/while/comnet_model/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Assert/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Assert/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Assert/Assert/data_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Assert/Assert/data_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Assert/Assert"
  op: "Assert"
  input: "map/while/comnet_model/rnn/All"
  input: "map/while/comnet_model/rnn/Assert/Assert/data_0"
  input: "map/while/comnet_model/rnn/stack"
  input: "map/while/comnet_model/rnn/Assert/Assert/data_2"
  input: "map/while/comnet_model/rnn/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/CheckSeqLen"
  op: "Identity"
  input: "map/while/comnet_model/rnn/sequence_length"
  input: "^map/while/comnet_model/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Shape_2"
  op: "Shape"
  input: "map/while/comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice_1/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn/Shape_2"
  input: "map/while/comnet_model/rnn/strided_slice_1/stack"
  input: "map/while/comnet_model/rnn/strided_slice_1/stack_1"
  input: "map/while/comnet_model/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Shape_3"
  op: "Shape"
  input: "map/while/comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice_2/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn/Shape_3"
  input: "map/while/comnet_model/rnn/strided_slice_2/stack"
  input: "map/while/comnet_model/rnn/strided_slice_2/stack_1"
  input: "map/while/comnet_model/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/ExpandDims"
  op: "ExpandDims"
  input: "map/while/comnet_model/rnn/strided_slice_2"
  input: "map/while/comnet_model/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn/ExpandDims"
  input: "map/while/comnet_model/rnn/Const_1"
  input: "map/while/comnet_model/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/zeros"
  op: "Fill"
  input: "map/while/comnet_model/rnn/concat_1"
  input: "map/while/comnet_model/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Min"
  op: "Min"
  input: "map/while/comnet_model/rnn/CheckSeqLen"
  input: "map/while/comnet_model/rnn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Max"
  op: "Max"
  input: "map/while/comnet_model/rnn/CheckSeqLen"
  input: "map/while/comnet_model/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/time"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/Shape"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/range/start"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/strided_slice"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/while/comnet_model/rnn/TensorArray_1"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/range"
  input: "map/while/comnet_model/rnn/transpose"
  input: "map/while/comnet_model/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Maximum/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Maximum"
  op: "Maximum"
  input: "map/while/comnet_model/rnn/Maximum/x"
  input: "map/while/comnet_model/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Minimum"
  op: "Minimum"
  input: "map/while/comnet_model/rnn/strided_slice_1"
  input: "map/while/comnet_model/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/iteration_counter"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Enter_2"
  op: "Enter"
  input: "map/while/comnet_model/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Enter_3"
  op: "Enter"
  input: "map/while/comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Merge"
  op: "Merge"
  input: "map/while/comnet_model/rnn/while/Enter"
  input: "map/while/comnet_model/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Merge_1"
  op: "Merge"
  input: "map/while/comnet_model/rnn/while/Enter_1"
  input: "map/while/comnet_model/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Merge_2"
  op: "Merge"
  input: "map/while/comnet_model/rnn/while/Enter_2"
  input: "map/while/comnet_model/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Merge_3"
  op: "Merge"
  input: "map/while/comnet_model/rnn/while/Enter_3"
  input: "map/while/comnet_model/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Less"
  op: "Less"
  input: "map/while/comnet_model/rnn/while/Merge"
  input: "map/while/comnet_model/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Less/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Less_1"
  op: "Less"
  input: "map/while/comnet_model/rnn/while/Merge_1"
  input: "map/while/comnet_model/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/comnet_model/rnn/while/Less"
  input: "map/while/comnet_model/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/LoopCond"
  op: "LoopCond"
  input: "map/while/comnet_model/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Switch"
  op: "Switch"
  input: "map/while/comnet_model/rnn/while/Merge"
  input: "map/while/comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Switch_1"
  op: "Switch"
  input: "map/while/comnet_model/rnn/while/Merge_1"
  input: "map/while/comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Switch_2"
  op: "Switch"
  input: "map/while/comnet_model/rnn/while/Merge_2"
  input: "map/while/comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Switch_3"
  op: "Switch"
  input: "map/while/comnet_model/rnn/while/Merge_3"
  input: "map/while/comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Identity"
  op: "Identity"
  input: "map/while/comnet_model/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Identity_1"
  op: "Identity"
  input: "map/while/comnet_model/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Identity_2"
  op: "Identity"
  input: "map/while/comnet_model/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Identity_3"
  op: "Identity"
  input: "map/while/comnet_model/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/add/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/add"
  op: "Add"
  input: "map/while/comnet_model/rnn/while/Identity"
  input: "map/while/comnet_model/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/comnet_model/rnn/while/TensorArrayReadV3/Enter"
  input: "map/while/comnet_model/rnn/while/Identity_1"
  input: "map/while/comnet_model/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "map/while/comnet_model/rnn/while/Identity_1"
  input: "map/while/comnet_model/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/concat/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn/while/TensorArrayReadV3"
  input: "map/while/comnet_model/rnn/while/Identity_3"
  input: "gru_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter_1"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gru_cell_1/MatMul/ReadVariableOp/Enter_1"
  op: "Enter"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul"
  op: "MatMul"
  input: "gru_cell_1/concat"
  input: "gru_cell_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter_1"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd/ReadVariableOp/Enter_1"
  op: "Enter"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul"
  input: "gru_cell_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Sigmoid"
  op: "Sigmoid"
  input: "gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/Const"
  op: "Const"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell_1/split/split_dim"
  op: "Const"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/split"
  op: "Split"
  input: "gru_cell_1/split/split_dim"
  input: "gru_cell_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell_1/mul"
  op: "Mul"
  input: "gru_cell_1/split"
  input: "map/while/comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_1/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn/while/TensorArrayReadV3"
  input: "gru_cell_1/mul"
  input: "gru_cell_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter_1"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gru_cell_1/MatMul_1/ReadVariableOp/Enter_1"
  op: "Enter"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "gru_cell_1/concat_1"
  input: "gru_cell_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1"
  op: "Enter"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_1"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Tanh"
  op: "Tanh"
  input: "gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_1"
  op: "Mul"
  input: "gru_cell_1/split:1"
  input: "map/while/comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/sub/x"
  op: "Const"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/sub"
  op: "Sub"
  input: "gru_cell_1/sub/x"
  input: "gru_cell_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_2"
  op: "Mul"
  input: "gru_cell_1/sub"
  input: "gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/add"
  op: "Add"
  input: "gru_cell_1/mul_1"
  input: "gru_cell_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Select"
  op: "Select"
  input: "map/while/comnet_model/rnn/while/GreaterEqual"
  input: "map/while/comnet_model/rnn/while/Select/Enter"
  input: "gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Select/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Select_1"
  op: "Select"
  input: "map/while/comnet_model/rnn/while/GreaterEqual"
  input: "map/while/comnet_model/rnn/while/Identity_3"
  input: "gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/comnet_model/rnn/while/Identity_1"
  input: "map/while/comnet_model/rnn/while/Select"
  input: "map/while/comnet_model/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/add_1"
  op: "Add"
  input: "map/while/comnet_model/rnn/while/Identity_1"
  input: "map/while/comnet_model/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/NextIteration"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Exit"
  op: "Exit"
  input: "map/while/comnet_model/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Exit_1"
  op: "Exit"
  input: "map/while/comnet_model/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Exit_2"
  op: "Exit"
  input: "map/while/comnet_model/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/while/Exit_3"
  op: "Exit"
  input: "map/while/comnet_model/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/while/comnet_model/rnn/TensorArray"
  input: "map/while/comnet_model/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayStack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayStack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayStack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn/TensorArrayStack/range/start"
  input: "map/while/comnet_model/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "map/while/comnet_model/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn/TensorArray"
  input: "map/while/comnet_model/rnn/TensorArrayStack/range"
  input: "map/while/comnet_model/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/Rank_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/range_1/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/range_1/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/range_1"
  op: "Range"
  input: "map/while/comnet_model/rnn/range_1/start"
  input: "map/while/comnet_model/rnn/Rank_1"
  input: "map/while/comnet_model/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/concat_2/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn/concat_2/values_0"
  input: "map/while/comnet_model/rnn/range_1"
  input: "map/while/comnet_model/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn/transpose_1"
  op: "Transpose"
  input: "map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherNd"
  op: "GatherNd"
  input: "map/while/comnet_model/rnn/transpose_1"
  input: "map/while/comnet_model/stack_2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "map/while/comnet_model/GatherNd"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/TensorArrayReadV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum"
  input: "map/while/comnet_model/zeros"
  input: "gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gru_cell/MatMul"
  op: "MatMul"
  input: "gru_cell/concat"
  input: "gru_cell/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "gru_cell/MatMul"
  input: "gru_cell/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell/split/split_dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/split"
  op: "Split"
  input: "gru_cell/split/split_dim"
  input: "gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell/mul"
  op: "Mul"
  input: "gru_cell/split"
  input: "map/while/comnet_model/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum"
  input: "gru_cell/mul"
  input: "gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gru_cell/MatMul_1"
  op: "MatMul"
  input: "gru_cell/concat_1"
  input: "gru_cell/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "gru_cell/MatMul_1"
  input: "gru_cell/BiasAdd_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Tanh"
  op: "Tanh"
  input: "gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_1"
  op: "Mul"
  input: "gru_cell/split:1"
  input: "map/while/comnet_model/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/sub/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/sub"
  op: "Sub"
  input: "gru_cell/sub/x"
  input: "gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_2"
  op: "Mul"
  input: "gru_cell/sub"
  input: "gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/add"
  op: "Add"
  input: "gru_cell/mul_1"
  input: "gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_1"
  op: "GatherV2"
  input: "gru_cell/add"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/comnet_model/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_4"
  op: "Pack"
  input: "map/while/comnet_model/strided_slice_1"
  input: "map/while/comnet_model/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/Max_1"
  op: "Max"
  input: "map/while/comnet_model/strided_slice_2"
  input: "map/while/comnet_model/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/add_1/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/add_1"
  op: "Add"
  input: "map/while/comnet_model/Max_1"
  input: "map/while/comnet_model/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_5/2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_5"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/add_1"
  input: "map/while/comnet_model/stack_5/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_1/Shape"
  op: "Shape"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_1/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_1"
  op: "Fill"
  input: "map/while/comnet_model/ones_like_1/Shape"
  input: "map/while/comnet_model/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/SegmentSum_1"
  op: "SegmentSum"
  input: "map/while/comnet_model/ones_like_1"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ScatterNd_1"
  op: "ScatterNd"
  input: "map/while/comnet_model/stack_4"
  input: "map/while/comnet_model/GatherV2_1"
  input: "map/while/comnet_model/stack_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Rank"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_1/range/start"
  input: "map/while/comnet_model/rnn_1/Rank"
  input: "map/while/comnet_model/rnn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/concat/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_1/concat/values_0"
  input: "map/while/comnet_model/rnn_1/range"
  input: "map/while/comnet_model/rnn_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/transpose"
  op: "Transpose"
  input: "map/while/comnet_model/ScatterNd_1"
  input: "map/while/comnet_model/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/ToInt32"
  op: "Cast"
  input: "map/while/comnet_model/SegmentSum_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/sequence_length"
  op: "Identity"
  input: "map/while/comnet_model/rnn_1/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_1/Shape"
  input: "map/while/comnet_model/rnn_1/strided_slice/stack"
  input: "map/while/comnet_model/rnn_1/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/rnn_1/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/stack"
  op: "Pack"
  input: "map/while/comnet_model/rnn_1/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Equal"
  op: "Equal"
  input: "map/while/comnet_model/rnn_1/Shape_1"
  input: "map/while/comnet_model/rnn_1/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/All"
  op: "All"
  input: "map/while/comnet_model/rnn_1/Equal"
  input: "map/while/comnet_model/rnn_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Assert/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_1/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Assert/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Assert/Assert/data_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_1/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Assert/Assert/data_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Assert/Assert"
  op: "Assert"
  input: "map/while/comnet_model/rnn_1/All"
  input: "map/while/comnet_model/rnn_1/Assert/Assert/data_0"
  input: "map/while/comnet_model/rnn_1/stack"
  input: "map/while/comnet_model/rnn_1/Assert/Assert/data_2"
  input: "map/while/comnet_model/rnn_1/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/CheckSeqLen"
  op: "Identity"
  input: "map/while/comnet_model/rnn_1/sequence_length"
  input: "^map/while/comnet_model/rnn_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Shape_2"
  op: "Shape"
  input: "map/while/comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_1/Shape_2"
  input: "map/while/comnet_model/rnn_1/strided_slice_1/stack"
  input: "map/while/comnet_model/rnn_1/strided_slice_1/stack_1"
  input: "map/while/comnet_model/rnn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Shape_3"
  op: "Shape"
  input: "map/while/comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_1/Shape_3"
  input: "map/while/comnet_model/rnn_1/strided_slice_2/stack"
  input: "map/while/comnet_model/rnn_1/strided_slice_2/stack_1"
  input: "map/while/comnet_model/rnn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/ExpandDims"
  op: "ExpandDims"
  input: "map/while/comnet_model/rnn_1/strided_slice_2"
  input: "map/while/comnet_model/rnn_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_1/ExpandDims"
  input: "map/while/comnet_model/rnn_1/Const_1"
  input: "map/while/comnet_model/rnn_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/zeros"
  op: "Fill"
  input: "map/while/comnet_model/rnn_1/concat_1"
  input: "map/while/comnet_model/rnn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Min"
  op: "Min"
  input: "map/while/comnet_model/rnn_1/CheckSeqLen"
  input: "map/while/comnet_model/rnn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Max"
  op: "Max"
  input: "map/while/comnet_model/rnn_1/CheckSeqLen"
  input: "map/while/comnet_model/rnn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/time"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArray"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_1/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_1/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/Shape"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/range/start"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/strided_slice"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/while/comnet_model/rnn_1/TensorArray_1"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/range"
  input: "map/while/comnet_model/rnn_1/transpose"
  input: "map/while/comnet_model/rnn_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Maximum/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Maximum"
  op: "Maximum"
  input: "map/while/comnet_model/rnn_1/Maximum/x"
  input: "map/while/comnet_model/rnn_1/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Minimum"
  op: "Minimum"
  input: "map/while/comnet_model/rnn_1/strided_slice_1"
  input: "map/while/comnet_model/rnn_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/iteration_counter"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Enter_2"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Enter_3"
  op: "Enter"
  input: "map/while/comnet_model/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Merge"
  op: "Merge"
  input: "map/while/comnet_model/rnn_1/while/Enter"
  input: "map/while/comnet_model/rnn_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Merge_1"
  op: "Merge"
  input: "map/while/comnet_model/rnn_1/while/Enter_1"
  input: "map/while/comnet_model/rnn_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Merge_2"
  op: "Merge"
  input: "map/while/comnet_model/rnn_1/while/Enter_2"
  input: "map/while/comnet_model/rnn_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Merge_3"
  op: "Merge"
  input: "map/while/comnet_model/rnn_1/while/Enter_3"
  input: "map/while/comnet_model/rnn_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Less"
  op: "Less"
  input: "map/while/comnet_model/rnn_1/while/Merge"
  input: "map/while/comnet_model/rnn_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Less/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Less_1"
  op: "Less"
  input: "map/while/comnet_model/rnn_1/while/Merge_1"
  input: "map/while/comnet_model/rnn_1/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Less_1/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/comnet_model/rnn_1/while/Less"
  input: "map/while/comnet_model/rnn_1/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/LoopCond"
  op: "LoopCond"
  input: "map/while/comnet_model/rnn_1/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Switch"
  op: "Switch"
  input: "map/while/comnet_model/rnn_1/while/Merge"
  input: "map/while/comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Switch_1"
  op: "Switch"
  input: "map/while/comnet_model/rnn_1/while/Merge_1"
  input: "map/while/comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Switch_2"
  op: "Switch"
  input: "map/while/comnet_model/rnn_1/while/Merge_2"
  input: "map/while/comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Switch_3"
  op: "Switch"
  input: "map/while/comnet_model/rnn_1/while/Merge_3"
  input: "map/while/comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Identity"
  op: "Identity"
  input: "map/while/comnet_model/rnn_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Identity_1"
  op: "Identity"
  input: "map/while/comnet_model/rnn_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Identity_2"
  op: "Identity"
  input: "map/while/comnet_model/rnn_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Identity_3"
  op: "Identity"
  input: "map/while/comnet_model/rnn_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/add/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/add"
  op: "Add"
  input: "map/while/comnet_model/rnn_1/while/Identity"
  input: "map/while/comnet_model/rnn_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
  input: "map/while/comnet_model/rnn_1/while/Identity_1"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/GreaterEqual"
  op: "GreaterEqual"
  input: "map/while/comnet_model/rnn_1/while/Identity_1"
  input: "map/while/comnet_model/rnn_1/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/GreaterEqual/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/concat_2/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_1/while/Identity_3"
  input: "gru_cell_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_2/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_2/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "gru_cell_1/concat_2"
  input: "gru_cell_1/MatMul_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_2/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_2/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_2"
  input: "gru_cell_1/BiasAdd_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Sigmoid_1"
  op: "Sigmoid"
  input: "gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/Const_1"
  op: "Const"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell_1/split_1/split_dim"
  op: "Const"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/split_1"
  op: "Split"
  input: "gru_cell_1/split_1/split_dim"
  input: "gru_cell_1/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell_1/mul_3"
  op: "Mul"
  input: "gru_cell_1/split_1"
  input: "map/while/comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_3/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_3"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "gru_cell_1/mul_3"
  input: "gru_cell_1/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_3/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_3/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "gru_cell_1/concat_3"
  input: "gru_cell_1/MatMul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_3/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_3/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_3"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_3"
  input: "gru_cell_1/BiasAdd_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Tanh_1"
  op: "Tanh"
  input: "gru_cell_1/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_4"
  op: "Mul"
  input: "gru_cell_1/split_1:1"
  input: "map/while/comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_1/x"
  op: "Const"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_1"
  op: "Sub"
  input: "gru_cell_1/sub_1/x"
  input: "gru_cell_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_5"
  op: "Mul"
  input: "gru_cell_1/sub_1"
  input: "gru_cell_1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/add_1"
  op: "Add"
  input: "gru_cell_1/mul_4"
  input: "gru_cell_1/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Select"
  op: "Select"
  input: "map/while/comnet_model/rnn_1/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_1/while/Select/Enter"
  input: "gru_cell_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Select/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Select_1"
  op: "Select"
  input: "map/while/comnet_model/rnn_1/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_1/while/Identity_3"
  input: "gru_cell_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/comnet_model/rnn_1/while/Identity_1"
  input: "map/while/comnet_model/rnn_1/while/Select"
  input: "map/while/comnet_model/rnn_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/add_1"
  op: "Add"
  input: "map/while/comnet_model/rnn_1/while/Identity_1"
  input: "map/while/comnet_model/rnn_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/NextIteration"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/NextIteration_3"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_1/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Exit"
  op: "Exit"
  input: "map/while/comnet_model/rnn_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Exit_1"
  op: "Exit"
  input: "map/while/comnet_model/rnn_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Exit_2"
  op: "Exit"
  input: "map/while/comnet_model/rnn_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/while/Exit_3"
  op: "Exit"
  input: "map/while/comnet_model/rnn_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_1/TensorArray"
  input: "map/while/comnet_model/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayStack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayStack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayStack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_1/TensorArrayStack/range/start"
  input: "map/while/comnet_model/rnn_1/TensorArrayStack/TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_1/TensorArray"
  input: "map/while/comnet_model/rnn_1/TensorArrayStack/range"
  input: "map/while/comnet_model/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/Rank_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/range_1/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/range_1/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/range_1"
  op: "Range"
  input: "map/while/comnet_model/rnn_1/range_1/start"
  input: "map/while/comnet_model/rnn_1/Rank_1"
  input: "map/while/comnet_model/rnn_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/concat_2/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_1/concat_2/values_0"
  input: "map/while/comnet_model/rnn_1/range_1"
  input: "map/while/comnet_model/rnn_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_1/transpose_1"
  op: "Transpose"
  input: "map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherNd_1"
  op: "GatherNd"
  input: "map/while/comnet_model/rnn_1/transpose_1"
  input: "map/while/comnet_model/stack_4"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/UnsortedSegmentSum_1"
  op: "UnsortedSegmentSum"
  input: "map/while/comnet_model/GatherNd_1"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/TensorArrayReadV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_1"
  input: "gru_cell/add"
  input: "gru_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_2"
  op: "MatMul"
  input: "gru_cell/concat_2"
  input: "gru_cell/MatMul_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "gru_cell/MatMul_2"
  input: "gru_cell/BiasAdd_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "gru_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell/split_1/split_dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/split_1"
  op: "Split"
  input: "gru_cell/split_1/split_dim"
  input: "gru_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell/mul_3"
  op: "Mul"
  input: "gru_cell/split_1"
  input: "gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_3/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_3"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_1"
  input: "gru_cell/mul_3"
  input: "gru_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_3"
  op: "MatMul"
  input: "gru_cell/concat_3"
  input: "gru_cell/MatMul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "gru_cell/MatMul_3"
  input: "gru_cell/BiasAdd_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Tanh_1"
  op: "Tanh"
  input: "gru_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_4"
  op: "Mul"
  input: "gru_cell/split_1:1"
  input: "gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/sub_1/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/sub_1"
  op: "Sub"
  input: "gru_cell/sub_1/x"
  input: "gru_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_5"
  op: "Mul"
  input: "gru_cell/sub_1"
  input: "gru_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/add_1"
  op: "Add"
  input: "gru_cell/mul_4"
  input: "gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_2"
  op: "GatherV2"
  input: "gru_cell/add_1"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/comnet_model/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_6"
  op: "Pack"
  input: "map/while/comnet_model/strided_slice_1"
  input: "map/while/comnet_model/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/Max_2"
  op: "Max"
  input: "map/while/comnet_model/strided_slice_2"
  input: "map/while/comnet_model/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/add_2/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/add_2"
  op: "Add"
  input: "map/while/comnet_model/Max_2"
  input: "map/while/comnet_model/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_7/2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_7"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/add_2"
  input: "map/while/comnet_model/stack_7/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_2/Shape"
  op: "Shape"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_2/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_2"
  op: "Fill"
  input: "map/while/comnet_model/ones_like_2/Shape"
  input: "map/while/comnet_model/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/SegmentSum_2"
  op: "SegmentSum"
  input: "map/while/comnet_model/ones_like_2"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ScatterNd_2"
  op: "ScatterNd"
  input: "map/while/comnet_model/stack_6"
  input: "map/while/comnet_model/GatherV2_2"
  input: "map/while/comnet_model/stack_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Rank"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_2/range/start"
  input: "map/while/comnet_model/rnn_2/Rank"
  input: "map/while/comnet_model/rnn_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/concat/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_2/concat/values_0"
  input: "map/while/comnet_model/rnn_2/range"
  input: "map/while/comnet_model/rnn_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/transpose"
  op: "Transpose"
  input: "map/while/comnet_model/ScatterNd_2"
  input: "map/while/comnet_model/rnn_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/ToInt32"
  op: "Cast"
  input: "map/while/comnet_model/SegmentSum_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/sequence_length"
  op: "Identity"
  input: "map/while/comnet_model/rnn_2/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_2/Shape"
  input: "map/while/comnet_model/rnn_2/strided_slice/stack"
  input: "map/while/comnet_model/rnn_2/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/rnn_2/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/stack"
  op: "Pack"
  input: "map/while/comnet_model/rnn_2/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Equal"
  op: "Equal"
  input: "map/while/comnet_model/rnn_2/Shape_1"
  input: "map/while/comnet_model/rnn_2/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/All"
  op: "All"
  input: "map/while/comnet_model/rnn_2/Equal"
  input: "map/while/comnet_model/rnn_2/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Assert/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_2/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Assert/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Assert/Assert/data_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_2/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Assert/Assert/data_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Assert/Assert"
  op: "Assert"
  input: "map/while/comnet_model/rnn_2/All"
  input: "map/while/comnet_model/rnn_2/Assert/Assert/data_0"
  input: "map/while/comnet_model/rnn_2/stack"
  input: "map/while/comnet_model/rnn_2/Assert/Assert/data_2"
  input: "map/while/comnet_model/rnn_2/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/CheckSeqLen"
  op: "Identity"
  input: "map/while/comnet_model/rnn_2/sequence_length"
  input: "^map/while/comnet_model/rnn_2/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Shape_2"
  op: "Shape"
  input: "map/while/comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice_1/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_2/Shape_2"
  input: "map/while/comnet_model/rnn_2/strided_slice_1/stack"
  input: "map/while/comnet_model/rnn_2/strided_slice_1/stack_1"
  input: "map/while/comnet_model/rnn_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Shape_3"
  op: "Shape"
  input: "map/while/comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice_2/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_2/Shape_3"
  input: "map/while/comnet_model/rnn_2/strided_slice_2/stack"
  input: "map/while/comnet_model/rnn_2/strided_slice_2/stack_1"
  input: "map/while/comnet_model/rnn_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/ExpandDims"
  op: "ExpandDims"
  input: "map/while/comnet_model/rnn_2/strided_slice_2"
  input: "map/while/comnet_model/rnn_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_2/ExpandDims"
  input: "map/while/comnet_model/rnn_2/Const_1"
  input: "map/while/comnet_model/rnn_2/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/zeros"
  op: "Fill"
  input: "map/while/comnet_model/rnn_2/concat_1"
  input: "map/while/comnet_model/rnn_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Min"
  op: "Min"
  input: "map/while/comnet_model/rnn_2/CheckSeqLen"
  input: "map/while/comnet_model/rnn_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Max"
  op: "Max"
  input: "map/while/comnet_model/rnn_2/CheckSeqLen"
  input: "map/while/comnet_model/rnn_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/time"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArray"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_2/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_2/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/Shape"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/range/start"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/strided_slice"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/while/comnet_model/rnn_2/TensorArray_1"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/range"
  input: "map/while/comnet_model/rnn_2/transpose"
  input: "map/while/comnet_model/rnn_2/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Maximum/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Maximum"
  op: "Maximum"
  input: "map/while/comnet_model/rnn_2/Maximum/x"
  input: "map/while/comnet_model/rnn_2/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Minimum"
  op: "Minimum"
  input: "map/while/comnet_model/rnn_2/strided_slice_1"
  input: "map/while/comnet_model/rnn_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/iteration_counter"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Enter_2"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Enter_3"
  op: "Enter"
  input: "map/while/comnet_model/rnn_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Merge"
  op: "Merge"
  input: "map/while/comnet_model/rnn_2/while/Enter"
  input: "map/while/comnet_model/rnn_2/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Merge_1"
  op: "Merge"
  input: "map/while/comnet_model/rnn_2/while/Enter_1"
  input: "map/while/comnet_model/rnn_2/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Merge_2"
  op: "Merge"
  input: "map/while/comnet_model/rnn_2/while/Enter_2"
  input: "map/while/comnet_model/rnn_2/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Merge_3"
  op: "Merge"
  input: "map/while/comnet_model/rnn_2/while/Enter_3"
  input: "map/while/comnet_model/rnn_2/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Less"
  op: "Less"
  input: "map/while/comnet_model/rnn_2/while/Merge"
  input: "map/while/comnet_model/rnn_2/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Less/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Less_1"
  op: "Less"
  input: "map/while/comnet_model/rnn_2/while/Merge_1"
  input: "map/while/comnet_model/rnn_2/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Less_1/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/comnet_model/rnn_2/while/Less"
  input: "map/while/comnet_model/rnn_2/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/LoopCond"
  op: "LoopCond"
  input: "map/while/comnet_model/rnn_2/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Switch"
  op: "Switch"
  input: "map/while/comnet_model/rnn_2/while/Merge"
  input: "map/while/comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Switch_1"
  op: "Switch"
  input: "map/while/comnet_model/rnn_2/while/Merge_1"
  input: "map/while/comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Switch_2"
  op: "Switch"
  input: "map/while/comnet_model/rnn_2/while/Merge_2"
  input: "map/while/comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Switch_3"
  op: "Switch"
  input: "map/while/comnet_model/rnn_2/while/Merge_3"
  input: "map/while/comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Identity"
  op: "Identity"
  input: "map/while/comnet_model/rnn_2/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Identity_1"
  op: "Identity"
  input: "map/while/comnet_model/rnn_2/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Identity_2"
  op: "Identity"
  input: "map/while/comnet_model/rnn_2/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Identity_3"
  op: "Identity"
  input: "map/while/comnet_model/rnn_2/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/add/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/add"
  op: "Add"
  input: "map/while/comnet_model/rnn_2/while/Identity"
  input: "map/while/comnet_model/rnn_2/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
  input: "map/while/comnet_model/rnn_2/while/Identity_1"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/GreaterEqual"
  op: "GreaterEqual"
  input: "map/while/comnet_model/rnn_2/while/Identity_1"
  input: "map/while/comnet_model/rnn_2/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/GreaterEqual/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/concat_4/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_4"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_2/while/Identity_3"
  input: "gru_cell_1/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_4/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_4/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "gru_cell_1/concat_4"
  input: "gru_cell_1/MatMul_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_4/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_4/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_4"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_4"
  input: "gru_cell_1/BiasAdd_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Sigmoid_2"
  op: "Sigmoid"
  input: "gru_cell_1/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/Const_2"
  op: "Const"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell_1/split_2/split_dim"
  op: "Const"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/split_2"
  op: "Split"
  input: "gru_cell_1/split_2/split_dim"
  input: "gru_cell_1/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell_1/mul_6"
  op: "Mul"
  input: "gru_cell_1/split_2"
  input: "map/while/comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_5/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_5"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "gru_cell_1/mul_6"
  input: "gru_cell_1/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_5/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_5/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "gru_cell_1/concat_5"
  input: "gru_cell_1/MatMul_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_5/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_5/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_5"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_5"
  input: "gru_cell_1/BiasAdd_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Tanh_2"
  op: "Tanh"
  input: "gru_cell_1/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_7"
  op: "Mul"
  input: "gru_cell_1/split_2:1"
  input: "map/while/comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_2/x"
  op: "Const"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_2"
  op: "Sub"
  input: "gru_cell_1/sub_2/x"
  input: "gru_cell_1/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_8"
  op: "Mul"
  input: "gru_cell_1/sub_2"
  input: "gru_cell_1/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/add_2"
  op: "Add"
  input: "gru_cell_1/mul_7"
  input: "gru_cell_1/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Select"
  op: "Select"
  input: "map/while/comnet_model/rnn_2/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_2/while/Select/Enter"
  input: "gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Select/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Select_1"
  op: "Select"
  input: "map/while/comnet_model/rnn_2/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_2/while/Identity_3"
  input: "gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/comnet_model/rnn_2/while/Identity_1"
  input: "map/while/comnet_model/rnn_2/while/Select"
  input: "map/while/comnet_model/rnn_2/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/add_1"
  op: "Add"
  input: "map/while/comnet_model/rnn_2/while/Identity_1"
  input: "map/while/comnet_model/rnn_2/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/NextIteration"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_2/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_2/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/NextIteration_3"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_2/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Exit"
  op: "Exit"
  input: "map/while/comnet_model/rnn_2/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Exit_1"
  op: "Exit"
  input: "map/while/comnet_model/rnn_2/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Exit_2"
  op: "Exit"
  input: "map/while/comnet_model/rnn_2/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/while/Exit_3"
  op: "Exit"
  input: "map/while/comnet_model/rnn_2/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_2/TensorArray"
  input: "map/while/comnet_model/rnn_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayStack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayStack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayStack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_2/TensorArrayStack/range/start"
  input: "map/while/comnet_model/rnn_2/TensorArrayStack/TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_2/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_2/TensorArray"
  input: "map/while/comnet_model/rnn_2/TensorArrayStack/range"
  input: "map/while/comnet_model/rnn_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/Rank_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/range_1/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/range_1/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/range_1"
  op: "Range"
  input: "map/while/comnet_model/rnn_2/range_1/start"
  input: "map/while/comnet_model/rnn_2/Rank_1"
  input: "map/while/comnet_model/rnn_2/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/concat_2/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_2/concat_2/values_0"
  input: "map/while/comnet_model/rnn_2/range_1"
  input: "map/while/comnet_model/rnn_2/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_2/transpose_1"
  op: "Transpose"
  input: "map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_2/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherNd_2"
  op: "GatherNd"
  input: "map/while/comnet_model/rnn_2/transpose_1"
  input: "map/while/comnet_model/stack_6"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/UnsortedSegmentSum_2"
  op: "UnsortedSegmentSum"
  input: "map/while/comnet_model/GatherNd_2"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/TensorArrayReadV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_4/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_4"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_2"
  input: "gru_cell/add_1"
  input: "gru_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_4"
  op: "MatMul"
  input: "gru_cell/concat_4"
  input: "gru_cell/MatMul_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "gru_cell/MatMul_4"
  input: "gru_cell/BiasAdd_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "gru_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell/split_2/split_dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/split_2"
  op: "Split"
  input: "gru_cell/split_2/split_dim"
  input: "gru_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell/mul_6"
  op: "Mul"
  input: "gru_cell/split_2"
  input: "gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_5/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_5"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_2"
  input: "gru_cell/mul_6"
  input: "gru_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_5"
  op: "MatMul"
  input: "gru_cell/concat_5"
  input: "gru_cell/MatMul_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "gru_cell/MatMul_5"
  input: "gru_cell/BiasAdd_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Tanh_2"
  op: "Tanh"
  input: "gru_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_7"
  op: "Mul"
  input: "gru_cell/split_2:1"
  input: "gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/sub_2/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/sub_2"
  op: "Sub"
  input: "gru_cell/sub_2/x"
  input: "gru_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_8"
  op: "Mul"
  input: "gru_cell/sub_2"
  input: "gru_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/add_2"
  op: "Add"
  input: "gru_cell/mul_7"
  input: "gru_cell/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_3/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_3"
  op: "GatherV2"
  input: "gru_cell/add_2"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/comnet_model/GatherV2_3/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_8"
  op: "Pack"
  input: "map/while/comnet_model/strided_slice_1"
  input: "map/while/comnet_model/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/Max_3"
  op: "Max"
  input: "map/while/comnet_model/strided_slice_2"
  input: "map/while/comnet_model/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/add_3/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/add_3"
  op: "Add"
  input: "map/while/comnet_model/Max_3"
  input: "map/while/comnet_model/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_9/2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_9"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/add_3"
  input: "map/while/comnet_model/stack_9/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_3/Shape"
  op: "Shape"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_3/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_3"
  op: "Fill"
  input: "map/while/comnet_model/ones_like_3/Shape"
  input: "map/while/comnet_model/ones_like_3/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/SegmentSum_3"
  op: "SegmentSum"
  input: "map/while/comnet_model/ones_like_3"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ScatterNd_3"
  op: "ScatterNd"
  input: "map/while/comnet_model/stack_8"
  input: "map/while/comnet_model/GatherV2_3"
  input: "map/while/comnet_model/stack_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Rank"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_3/range/start"
  input: "map/while/comnet_model/rnn_3/Rank"
  input: "map/while/comnet_model/rnn_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/concat/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_3/concat/values_0"
  input: "map/while/comnet_model/rnn_3/range"
  input: "map/while/comnet_model/rnn_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/transpose"
  op: "Transpose"
  input: "map/while/comnet_model/ScatterNd_3"
  input: "map/while/comnet_model/rnn_3/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/ToInt32"
  op: "Cast"
  input: "map/while/comnet_model/SegmentSum_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/sequence_length"
  op: "Identity"
  input: "map/while/comnet_model/rnn_3/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_3/Shape"
  input: "map/while/comnet_model/rnn_3/strided_slice/stack"
  input: "map/while/comnet_model/rnn_3/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/rnn_3/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/stack"
  op: "Pack"
  input: "map/while/comnet_model/rnn_3/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Equal"
  op: "Equal"
  input: "map/while/comnet_model/rnn_3/Shape_1"
  input: "map/while/comnet_model/rnn_3/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/All"
  op: "All"
  input: "map/while/comnet_model/rnn_3/Equal"
  input: "map/while/comnet_model/rnn_3/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Assert/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_3/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Assert/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Assert/Assert/data_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_3/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Assert/Assert/data_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Assert/Assert"
  op: "Assert"
  input: "map/while/comnet_model/rnn_3/All"
  input: "map/while/comnet_model/rnn_3/Assert/Assert/data_0"
  input: "map/while/comnet_model/rnn_3/stack"
  input: "map/while/comnet_model/rnn_3/Assert/Assert/data_2"
  input: "map/while/comnet_model/rnn_3/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/CheckSeqLen"
  op: "Identity"
  input: "map/while/comnet_model/rnn_3/sequence_length"
  input: "^map/while/comnet_model/rnn_3/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Shape_2"
  op: "Shape"
  input: "map/while/comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice_1/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_3/Shape_2"
  input: "map/while/comnet_model/rnn_3/strided_slice_1/stack"
  input: "map/while/comnet_model/rnn_3/strided_slice_1/stack_1"
  input: "map/while/comnet_model/rnn_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Shape_3"
  op: "Shape"
  input: "map/while/comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice_2/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_3/Shape_3"
  input: "map/while/comnet_model/rnn_3/strided_slice_2/stack"
  input: "map/while/comnet_model/rnn_3/strided_slice_2/stack_1"
  input: "map/while/comnet_model/rnn_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/ExpandDims"
  op: "ExpandDims"
  input: "map/while/comnet_model/rnn_3/strided_slice_2"
  input: "map/while/comnet_model/rnn_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_3/ExpandDims"
  input: "map/while/comnet_model/rnn_3/Const_1"
  input: "map/while/comnet_model/rnn_3/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/zeros"
  op: "Fill"
  input: "map/while/comnet_model/rnn_3/concat_1"
  input: "map/while/comnet_model/rnn_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Min"
  op: "Min"
  input: "map/while/comnet_model/rnn_3/CheckSeqLen"
  input: "map/while/comnet_model/rnn_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Max"
  op: "Max"
  input: "map/while/comnet_model/rnn_3/CheckSeqLen"
  input: "map/while/comnet_model/rnn_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/time"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArray"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_3/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_3/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/Shape"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/range/start"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/strided_slice"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/while/comnet_model/rnn_3/TensorArray_1"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/range"
  input: "map/while/comnet_model/rnn_3/transpose"
  input: "map/while/comnet_model/rnn_3/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Maximum/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Maximum"
  op: "Maximum"
  input: "map/while/comnet_model/rnn_3/Maximum/x"
  input: "map/while/comnet_model/rnn_3/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Minimum"
  op: "Minimum"
  input: "map/while/comnet_model/rnn_3/strided_slice_1"
  input: "map/while/comnet_model/rnn_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/iteration_counter"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Enter_2"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Enter_3"
  op: "Enter"
  input: "map/while/comnet_model/rnn_2/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Merge"
  op: "Merge"
  input: "map/while/comnet_model/rnn_3/while/Enter"
  input: "map/while/comnet_model/rnn_3/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Merge_1"
  op: "Merge"
  input: "map/while/comnet_model/rnn_3/while/Enter_1"
  input: "map/while/comnet_model/rnn_3/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Merge_2"
  op: "Merge"
  input: "map/while/comnet_model/rnn_3/while/Enter_2"
  input: "map/while/comnet_model/rnn_3/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Merge_3"
  op: "Merge"
  input: "map/while/comnet_model/rnn_3/while/Enter_3"
  input: "map/while/comnet_model/rnn_3/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Less"
  op: "Less"
  input: "map/while/comnet_model/rnn_3/while/Merge"
  input: "map/while/comnet_model/rnn_3/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Less/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Less_1"
  op: "Less"
  input: "map/while/comnet_model/rnn_3/while/Merge_1"
  input: "map/while/comnet_model/rnn_3/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Less_1/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/comnet_model/rnn_3/while/Less"
  input: "map/while/comnet_model/rnn_3/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/LoopCond"
  op: "LoopCond"
  input: "map/while/comnet_model/rnn_3/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Switch"
  op: "Switch"
  input: "map/while/comnet_model/rnn_3/while/Merge"
  input: "map/while/comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Switch_1"
  op: "Switch"
  input: "map/while/comnet_model/rnn_3/while/Merge_1"
  input: "map/while/comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Switch_2"
  op: "Switch"
  input: "map/while/comnet_model/rnn_3/while/Merge_2"
  input: "map/while/comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Switch_3"
  op: "Switch"
  input: "map/while/comnet_model/rnn_3/while/Merge_3"
  input: "map/while/comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Identity"
  op: "Identity"
  input: "map/while/comnet_model/rnn_3/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Identity_1"
  op: "Identity"
  input: "map/while/comnet_model/rnn_3/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Identity_2"
  op: "Identity"
  input: "map/while/comnet_model/rnn_3/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Identity_3"
  op: "Identity"
  input: "map/while/comnet_model/rnn_3/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/add/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/add"
  op: "Add"
  input: "map/while/comnet_model/rnn_3/while/Identity"
  input: "map/while/comnet_model/rnn_3/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
  input: "map/while/comnet_model/rnn_3/while/Identity_1"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/GreaterEqual"
  op: "GreaterEqual"
  input: "map/while/comnet_model/rnn_3/while/Identity_1"
  input: "map/while/comnet_model/rnn_3/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/GreaterEqual/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/concat_6/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_6"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_3/while/Identity_3"
  input: "gru_cell_1/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_6/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_6/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_6"
  op: "MatMul"
  input: "gru_cell_1/concat_6"
  input: "gru_cell_1/MatMul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_6/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_6/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_6"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_6"
  input: "gru_cell_1/BiasAdd_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Sigmoid_3"
  op: "Sigmoid"
  input: "gru_cell_1/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/Const_3"
  op: "Const"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell_1/split_3/split_dim"
  op: "Const"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/split_3"
  op: "Split"
  input: "gru_cell_1/split_3/split_dim"
  input: "gru_cell_1/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell_1/mul_9"
  op: "Mul"
  input: "gru_cell_1/split_3"
  input: "map/while/comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_7/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_7"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "gru_cell_1/mul_9"
  input: "gru_cell_1/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_7/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_7/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_7"
  op: "MatMul"
  input: "gru_cell_1/concat_7"
  input: "gru_cell_1/MatMul_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_7/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_7/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_7"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_7"
  input: "gru_cell_1/BiasAdd_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Tanh_3"
  op: "Tanh"
  input: "gru_cell_1/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_10"
  op: "Mul"
  input: "gru_cell_1/split_3:1"
  input: "map/while/comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_3/x"
  op: "Const"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_3"
  op: "Sub"
  input: "gru_cell_1/sub_3/x"
  input: "gru_cell_1/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_11"
  op: "Mul"
  input: "gru_cell_1/sub_3"
  input: "gru_cell_1/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/add_3"
  op: "Add"
  input: "gru_cell_1/mul_10"
  input: "gru_cell_1/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Select"
  op: "Select"
  input: "map/while/comnet_model/rnn_3/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_3/while/Select/Enter"
  input: "gru_cell_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Select/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Select_1"
  op: "Select"
  input: "map/while/comnet_model/rnn_3/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_3/while/Identity_3"
  input: "gru_cell_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/comnet_model/rnn_3/while/Identity_1"
  input: "map/while/comnet_model/rnn_3/while/Select"
  input: "map/while/comnet_model/rnn_3/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/add_1"
  op: "Add"
  input: "map/while/comnet_model/rnn_3/while/Identity_1"
  input: "map/while/comnet_model/rnn_3/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/NextIteration"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_3/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_3/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/NextIteration_3"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_3/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Exit"
  op: "Exit"
  input: "map/while/comnet_model/rnn_3/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Exit_1"
  op: "Exit"
  input: "map/while/comnet_model/rnn_3/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Exit_2"
  op: "Exit"
  input: "map/while/comnet_model/rnn_3/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/while/Exit_3"
  op: "Exit"
  input: "map/while/comnet_model/rnn_3/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_3/TensorArray"
  input: "map/while/comnet_model/rnn_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayStack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayStack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayStack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_3/TensorArrayStack/range/start"
  input: "map/while/comnet_model/rnn_3/TensorArrayStack/TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_3/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_3/TensorArray"
  input: "map/while/comnet_model/rnn_3/TensorArrayStack/range"
  input: "map/while/comnet_model/rnn_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/Rank_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/range_1/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/range_1/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/range_1"
  op: "Range"
  input: "map/while/comnet_model/rnn_3/range_1/start"
  input: "map/while/comnet_model/rnn_3/Rank_1"
  input: "map/while/comnet_model/rnn_3/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/concat_2/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_3/concat_2/values_0"
  input: "map/while/comnet_model/rnn_3/range_1"
  input: "map/while/comnet_model/rnn_3/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_3/transpose_1"
  op: "Transpose"
  input: "map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_3/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherNd_3"
  op: "GatherNd"
  input: "map/while/comnet_model/rnn_3/transpose_1"
  input: "map/while/comnet_model/stack_8"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/UnsortedSegmentSum_3"
  op: "UnsortedSegmentSum"
  input: "map/while/comnet_model/GatherNd_3"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/TensorArrayReadV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_6/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_6"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_3"
  input: "gru_cell/add_2"
  input: "gru_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_6"
  op: "MatMul"
  input: "gru_cell/concat_6"
  input: "gru_cell/MatMul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "gru_cell/MatMul_6"
  input: "gru_cell/BiasAdd_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "gru_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell/split_3/split_dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/split_3"
  op: "Split"
  input: "gru_cell/split_3/split_dim"
  input: "gru_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell/mul_9"
  op: "Mul"
  input: "gru_cell/split_3"
  input: "gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_7/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_7"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_3"
  input: "gru_cell/mul_9"
  input: "gru_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_7"
  op: "MatMul"
  input: "gru_cell/concat_7"
  input: "gru_cell/MatMul_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "gru_cell/MatMul_7"
  input: "gru_cell/BiasAdd_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Tanh_3"
  op: "Tanh"
  input: "gru_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_10"
  op: "Mul"
  input: "gru_cell/split_3:1"
  input: "gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/sub_3/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/sub_3"
  op: "Sub"
  input: "gru_cell/sub_3/x"
  input: "gru_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_11"
  op: "Mul"
  input: "gru_cell/sub_3"
  input: "gru_cell/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/add_3"
  op: "Add"
  input: "gru_cell/mul_10"
  input: "gru_cell/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_4/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_4"
  op: "GatherV2"
  input: "gru_cell/add_3"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/comnet_model/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_10"
  op: "Pack"
  input: "map/while/comnet_model/strided_slice_1"
  input: "map/while/comnet_model/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/Max_4"
  op: "Max"
  input: "map/while/comnet_model/strided_slice_2"
  input: "map/while/comnet_model/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/add_4/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/add_4"
  op: "Add"
  input: "map/while/comnet_model/Max_4"
  input: "map/while/comnet_model/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_11/2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_11"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/add_4"
  input: "map/while/comnet_model/stack_11/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_4/Shape"
  op: "Shape"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_4/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_4"
  op: "Fill"
  input: "map/while/comnet_model/ones_like_4/Shape"
  input: "map/while/comnet_model/ones_like_4/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/SegmentSum_4"
  op: "SegmentSum"
  input: "map/while/comnet_model/ones_like_4"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ScatterNd_4"
  op: "ScatterNd"
  input: "map/while/comnet_model/stack_10"
  input: "map/while/comnet_model/GatherV2_4"
  input: "map/while/comnet_model/stack_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Rank"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_4/range/start"
  input: "map/while/comnet_model/rnn_4/Rank"
  input: "map/while/comnet_model/rnn_4/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/concat/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_4/concat/values_0"
  input: "map/while/comnet_model/rnn_4/range"
  input: "map/while/comnet_model/rnn_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/transpose"
  op: "Transpose"
  input: "map/while/comnet_model/ScatterNd_4"
  input: "map/while/comnet_model/rnn_4/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/ToInt32"
  op: "Cast"
  input: "map/while/comnet_model/SegmentSum_4"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/sequence_length"
  op: "Identity"
  input: "map/while/comnet_model/rnn_4/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_4/Shape"
  input: "map/while/comnet_model/rnn_4/strided_slice/stack"
  input: "map/while/comnet_model/rnn_4/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/rnn_4/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/stack"
  op: "Pack"
  input: "map/while/comnet_model/rnn_4/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Equal"
  op: "Equal"
  input: "map/while/comnet_model/rnn_4/Shape_1"
  input: "map/while/comnet_model/rnn_4/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/All"
  op: "All"
  input: "map/while/comnet_model/rnn_4/Equal"
  input: "map/while/comnet_model/rnn_4/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Assert/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_4/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Assert/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Assert/Assert/data_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_4/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Assert/Assert/data_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Assert/Assert"
  op: "Assert"
  input: "map/while/comnet_model/rnn_4/All"
  input: "map/while/comnet_model/rnn_4/Assert/Assert/data_0"
  input: "map/while/comnet_model/rnn_4/stack"
  input: "map/while/comnet_model/rnn_4/Assert/Assert/data_2"
  input: "map/while/comnet_model/rnn_4/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/CheckSeqLen"
  op: "Identity"
  input: "map/while/comnet_model/rnn_4/sequence_length"
  input: "^map/while/comnet_model/rnn_4/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Shape_2"
  op: "Shape"
  input: "map/while/comnet_model/rnn_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice_1/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_4/Shape_2"
  input: "map/while/comnet_model/rnn_4/strided_slice_1/stack"
  input: "map/while/comnet_model/rnn_4/strided_slice_1/stack_1"
  input: "map/while/comnet_model/rnn_4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Shape_3"
  op: "Shape"
  input: "map/while/comnet_model/rnn_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice_2/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_4/Shape_3"
  input: "map/while/comnet_model/rnn_4/strided_slice_2/stack"
  input: "map/while/comnet_model/rnn_4/strided_slice_2/stack_1"
  input: "map/while/comnet_model/rnn_4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/ExpandDims"
  op: "ExpandDims"
  input: "map/while/comnet_model/rnn_4/strided_slice_2"
  input: "map/while/comnet_model/rnn_4/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_4/ExpandDims"
  input: "map/while/comnet_model/rnn_4/Const_1"
  input: "map/while/comnet_model/rnn_4/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/zeros"
  op: "Fill"
  input: "map/while/comnet_model/rnn_4/concat_1"
  input: "map/while/comnet_model/rnn_4/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Min"
  op: "Min"
  input: "map/while/comnet_model/rnn_4/CheckSeqLen"
  input: "map/while/comnet_model/rnn_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Max"
  op: "Max"
  input: "map/while/comnet_model/rnn_4/CheckSeqLen"
  input: "map/while/comnet_model/rnn_4/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/time"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArray"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_4/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_4/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_4/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_4/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/Shape"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/strided_slice/stack"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/range/start"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/strided_slice"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/while/comnet_model/rnn_4/TensorArray_1"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/range"
  input: "map/while/comnet_model/rnn_4/transpose"
  input: "map/while/comnet_model/rnn_4/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Maximum/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Maximum"
  op: "Maximum"
  input: "map/while/comnet_model/rnn_4/Maximum/x"
  input: "map/while/comnet_model/rnn_4/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Minimum"
  op: "Minimum"
  input: "map/while/comnet_model/rnn_4/strided_slice_1"
  input: "map/while/comnet_model/rnn_4/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/iteration_counter"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Enter_2"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Enter_3"
  op: "Enter"
  input: "map/while/comnet_model/rnn_3/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Merge"
  op: "Merge"
  input: "map/while/comnet_model/rnn_4/while/Enter"
  input: "map/while/comnet_model/rnn_4/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Merge_1"
  op: "Merge"
  input: "map/while/comnet_model/rnn_4/while/Enter_1"
  input: "map/while/comnet_model/rnn_4/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Merge_2"
  op: "Merge"
  input: "map/while/comnet_model/rnn_4/while/Enter_2"
  input: "map/while/comnet_model/rnn_4/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Merge_3"
  op: "Merge"
  input: "map/while/comnet_model/rnn_4/while/Enter_3"
  input: "map/while/comnet_model/rnn_4/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Less"
  op: "Less"
  input: "map/while/comnet_model/rnn_4/while/Merge"
  input: "map/while/comnet_model/rnn_4/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Less/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Less_1"
  op: "Less"
  input: "map/while/comnet_model/rnn_4/while/Merge_1"
  input: "map/while/comnet_model/rnn_4/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Less_1/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/comnet_model/rnn_4/while/Less"
  input: "map/while/comnet_model/rnn_4/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/LoopCond"
  op: "LoopCond"
  input: "map/while/comnet_model/rnn_4/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Switch"
  op: "Switch"
  input: "map/while/comnet_model/rnn_4/while/Merge"
  input: "map/while/comnet_model/rnn_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Switch_1"
  op: "Switch"
  input: "map/while/comnet_model/rnn_4/while/Merge_1"
  input: "map/while/comnet_model/rnn_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Switch_2"
  op: "Switch"
  input: "map/while/comnet_model/rnn_4/while/Merge_2"
  input: "map/while/comnet_model/rnn_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Switch_3"
  op: "Switch"
  input: "map/while/comnet_model/rnn_4/while/Merge_3"
  input: "map/while/comnet_model/rnn_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Identity"
  op: "Identity"
  input: "map/while/comnet_model/rnn_4/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Identity_1"
  op: "Identity"
  input: "map/while/comnet_model/rnn_4/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Identity_2"
  op: "Identity"
  input: "map/while/comnet_model/rnn_4/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Identity_3"
  op: "Identity"
  input: "map/while/comnet_model/rnn_4/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/add/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/add"
  op: "Add"
  input: "map/while/comnet_model/rnn_4/while/Identity"
  input: "map/while/comnet_model/rnn_4/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
  input: "map/while/comnet_model/rnn_4/while/Identity_1"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/GreaterEqual"
  op: "GreaterEqual"
  input: "map/while/comnet_model/rnn_4/while/Identity_1"
  input: "map/while/comnet_model/rnn_4/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/GreaterEqual/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/concat_8/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_8"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_4/while/Identity_3"
  input: "gru_cell_1/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_8/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_8/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_8"
  op: "MatMul"
  input: "gru_cell_1/concat_8"
  input: "gru_cell_1/MatMul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_8/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_8/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_8"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_8"
  input: "gru_cell_1/BiasAdd_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Sigmoid_4"
  op: "Sigmoid"
  input: "gru_cell_1/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/Const_4"
  op: "Const"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell_1/split_4/split_dim"
  op: "Const"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/split_4"
  op: "Split"
  input: "gru_cell_1/split_4/split_dim"
  input: "gru_cell_1/Sigmoid_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell_1/mul_12"
  op: "Mul"
  input: "gru_cell_1/split_4"
  input: "map/while/comnet_model/rnn_4/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_9/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_9"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3"
  input: "gru_cell_1/mul_12"
  input: "gru_cell_1/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_9/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_9/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_9"
  op: "MatMul"
  input: "gru_cell_1/concat_9"
  input: "gru_cell_1/MatMul_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_9/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_9/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_9"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_9"
  input: "gru_cell_1/BiasAdd_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Tanh_4"
  op: "Tanh"
  input: "gru_cell_1/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_13"
  op: "Mul"
  input: "gru_cell_1/split_4:1"
  input: "map/while/comnet_model/rnn_4/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_4/x"
  op: "Const"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_4"
  op: "Sub"
  input: "gru_cell_1/sub_4/x"
  input: "gru_cell_1/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_14"
  op: "Mul"
  input: "gru_cell_1/sub_4"
  input: "gru_cell_1/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/add_4"
  op: "Add"
  input: "gru_cell_1/mul_13"
  input: "gru_cell_1/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Select"
  op: "Select"
  input: "map/while/comnet_model/rnn_4/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_4/while/Select/Enter"
  input: "gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Select/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Select_1"
  op: "Select"
  input: "map/while/comnet_model/rnn_4/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_4/while/Identity_3"
  input: "gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/comnet_model/rnn_4/while/Identity_1"
  input: "map/while/comnet_model/rnn_4/while/Select"
  input: "map/while/comnet_model/rnn_4/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/add_1"
  op: "Add"
  input: "map/while/comnet_model/rnn_4/while/Identity_1"
  input: "map/while/comnet_model/rnn_4/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/NextIteration"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_4/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_4/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/NextIteration_3"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_4/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Exit"
  op: "Exit"
  input: "map/while/comnet_model/rnn_4/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Exit_1"
  op: "Exit"
  input: "map/while/comnet_model/rnn_4/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Exit_2"
  op: "Exit"
  input: "map/while/comnet_model/rnn_4/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/while/Exit_3"
  op: "Exit"
  input: "map/while/comnet_model/rnn_4/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_4/TensorArray"
  input: "map/while/comnet_model/rnn_4/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayStack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayStack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayStack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_4/TensorArrayStack/range/start"
  input: "map/while/comnet_model/rnn_4/TensorArrayStack/TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_4/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_4/TensorArray"
  input: "map/while/comnet_model/rnn_4/TensorArrayStack/range"
  input: "map/while/comnet_model/rnn_4/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/Rank_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/range_1/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/range_1/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/range_1"
  op: "Range"
  input: "map/while/comnet_model/rnn_4/range_1/start"
  input: "map/while/comnet_model/rnn_4/Rank_1"
  input: "map/while/comnet_model/rnn_4/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/concat_2/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_4/concat_2/values_0"
  input: "map/while/comnet_model/rnn_4/range_1"
  input: "map/while/comnet_model/rnn_4/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_4/transpose_1"
  op: "Transpose"
  input: "map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_4/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherNd_4"
  op: "GatherNd"
  input: "map/while/comnet_model/rnn_4/transpose_1"
  input: "map/while/comnet_model/stack_10"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/UnsortedSegmentSum_4"
  op: "UnsortedSegmentSum"
  input: "map/while/comnet_model/GatherNd_4"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/TensorArrayReadV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_8/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_8"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_4"
  input: "gru_cell/add_3"
  input: "gru_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_8"
  op: "MatMul"
  input: "gru_cell/concat_8"
  input: "gru_cell/MatMul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "gru_cell/MatMul_8"
  input: "gru_cell/BiasAdd_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "gru_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell/split_4/split_dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/split_4"
  op: "Split"
  input: "gru_cell/split_4/split_dim"
  input: "gru_cell/Sigmoid_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell/mul_12"
  op: "Mul"
  input: "gru_cell/split_4"
  input: "gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_9/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_9"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_4"
  input: "gru_cell/mul_12"
  input: "gru_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_9"
  op: "MatMul"
  input: "gru_cell/concat_9"
  input: "gru_cell/MatMul_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "gru_cell/MatMul_9"
  input: "gru_cell/BiasAdd_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Tanh_4"
  op: "Tanh"
  input: "gru_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_13"
  op: "Mul"
  input: "gru_cell/split_4:1"
  input: "gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/sub_4/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/sub_4"
  op: "Sub"
  input: "gru_cell/sub_4/x"
  input: "gru_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_14"
  op: "Mul"
  input: "gru_cell/sub_4"
  input: "gru_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/add_4"
  op: "Add"
  input: "gru_cell/mul_13"
  input: "gru_cell/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_5/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_5"
  op: "GatherV2"
  input: "gru_cell/add_4"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/comnet_model/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_12"
  op: "Pack"
  input: "map/while/comnet_model/strided_slice_1"
  input: "map/while/comnet_model/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/Const_5"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/Max_5"
  op: "Max"
  input: "map/while/comnet_model/strided_slice_2"
  input: "map/while/comnet_model/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/add_5/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/add_5"
  op: "Add"
  input: "map/while/comnet_model/Max_5"
  input: "map/while/comnet_model/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_13/2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_13"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/add_5"
  input: "map/while/comnet_model/stack_13/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_5/Shape"
  op: "Shape"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_5/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_5"
  op: "Fill"
  input: "map/while/comnet_model/ones_like_5/Shape"
  input: "map/while/comnet_model/ones_like_5/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/SegmentSum_5"
  op: "SegmentSum"
  input: "map/while/comnet_model/ones_like_5"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ScatterNd_5"
  op: "ScatterNd"
  input: "map/while/comnet_model/stack_12"
  input: "map/while/comnet_model/GatherV2_5"
  input: "map/while/comnet_model/stack_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Rank"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_5/range/start"
  input: "map/while/comnet_model/rnn_5/Rank"
  input: "map/while/comnet_model/rnn_5/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/concat/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_5/concat/values_0"
  input: "map/while/comnet_model/rnn_5/range"
  input: "map/while/comnet_model/rnn_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/transpose"
  op: "Transpose"
  input: "map/while/comnet_model/ScatterNd_5"
  input: "map/while/comnet_model/rnn_5/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/ToInt32"
  op: "Cast"
  input: "map/while/comnet_model/SegmentSum_5"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/sequence_length"
  op: "Identity"
  input: "map/while/comnet_model/rnn_5/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_5/Shape"
  input: "map/while/comnet_model/rnn_5/strided_slice/stack"
  input: "map/while/comnet_model/rnn_5/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/rnn_5/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/stack"
  op: "Pack"
  input: "map/while/comnet_model/rnn_5/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Equal"
  op: "Equal"
  input: "map/while/comnet_model/rnn_5/Shape_1"
  input: "map/while/comnet_model/rnn_5/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/All"
  op: "All"
  input: "map/while/comnet_model/rnn_5/Equal"
  input: "map/while/comnet_model/rnn_5/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Assert/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_5/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Assert/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Assert/Assert/data_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_5/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Assert/Assert/data_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Assert/Assert"
  op: "Assert"
  input: "map/while/comnet_model/rnn_5/All"
  input: "map/while/comnet_model/rnn_5/Assert/Assert/data_0"
  input: "map/while/comnet_model/rnn_5/stack"
  input: "map/while/comnet_model/rnn_5/Assert/Assert/data_2"
  input: "map/while/comnet_model/rnn_5/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/CheckSeqLen"
  op: "Identity"
  input: "map/while/comnet_model/rnn_5/sequence_length"
  input: "^map/while/comnet_model/rnn_5/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Shape_2"
  op: "Shape"
  input: "map/while/comnet_model/rnn_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice_1/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_5/Shape_2"
  input: "map/while/comnet_model/rnn_5/strided_slice_1/stack"
  input: "map/while/comnet_model/rnn_5/strided_slice_1/stack_1"
  input: "map/while/comnet_model/rnn_5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Shape_3"
  op: "Shape"
  input: "map/while/comnet_model/rnn_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice_2/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_5/Shape_3"
  input: "map/while/comnet_model/rnn_5/strided_slice_2/stack"
  input: "map/while/comnet_model/rnn_5/strided_slice_2/stack_1"
  input: "map/while/comnet_model/rnn_5/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/ExpandDims"
  op: "ExpandDims"
  input: "map/while/comnet_model/rnn_5/strided_slice_2"
  input: "map/while/comnet_model/rnn_5/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_5/ExpandDims"
  input: "map/while/comnet_model/rnn_5/Const_1"
  input: "map/while/comnet_model/rnn_5/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/zeros"
  op: "Fill"
  input: "map/while/comnet_model/rnn_5/concat_1"
  input: "map/while/comnet_model/rnn_5/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Min"
  op: "Min"
  input: "map/while/comnet_model/rnn_5/CheckSeqLen"
  input: "map/while/comnet_model/rnn_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Max"
  op: "Max"
  input: "map/while/comnet_model/rnn_5/CheckSeqLen"
  input: "map/while/comnet_model/rnn_5/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/time"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArray"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_5/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_5/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_5/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_5/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/Shape"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/strided_slice/stack"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/range/start"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/strided_slice"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/while/comnet_model/rnn_5/TensorArray_1"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/range"
  input: "map/while/comnet_model/rnn_5/transpose"
  input: "map/while/comnet_model/rnn_5/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Maximum/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Maximum"
  op: "Maximum"
  input: "map/while/comnet_model/rnn_5/Maximum/x"
  input: "map/while/comnet_model/rnn_5/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Minimum"
  op: "Minimum"
  input: "map/while/comnet_model/rnn_5/strided_slice_1"
  input: "map/while/comnet_model/rnn_5/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/iteration_counter"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Enter_2"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Enter_3"
  op: "Enter"
  input: "map/while/comnet_model/rnn_4/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Merge"
  op: "Merge"
  input: "map/while/comnet_model/rnn_5/while/Enter"
  input: "map/while/comnet_model/rnn_5/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Merge_1"
  op: "Merge"
  input: "map/while/comnet_model/rnn_5/while/Enter_1"
  input: "map/while/comnet_model/rnn_5/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Merge_2"
  op: "Merge"
  input: "map/while/comnet_model/rnn_5/while/Enter_2"
  input: "map/while/comnet_model/rnn_5/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Merge_3"
  op: "Merge"
  input: "map/while/comnet_model/rnn_5/while/Enter_3"
  input: "map/while/comnet_model/rnn_5/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Less"
  op: "Less"
  input: "map/while/comnet_model/rnn_5/while/Merge"
  input: "map/while/comnet_model/rnn_5/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Less/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Less_1"
  op: "Less"
  input: "map/while/comnet_model/rnn_5/while/Merge_1"
  input: "map/while/comnet_model/rnn_5/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Less_1/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/comnet_model/rnn_5/while/Less"
  input: "map/while/comnet_model/rnn_5/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/LoopCond"
  op: "LoopCond"
  input: "map/while/comnet_model/rnn_5/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Switch"
  op: "Switch"
  input: "map/while/comnet_model/rnn_5/while/Merge"
  input: "map/while/comnet_model/rnn_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Switch_1"
  op: "Switch"
  input: "map/while/comnet_model/rnn_5/while/Merge_1"
  input: "map/while/comnet_model/rnn_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Switch_2"
  op: "Switch"
  input: "map/while/comnet_model/rnn_5/while/Merge_2"
  input: "map/while/comnet_model/rnn_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Switch_3"
  op: "Switch"
  input: "map/while/comnet_model/rnn_5/while/Merge_3"
  input: "map/while/comnet_model/rnn_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Identity"
  op: "Identity"
  input: "map/while/comnet_model/rnn_5/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Identity_1"
  op: "Identity"
  input: "map/while/comnet_model/rnn_5/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Identity_2"
  op: "Identity"
  input: "map/while/comnet_model/rnn_5/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Identity_3"
  op: "Identity"
  input: "map/while/comnet_model/rnn_5/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/add/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/add"
  op: "Add"
  input: "map/while/comnet_model/rnn_5/while/Identity"
  input: "map/while/comnet_model/rnn_5/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
  input: "map/while/comnet_model/rnn_5/while/Identity_1"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/GreaterEqual"
  op: "GreaterEqual"
  input: "map/while/comnet_model/rnn_5/while/Identity_1"
  input: "map/while/comnet_model/rnn_5/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/GreaterEqual/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/concat_10/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_10"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_5/while/Identity_3"
  input: "gru_cell_1/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_10/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_10/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_10"
  op: "MatMul"
  input: "gru_cell_1/concat_10"
  input: "gru_cell_1/MatMul_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_10/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_10/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_10"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_10"
  input: "gru_cell_1/BiasAdd_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Sigmoid_5"
  op: "Sigmoid"
  input: "gru_cell_1/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/Const_5"
  op: "Const"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell_1/split_5/split_dim"
  op: "Const"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/split_5"
  op: "Split"
  input: "gru_cell_1/split_5/split_dim"
  input: "gru_cell_1/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell_1/mul_15"
  op: "Mul"
  input: "gru_cell_1/split_5"
  input: "map/while/comnet_model/rnn_5/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_11/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_11"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3"
  input: "gru_cell_1/mul_15"
  input: "gru_cell_1/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_11/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_11/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_11"
  op: "MatMul"
  input: "gru_cell_1/concat_11"
  input: "gru_cell_1/MatMul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_11/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_11/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_11"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_11"
  input: "gru_cell_1/BiasAdd_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Tanh_5"
  op: "Tanh"
  input: "gru_cell_1/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_16"
  op: "Mul"
  input: "gru_cell_1/split_5:1"
  input: "map/while/comnet_model/rnn_5/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_5/x"
  op: "Const"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_5"
  op: "Sub"
  input: "gru_cell_1/sub_5/x"
  input: "gru_cell_1/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_17"
  op: "Mul"
  input: "gru_cell_1/sub_5"
  input: "gru_cell_1/Tanh_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/add_5"
  op: "Add"
  input: "gru_cell_1/mul_16"
  input: "gru_cell_1/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Select"
  op: "Select"
  input: "map/while/comnet_model/rnn_5/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_5/while/Select/Enter"
  input: "gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Select/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Select_1"
  op: "Select"
  input: "map/while/comnet_model/rnn_5/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_5/while/Identity_3"
  input: "gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/comnet_model/rnn_5/while/Identity_1"
  input: "map/while/comnet_model/rnn_5/while/Select"
  input: "map/while/comnet_model/rnn_5/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/add_1"
  op: "Add"
  input: "map/while/comnet_model/rnn_5/while/Identity_1"
  input: "map/while/comnet_model/rnn_5/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/NextIteration"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_5/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_5/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/NextIteration_3"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_5/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Exit"
  op: "Exit"
  input: "map/while/comnet_model/rnn_5/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Exit_1"
  op: "Exit"
  input: "map/while/comnet_model/rnn_5/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Exit_2"
  op: "Exit"
  input: "map/while/comnet_model/rnn_5/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/while/Exit_3"
  op: "Exit"
  input: "map/while/comnet_model/rnn_5/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_5/TensorArray"
  input: "map/while/comnet_model/rnn_5/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayStack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayStack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayStack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_5/TensorArrayStack/range/start"
  input: "map/while/comnet_model/rnn_5/TensorArrayStack/TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_5/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_5/TensorArray"
  input: "map/while/comnet_model/rnn_5/TensorArrayStack/range"
  input: "map/while/comnet_model/rnn_5/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/Rank_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/range_1/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/range_1/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/range_1"
  op: "Range"
  input: "map/while/comnet_model/rnn_5/range_1/start"
  input: "map/while/comnet_model/rnn_5/Rank_1"
  input: "map/while/comnet_model/rnn_5/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/concat_2/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_5/concat_2/values_0"
  input: "map/while/comnet_model/rnn_5/range_1"
  input: "map/while/comnet_model/rnn_5/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_5/transpose_1"
  op: "Transpose"
  input: "map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_5/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherNd_5"
  op: "GatherNd"
  input: "map/while/comnet_model/rnn_5/transpose_1"
  input: "map/while/comnet_model/stack_12"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/UnsortedSegmentSum_5"
  op: "UnsortedSegmentSum"
  input: "map/while/comnet_model/GatherNd_5"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/TensorArrayReadV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_10/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_10"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_5"
  input: "gru_cell/add_4"
  input: "gru_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_10"
  op: "MatMul"
  input: "gru_cell/concat_10"
  input: "gru_cell/MatMul_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "gru_cell/MatMul_10"
  input: "gru_cell/BiasAdd_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "gru_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/Const_5"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell/split_5/split_dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/split_5"
  op: "Split"
  input: "gru_cell/split_5/split_dim"
  input: "gru_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell/mul_15"
  op: "Mul"
  input: "gru_cell/split_5"
  input: "gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_11/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_11"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_5"
  input: "gru_cell/mul_15"
  input: "gru_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_11"
  op: "MatMul"
  input: "gru_cell/concat_11"
  input: "gru_cell/MatMul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "gru_cell/MatMul_11"
  input: "gru_cell/BiasAdd_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Tanh_5"
  op: "Tanh"
  input: "gru_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_16"
  op: "Mul"
  input: "gru_cell/split_5:1"
  input: "gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/sub_5/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/sub_5"
  op: "Sub"
  input: "gru_cell/sub_5/x"
  input: "gru_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_17"
  op: "Mul"
  input: "gru_cell/sub_5"
  input: "gru_cell/Tanh_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/add_5"
  op: "Add"
  input: "gru_cell/mul_16"
  input: "gru_cell/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_6/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_6"
  op: "GatherV2"
  input: "gru_cell/add_5"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/comnet_model/GatherV2_6/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_14"
  op: "Pack"
  input: "map/while/comnet_model/strided_slice_1"
  input: "map/while/comnet_model/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/Const_6"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/Max_6"
  op: "Max"
  input: "map/while/comnet_model/strided_slice_2"
  input: "map/while/comnet_model/Const_6"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/add_6/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/add_6"
  op: "Add"
  input: "map/while/comnet_model/Max_6"
  input: "map/while/comnet_model/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_15/2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_15"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/add_6"
  input: "map/while/comnet_model/stack_15/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_6/Shape"
  op: "Shape"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_6/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_6"
  op: "Fill"
  input: "map/while/comnet_model/ones_like_6/Shape"
  input: "map/while/comnet_model/ones_like_6/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/SegmentSum_6"
  op: "SegmentSum"
  input: "map/while/comnet_model/ones_like_6"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ScatterNd_6"
  op: "ScatterNd"
  input: "map/while/comnet_model/stack_14"
  input: "map/while/comnet_model/GatherV2_6"
  input: "map/while/comnet_model/stack_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Rank"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_6/range/start"
  input: "map/while/comnet_model/rnn_6/Rank"
  input: "map/while/comnet_model/rnn_6/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/concat/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_6/concat/values_0"
  input: "map/while/comnet_model/rnn_6/range"
  input: "map/while/comnet_model/rnn_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/transpose"
  op: "Transpose"
  input: "map/while/comnet_model/ScatterNd_6"
  input: "map/while/comnet_model/rnn_6/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/ToInt32"
  op: "Cast"
  input: "map/while/comnet_model/SegmentSum_6"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/sequence_length"
  op: "Identity"
  input: "map/while/comnet_model/rnn_6/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_6/Shape"
  input: "map/while/comnet_model/rnn_6/strided_slice/stack"
  input: "map/while/comnet_model/rnn_6/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/rnn_6/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/stack"
  op: "Pack"
  input: "map/while/comnet_model/rnn_6/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Equal"
  op: "Equal"
  input: "map/while/comnet_model/rnn_6/Shape_1"
  input: "map/while/comnet_model/rnn_6/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/All"
  op: "All"
  input: "map/while/comnet_model/rnn_6/Equal"
  input: "map/while/comnet_model/rnn_6/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Assert/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_6/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Assert/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Assert/Assert/data_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_6/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Assert/Assert/data_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Assert/Assert"
  op: "Assert"
  input: "map/while/comnet_model/rnn_6/All"
  input: "map/while/comnet_model/rnn_6/Assert/Assert/data_0"
  input: "map/while/comnet_model/rnn_6/stack"
  input: "map/while/comnet_model/rnn_6/Assert/Assert/data_2"
  input: "map/while/comnet_model/rnn_6/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/CheckSeqLen"
  op: "Identity"
  input: "map/while/comnet_model/rnn_6/sequence_length"
  input: "^map/while/comnet_model/rnn_6/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Shape_2"
  op: "Shape"
  input: "map/while/comnet_model/rnn_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice_1/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_6/Shape_2"
  input: "map/while/comnet_model/rnn_6/strided_slice_1/stack"
  input: "map/while/comnet_model/rnn_6/strided_slice_1/stack_1"
  input: "map/while/comnet_model/rnn_6/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Shape_3"
  op: "Shape"
  input: "map/while/comnet_model/rnn_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice_2/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_6/Shape_3"
  input: "map/while/comnet_model/rnn_6/strided_slice_2/stack"
  input: "map/while/comnet_model/rnn_6/strided_slice_2/stack_1"
  input: "map/while/comnet_model/rnn_6/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/ExpandDims"
  op: "ExpandDims"
  input: "map/while/comnet_model/rnn_6/strided_slice_2"
  input: "map/while/comnet_model/rnn_6/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_6/ExpandDims"
  input: "map/while/comnet_model/rnn_6/Const_1"
  input: "map/while/comnet_model/rnn_6/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/zeros"
  op: "Fill"
  input: "map/while/comnet_model/rnn_6/concat_1"
  input: "map/while/comnet_model/rnn_6/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Min"
  op: "Min"
  input: "map/while/comnet_model/rnn_6/CheckSeqLen"
  input: "map/while/comnet_model/rnn_6/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Max"
  op: "Max"
  input: "map/while/comnet_model/rnn_6/CheckSeqLen"
  input: "map/while/comnet_model/rnn_6/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/time"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArray"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_6/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_6/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_6/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_6/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/Shape"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/strided_slice/stack"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/range/start"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/strided_slice"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/while/comnet_model/rnn_6/TensorArray_1"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/range"
  input: "map/while/comnet_model/rnn_6/transpose"
  input: "map/while/comnet_model/rnn_6/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Maximum/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Maximum"
  op: "Maximum"
  input: "map/while/comnet_model/rnn_6/Maximum/x"
  input: "map/while/comnet_model/rnn_6/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Minimum"
  op: "Minimum"
  input: "map/while/comnet_model/rnn_6/strided_slice_1"
  input: "map/while/comnet_model/rnn_6/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/iteration_counter"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Enter_2"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Enter_3"
  op: "Enter"
  input: "map/while/comnet_model/rnn_5/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Merge"
  op: "Merge"
  input: "map/while/comnet_model/rnn_6/while/Enter"
  input: "map/while/comnet_model/rnn_6/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Merge_1"
  op: "Merge"
  input: "map/while/comnet_model/rnn_6/while/Enter_1"
  input: "map/while/comnet_model/rnn_6/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Merge_2"
  op: "Merge"
  input: "map/while/comnet_model/rnn_6/while/Enter_2"
  input: "map/while/comnet_model/rnn_6/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Merge_3"
  op: "Merge"
  input: "map/while/comnet_model/rnn_6/while/Enter_3"
  input: "map/while/comnet_model/rnn_6/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Less"
  op: "Less"
  input: "map/while/comnet_model/rnn_6/while/Merge"
  input: "map/while/comnet_model/rnn_6/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Less/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Less_1"
  op: "Less"
  input: "map/while/comnet_model/rnn_6/while/Merge_1"
  input: "map/while/comnet_model/rnn_6/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Less_1/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/comnet_model/rnn_6/while/Less"
  input: "map/while/comnet_model/rnn_6/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/LoopCond"
  op: "LoopCond"
  input: "map/while/comnet_model/rnn_6/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Switch"
  op: "Switch"
  input: "map/while/comnet_model/rnn_6/while/Merge"
  input: "map/while/comnet_model/rnn_6/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Switch_1"
  op: "Switch"
  input: "map/while/comnet_model/rnn_6/while/Merge_1"
  input: "map/while/comnet_model/rnn_6/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Switch_2"
  op: "Switch"
  input: "map/while/comnet_model/rnn_6/while/Merge_2"
  input: "map/while/comnet_model/rnn_6/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Switch_3"
  op: "Switch"
  input: "map/while/comnet_model/rnn_6/while/Merge_3"
  input: "map/while/comnet_model/rnn_6/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Identity"
  op: "Identity"
  input: "map/while/comnet_model/rnn_6/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Identity_1"
  op: "Identity"
  input: "map/while/comnet_model/rnn_6/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Identity_2"
  op: "Identity"
  input: "map/while/comnet_model/rnn_6/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Identity_3"
  op: "Identity"
  input: "map/while/comnet_model/rnn_6/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/add/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/add"
  op: "Add"
  input: "map/while/comnet_model/rnn_6/while/Identity"
  input: "map/while/comnet_model/rnn_6/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
  input: "map/while/comnet_model/rnn_6/while/Identity_1"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/GreaterEqual"
  op: "GreaterEqual"
  input: "map/while/comnet_model/rnn_6/while/Identity_1"
  input: "map/while/comnet_model/rnn_6/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/GreaterEqual/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/concat_12/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_12"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_6/while/Identity_3"
  input: "gru_cell_1/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_12/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_12/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_12"
  op: "MatMul"
  input: "gru_cell_1/concat_12"
  input: "gru_cell_1/MatMul_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_12/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_12/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_12"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_12"
  input: "gru_cell_1/BiasAdd_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Sigmoid_6"
  op: "Sigmoid"
  input: "gru_cell_1/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/Const_6"
  op: "Const"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell_1/split_6/split_dim"
  op: "Const"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/split_6"
  op: "Split"
  input: "gru_cell_1/split_6/split_dim"
  input: "gru_cell_1/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell_1/mul_18"
  op: "Mul"
  input: "gru_cell_1/split_6"
  input: "map/while/comnet_model/rnn_6/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_13/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_13"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3"
  input: "gru_cell_1/mul_18"
  input: "gru_cell_1/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_13/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_13/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_13"
  op: "MatMul"
  input: "gru_cell_1/concat_13"
  input: "gru_cell_1/MatMul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_13/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_13/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_13"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_13"
  input: "gru_cell_1/BiasAdd_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Tanh_6"
  op: "Tanh"
  input: "gru_cell_1/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_19"
  op: "Mul"
  input: "gru_cell_1/split_6:1"
  input: "map/while/comnet_model/rnn_6/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_6/x"
  op: "Const"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_6"
  op: "Sub"
  input: "gru_cell_1/sub_6/x"
  input: "gru_cell_1/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_20"
  op: "Mul"
  input: "gru_cell_1/sub_6"
  input: "gru_cell_1/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/add_6"
  op: "Add"
  input: "gru_cell_1/mul_19"
  input: "gru_cell_1/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Select"
  op: "Select"
  input: "map/while/comnet_model/rnn_6/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_6/while/Select/Enter"
  input: "gru_cell_1/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Select/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Select_1"
  op: "Select"
  input: "map/while/comnet_model/rnn_6/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_6/while/Identity_3"
  input: "gru_cell_1/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/comnet_model/rnn_6/while/Identity_1"
  input: "map/while/comnet_model/rnn_6/while/Select"
  input: "map/while/comnet_model/rnn_6/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/add_1"
  op: "Add"
  input: "map/while/comnet_model/rnn_6/while/Identity_1"
  input: "map/while/comnet_model/rnn_6/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/NextIteration"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_6/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_6/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/NextIteration_3"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_6/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Exit"
  op: "Exit"
  input: "map/while/comnet_model/rnn_6/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Exit_1"
  op: "Exit"
  input: "map/while/comnet_model/rnn_6/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Exit_2"
  op: "Exit"
  input: "map/while/comnet_model/rnn_6/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/while/Exit_3"
  op: "Exit"
  input: "map/while/comnet_model/rnn_6/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_6/TensorArray"
  input: "map/while/comnet_model/rnn_6/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayStack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayStack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayStack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_6/TensorArrayStack/range/start"
  input: "map/while/comnet_model/rnn_6/TensorArrayStack/TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_6/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_6/TensorArray"
  input: "map/while/comnet_model/rnn_6/TensorArrayStack/range"
  input: "map/while/comnet_model/rnn_6/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/Rank_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/range_1/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/range_1/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/range_1"
  op: "Range"
  input: "map/while/comnet_model/rnn_6/range_1/start"
  input: "map/while/comnet_model/rnn_6/Rank_1"
  input: "map/while/comnet_model/rnn_6/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/concat_2/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_6/concat_2/values_0"
  input: "map/while/comnet_model/rnn_6/range_1"
  input: "map/while/comnet_model/rnn_6/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_6/transpose_1"
  op: "Transpose"
  input: "map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_6/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherNd_6"
  op: "GatherNd"
  input: "map/while/comnet_model/rnn_6/transpose_1"
  input: "map/while/comnet_model/stack_14"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/UnsortedSegmentSum_6"
  op: "UnsortedSegmentSum"
  input: "map/while/comnet_model/GatherNd_6"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/TensorArrayReadV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_12/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_12"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_6"
  input: "gru_cell/add_5"
  input: "gru_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_12"
  op: "MatMul"
  input: "gru_cell/concat_12"
  input: "gru_cell/MatMul_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "gru_cell/MatMul_12"
  input: "gru_cell/BiasAdd_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "gru_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/Const_6"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell/split_6/split_dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/split_6"
  op: "Split"
  input: "gru_cell/split_6/split_dim"
  input: "gru_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell/mul_18"
  op: "Mul"
  input: "gru_cell/split_6"
  input: "gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_13/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_13"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_6"
  input: "gru_cell/mul_18"
  input: "gru_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_13"
  op: "MatMul"
  input: "gru_cell/concat_13"
  input: "gru_cell/MatMul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "gru_cell/MatMul_13"
  input: "gru_cell/BiasAdd_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Tanh_6"
  op: "Tanh"
  input: "gru_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_19"
  op: "Mul"
  input: "gru_cell/split_6:1"
  input: "gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/sub_6/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/sub_6"
  op: "Sub"
  input: "gru_cell/sub_6/x"
  input: "gru_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_20"
  op: "Mul"
  input: "gru_cell/sub_6"
  input: "gru_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/add_6"
  op: "Add"
  input: "gru_cell/mul_19"
  input: "gru_cell/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_7/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherV2_7"
  op: "GatherV2"
  input: "gru_cell/add_6"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/comnet_model/GatherV2_7/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_16"
  op: "Pack"
  input: "map/while/comnet_model/strided_slice_1"
  input: "map/while/comnet_model/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/Const_7"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/Max_7"
  op: "Max"
  input: "map/while/comnet_model/strided_slice_2"
  input: "map/while/comnet_model/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/add_7/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/add_7"
  op: "Add"
  input: "map/while/comnet_model/Max_7"
  input: "map/while/comnet_model/add_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_17/2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/stack_17"
  op: "Pack"
  input: "map/while/TensorArrayReadV3_2"
  input: "map/while/comnet_model/add_7"
  input: "map/while/comnet_model/stack_17/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_7/Shape"
  op: "Shape"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_7/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ones_like_7"
  op: "Fill"
  input: "map/while/comnet_model/ones_like_7/Shape"
  input: "map/while/comnet_model/ones_like_7/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/SegmentSum_7"
  op: "SegmentSum"
  input: "map/while/comnet_model/ones_like_7"
  input: "map/while/comnet_model/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/ScatterNd_7"
  op: "ScatterNd"
  input: "map/while/comnet_model/stack_16"
  input: "map/while/comnet_model/GatherV2_7"
  input: "map/while/comnet_model/stack_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Rank"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_7/range/start"
  input: "map/while/comnet_model/rnn_7/Rank"
  input: "map/while/comnet_model/rnn_7/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/concat/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/concat/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/concat"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_7/concat/values_0"
  input: "map/while/comnet_model/rnn_7/range"
  input: "map/while/comnet_model/rnn_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/transpose"
  op: "Transpose"
  input: "map/while/comnet_model/ScatterNd_7"
  input: "map/while/comnet_model/rnn_7/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/ToInt32"
  op: "Cast"
  input: "map/while/comnet_model/SegmentSum_7"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/sequence_length"
  op: "Identity"
  input: "map/while/comnet_model/rnn_7/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_7/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_7/Shape"
  input: "map/while/comnet_model/rnn_7/strided_slice/stack"
  input: "map/while/comnet_model/rnn_7/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_7/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/rnn_7/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/stack"
  op: "Pack"
  input: "map/while/comnet_model/rnn_7/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Equal"
  op: "Equal"
  input: "map/while/comnet_model/rnn_7/Shape_1"
  input: "map/while/comnet_model/rnn_7/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/All"
  op: "All"
  input: "map/while/comnet_model/rnn_7/Equal"
  input: "map/while/comnet_model/rnn_7/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Assert/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_7/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Assert/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Assert/Assert/data_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor map/while/comnet_model/rnn_7/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Assert/Assert/data_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Assert/Assert"
  op: "Assert"
  input: "map/while/comnet_model/rnn_7/All"
  input: "map/while/comnet_model/rnn_7/Assert/Assert/data_0"
  input: "map/while/comnet_model/rnn_7/stack"
  input: "map/while/comnet_model/rnn_7/Assert/Assert/data_2"
  input: "map/while/comnet_model/rnn_7/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/CheckSeqLen"
  op: "Identity"
  input: "map/while/comnet_model/rnn_7/sequence_length"
  input: "^map/while/comnet_model/rnn_7/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Shape_2"
  op: "Shape"
  input: "map/while/comnet_model/rnn_7/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice_1/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice_1/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice_1/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice_1"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_7/Shape_2"
  input: "map/while/comnet_model/rnn_7/strided_slice_1/stack"
  input: "map/while/comnet_model/rnn_7/strided_slice_1/stack_1"
  input: "map/while/comnet_model/rnn_7/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Shape_3"
  op: "Shape"
  input: "map/while/comnet_model/rnn_7/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice_2/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice_2/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice_2/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/strided_slice_2"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_7/Shape_3"
  input: "map/while/comnet_model/rnn_7/strided_slice_2/stack"
  input: "map/while/comnet_model/rnn_7/strided_slice_2/stack_1"
  input: "map/while/comnet_model/rnn_7/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/ExpandDims"
  op: "ExpandDims"
  input: "map/while/comnet_model/rnn_7/strided_slice_2"
  input: "map/while/comnet_model/rnn_7/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Const_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/concat_1/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/concat_1"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_7/ExpandDims"
  input: "map/while/comnet_model/rnn_7/Const_1"
  input: "map/while/comnet_model/rnn_7/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/zeros/Const"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/zeros"
  op: "Fill"
  input: "map/while/comnet_model/rnn_7/concat_1"
  input: "map/while/comnet_model/rnn_7/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Const_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Min"
  op: "Min"
  input: "map/while/comnet_model/rnn_7/CheckSeqLen"
  input: "map/while/comnet_model/rnn_7/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Const_3"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Max"
  op: "Max"
  input: "map/while/comnet_model/rnn_7/CheckSeqLen"
  input: "map/while/comnet_model/rnn_7/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/time"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArray"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_7/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_7/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/while/comnet_model/rnn_7/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "map/while/comnet_model/rnn_7/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_7/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/Shape"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/strided_slice/stack"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/range/start"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/strided_slice"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/while/comnet_model/rnn_7/TensorArray_1"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/range"
  input: "map/while/comnet_model/rnn_7/transpose"
  input: "map/while/comnet_model/rnn_7/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Maximum/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Maximum"
  op: "Maximum"
  input: "map/while/comnet_model/rnn_7/Maximum/x"
  input: "map/while/comnet_model/rnn_7/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Minimum"
  op: "Minimum"
  input: "map/while/comnet_model/rnn_7/strided_slice_1"
  input: "map/while/comnet_model/rnn_7/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/iteration_counter"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Enter_2"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Enter_3"
  op: "Enter"
  input: "map/while/comnet_model/rnn_6/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Merge"
  op: "Merge"
  input: "map/while/comnet_model/rnn_7/while/Enter"
  input: "map/while/comnet_model/rnn_7/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Merge_1"
  op: "Merge"
  input: "map/while/comnet_model/rnn_7/while/Enter_1"
  input: "map/while/comnet_model/rnn_7/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Merge_2"
  op: "Merge"
  input: "map/while/comnet_model/rnn_7/while/Enter_2"
  input: "map/while/comnet_model/rnn_7/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Merge_3"
  op: "Merge"
  input: "map/while/comnet_model/rnn_7/while/Enter_3"
  input: "map/while/comnet_model/rnn_7/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Less"
  op: "Less"
  input: "map/while/comnet_model/rnn_7/while/Merge"
  input: "map/while/comnet_model/rnn_7/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Less/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Less_1"
  op: "Less"
  input: "map/while/comnet_model/rnn_7/while/Merge_1"
  input: "map/while/comnet_model/rnn_7/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Less_1/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/comnet_model/rnn_7/while/Less"
  input: "map/while/comnet_model/rnn_7/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/LoopCond"
  op: "LoopCond"
  input: "map/while/comnet_model/rnn_7/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Switch"
  op: "Switch"
  input: "map/while/comnet_model/rnn_7/while/Merge"
  input: "map/while/comnet_model/rnn_7/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Switch_1"
  op: "Switch"
  input: "map/while/comnet_model/rnn_7/while/Merge_1"
  input: "map/while/comnet_model/rnn_7/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Switch_2"
  op: "Switch"
  input: "map/while/comnet_model/rnn_7/while/Merge_2"
  input: "map/while/comnet_model/rnn_7/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Switch_3"
  op: "Switch"
  input: "map/while/comnet_model/rnn_7/while/Merge_3"
  input: "map/while/comnet_model/rnn_7/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Identity"
  op: "Identity"
  input: "map/while/comnet_model/rnn_7/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Identity_1"
  op: "Identity"
  input: "map/while/comnet_model/rnn_7/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Identity_2"
  op: "Identity"
  input: "map/while/comnet_model/rnn_7/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Identity_3"
  op: "Identity"
  input: "map/while/comnet_model/rnn_7/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/add/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/add"
  op: "Add"
  input: "map/while/comnet_model/rnn_7/while/Identity"
  input: "map/while/comnet_model/rnn_7/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
  input: "map/while/comnet_model/rnn_7/while/Identity_1"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/GreaterEqual"
  op: "GreaterEqual"
  input: "map/while/comnet_model/rnn_7/while/Identity_1"
  input: "map/while/comnet_model/rnn_7/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/GreaterEqual/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/concat_14/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_14"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3"
  input: "map/while/comnet_model/rnn_7/while/Identity_3"
  input: "gru_cell_1/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_14/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_14/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_14"
  op: "MatMul"
  input: "gru_cell_1/concat_14"
  input: "gru_cell_1/MatMul_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_14/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_14/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_14"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_14"
  input: "gru_cell_1/BiasAdd_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Sigmoid_7"
  op: "Sigmoid"
  input: "gru_cell_1/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/Const_7"
  op: "Const"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell_1/split_7/split_dim"
  op: "Const"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/split_7"
  op: "Split"
  input: "gru_cell_1/split_7/split_dim"
  input: "gru_cell_1/Sigmoid_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell_1/mul_21"
  op: "Mul"
  input: "gru_cell_1/split_7"
  input: "map/while/comnet_model/rnn_7/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_15/axis"
  op: "Const"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell_1/concat_15"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3"
  input: "gru_cell_1/mul_21"
  input: "gru_cell_1/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/MatMul_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/MatMul_15/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/MatMul_15/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/MatMul_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/MatMul_15"
  op: "MatMul"
  input: "gru_cell_1/concat_15"
  input: "gru_cell_1/MatMul_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/BiasAdd_15/ReadVariableOp/Enter"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_15/ReadVariableOp/Enter"
  op: "Enter"
  input: "gru_cell_1/BiasAdd_1/ReadVariableOp/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_cell_1/BiasAdd_15"
  op: "BiasAdd"
  input: "gru_cell_1/MatMul_15"
  input: "gru_cell_1/BiasAdd_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell_1/Tanh_7"
  op: "Tanh"
  input: "gru_cell_1/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_22"
  op: "Mul"
  input: "gru_cell_1/split_7:1"
  input: "map/while/comnet_model/rnn_7/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_7/x"
  op: "Const"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell_1/sub_7"
  op: "Sub"
  input: "gru_cell_1/sub_7/x"
  input: "gru_cell_1/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/mul_23"
  op: "Mul"
  input: "gru_cell_1/sub_7"
  input: "gru_cell_1/Tanh_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/add_7"
  op: "Add"
  input: "gru_cell_1/mul_22"
  input: "gru_cell_1/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Select"
  op: "Select"
  input: "map/while/comnet_model/rnn_7/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_7/while/Select/Enter"
  input: "gru_cell_1/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Select/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Select_1"
  op: "Select"
  input: "map/while/comnet_model/rnn_7/while/GreaterEqual"
  input: "map/while/comnet_model/rnn_7/while/Identity_3"
  input: "gru_cell_1/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/comnet_model/rnn_7/while/Identity_1"
  input: "map/while/comnet_model/rnn_7/while/Select"
  input: "map/while/comnet_model/rnn_7/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/while/comnet_model/rnn_7/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/add_1"
  op: "Add"
  input: "map/while/comnet_model/rnn_7/while/Identity_1"
  input: "map/while/comnet_model/rnn_7/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/NextIteration"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_7/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_7/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/NextIteration_3"
  op: "NextIteration"
  input: "map/while/comnet_model/rnn_7/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Exit"
  op: "Exit"
  input: "map/while/comnet_model/rnn_7/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Exit_1"
  op: "Exit"
  input: "map/while/comnet_model/rnn_7/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Exit_2"
  op: "Exit"
  input: "map/while/comnet_model/rnn_7/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/while/Exit_3"
  op: "Exit"
  input: "map/while/comnet_model/rnn_7/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_7/TensorArray"
  input: "map/while/comnet_model/rnn_7/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayStack/range/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayStack/range/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayStack/range"
  op: "Range"
  input: "map/while/comnet_model/rnn_7/TensorArrayStack/range/start"
  input: "map/while/comnet_model/rnn_7/TensorArrayStack/TensorArraySizeV3"
  input: "map/while/comnet_model/rnn_7/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_7/TensorArray"
  input: "map/while/comnet_model/rnn_7/TensorArrayStack/range"
  input: "map/while/comnet_model/rnn_7/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Const_4"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/Rank_1"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/range_1/start"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/range_1/delta"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/range_1"
  op: "Range"
  input: "map/while/comnet_model/rnn_7/range_1/start"
  input: "map/while/comnet_model/rnn_7/Rank_1"
  input: "map/while/comnet_model/rnn_7/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/concat_2/values_0"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/concat_2/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/concat_2"
  op: "ConcatV2"
  input: "map/while/comnet_model/rnn_7/concat_2/values_0"
  input: "map/while/comnet_model/rnn_7/range_1"
  input: "map/while/comnet_model/rnn_7/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/rnn_7/transpose_1"
  op: "Transpose"
  input: "map/while/comnet_model/rnn_7/TensorArrayStack/TensorArrayGatherV3"
  input: "map/while/comnet_model/rnn_7/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/GatherNd_7"
  op: "GatherNd"
  input: "map/while/comnet_model/rnn_7/transpose_1"
  input: "map/while/comnet_model/stack_16"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/UnsortedSegmentSum_7"
  op: "UnsortedSegmentSum"
  input: "map/while/comnet_model/GatherNd_7"
  input: "map/while/comnet_model/strided_slice"
  input: "map/while/TensorArrayReadV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_14/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_14"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_7"
  input: "gru_cell/add_6"
  input: "gru_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_14"
  op: "MatMul"
  input: "gru_cell/concat_14"
  input: "gru_cell/MatMul_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "gru_cell/MatMul_14"
  input: "gru_cell/BiasAdd_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "gru_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/Const_7"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_cell/split_7/split_dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/split_7"
  op: "Split"
  input: "gru_cell/split_7/split_dim"
  input: "gru_cell/Sigmoid_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_cell/mul_21"
  op: "Mul"
  input: "gru_cell/split_7"
  input: "gru_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/concat_15/axis"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_cell/concat_15"
  op: "ConcatV2"
  input: "map/while/comnet_model/UnsortedSegmentSum_7"
  input: "gru_cell/mul_21"
  input: "gru_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/MatMul_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/MatMul_15"
  op: "MatMul"
  input: "gru_cell/concat_15"
  input: "gru_cell/MatMul_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_cell/BiasAdd_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "gru_cell/MatMul_15"
  input: "gru_cell/BiasAdd_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_cell/Tanh_7"
  op: "Tanh"
  input: "gru_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_22"
  op: "Mul"
  input: "gru_cell/split_7:1"
  input: "gru_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/sub_7/x"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_cell/sub_7"
  op: "Sub"
  input: "gru_cell/sub_7/x"
  input: "gru_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/mul_23"
  op: "Mul"
  input: "gru_cell/sub_7"
  input: "gru_cell/Tanh_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/add_7"
  op: "Add"
  input: "gru_cell/mul_22"
  input: "gru_cell/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter"
  op: "Enter"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul"
  op: "MatMul"
  input: "map/while/comnet_model/rnn_7/while/Exit_3"
  input: "map/while/comnet_model/sequential/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd"
  op: "BiasAdd"
  input: "map/while/comnet_model/sequential/MatMul"
  input: "map/while/comnet_model/sequential/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/Selu"
  op: "Selu"
  input: "map/while/comnet_model/sequential/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/keep_prob"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/Shape"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/random_uniform/min"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/random_uniform/max"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "map/while/comnet_model/sequential/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/random_uniform/sub"
  op: "Sub"
  input: "map/while/comnet_model/sequential/dropout/random_uniform/max"
  input: "map/while/comnet_model/sequential/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/random_uniform/mul"
  op: "Mul"
  input: "map/while/comnet_model/sequential/dropout/random_uniform/RandomUniform"
  input: "map/while/comnet_model/sequential/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/random_uniform"
  op: "Add"
  input: "map/while/comnet_model/sequential/dropout/random_uniform/mul"
  input: "map/while/comnet_model/sequential/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/add"
  op: "Add"
  input: "map/while/comnet_model/sequential/dropout/keep_prob"
  input: "map/while/comnet_model/sequential/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/Floor"
  op: "Floor"
  input: "map/while/comnet_model/sequential/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/div"
  op: "RealDiv"
  input: "map/while/comnet_model/sequential/Selu"
  input: "map/while/comnet_model/sequential/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout/mul"
  op: "Mul"
  input: "map/while/comnet_model/sequential/dropout/div"
  input: "map/while/comnet_model/sequential/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul_1"
  op: "MatMul"
  input: "map/while/comnet_model/sequential/dropout/mul"
  input: "map/while/comnet_model/sequential/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd_1"
  op: "BiasAdd"
  input: "map/while/comnet_model/sequential/MatMul_1"
  input: "map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/Selu_1"
  op: "Selu"
  input: "map/while/comnet_model/sequential/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/keep_prob"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/Shape"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/random_uniform/min"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/random_uniform/max"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "map/while/comnet_model/sequential/dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/random_uniform/sub"
  op: "Sub"
  input: "map/while/comnet_model/sequential/dropout_1/random_uniform/max"
  input: "map/while/comnet_model/sequential/dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/random_uniform/mul"
  op: "Mul"
  input: "map/while/comnet_model/sequential/dropout_1/random_uniform/RandomUniform"
  input: "map/while/comnet_model/sequential/dropout_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/random_uniform"
  op: "Add"
  input: "map/while/comnet_model/sequential/dropout_1/random_uniform/mul"
  input: "map/while/comnet_model/sequential/dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/add"
  op: "Add"
  input: "map/while/comnet_model/sequential/dropout_1/keep_prob"
  input: "map/while/comnet_model/sequential/dropout_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/Floor"
  op: "Floor"
  input: "map/while/comnet_model/sequential/dropout_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/div"
  op: "RealDiv"
  input: "map/while/comnet_model/sequential/Selu_1"
  input: "map/while/comnet_model/sequential/dropout_1/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/dropout_1/mul"
  op: "Mul"
  input: "map/while/comnet_model/sequential/dropout_1/div"
  input: "map/while/comnet_model/sequential/dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter"
  op: "Enter"
  input: "dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/MatMul_2"
  op: "MatMul"
  input: "map/while/comnet_model/sequential/dropout_1/mul"
  input: "map/while/comnet_model/sequential/MatMul_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter"
  op: "Enter"
  input: "dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/comnet_model/sequential/BiasAdd_2"
  op: "BiasAdd"
  input: "map/while/comnet_model/sequential/MatMul_2"
  input: "map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "map/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/comnet_model/sequential/BiasAdd_2"
  input: "map/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/BiasAdd_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/TensorArray_7"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/BiasAdd_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/add_1/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/add_1"
  op: "Add"
  input: "map/while/Identity_1"
  input: "map/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration"
  op: "NextIteration"
  input: "map/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit"
  op: "Exit"
  input: "map/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit_1"
  op: "Exit"
  input: "map/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit_2"
  op: "Exit"
  input: "map/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/TensorArray_7"
  input: "map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range"
  op: "Range"
  input: "map/TensorArrayStack/range/start"
  input: "map/TensorArrayStack/TensorArraySizeV3"
  input: "map/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/TensorArray_7"
  input: "map/TensorArrayStack/range"
  input: "map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 2450
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "map/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "Squeeze"
  input: "IteratorGetNext:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/rank"
  op: "Rank"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_scalar/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_scalar"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_scalar/x"
  input: "mean_squared_error/assert_broadcastable/weights/rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  op: "ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  op: "Fill"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  op: "ConcatV2"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  op: "ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "a-b"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  op: "Size"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/assert_broadcastable/weights:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/SquaredDifference:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/NoOp"
  op: "NoOp"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/assert_broadcastable/weights:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_5"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/SquaredDifference:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_7"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert"
  op: "Assert"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_0"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_2"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_4"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_5"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_2"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_7"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_3"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/shape"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/shape"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_3"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/ToFloat/x"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Mul"
  op: "Mul"
  input: "mean_squared_error/SquaredDifference"
  input: "mean_squared_error/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Rank"
  op: "Rank"
  input: "mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/range/start"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/range/delta"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/range"
  op: "Range"
  input: "mean_squared_error/range/start"
  input: "mean_squared_error/Rank"
  input: "mean_squared_error/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum"
  op: "Sum"
  input: "mean_squared_error/Mul"
  input: "mean_squared_error/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like"
  op: "Fill"
  input: "mean_squared_error/ones_like/Shape"
  input: "mean_squared_error/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/mul_1"
  op: "Mul"
  input: "mean_squared_error/ones_like"
  input: "mean_squared_error/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Rank_1"
  op: "Rank"
  input: "mean_squared_error/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1/start"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1/delta"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1"
  op: "Range"
  input: "mean_squared_error/range_1/start"
  input: "mean_squared_error/Rank_1"
  input: "mean_squared_error/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum_1"
  op: "Sum"
  input: "mean_squared_error/mul_1"
  input: "mean_squared_error/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum_2"
  op: "Sum"
  input: "mean_squared_error/Sum"
  input: "mean_squared_error/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/Greater/y"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Greater"
  op: "Greater"
  input: "mean_squared_error/Sum_1"
  input: "mean_squared_error/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Equal/y"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Equal"
  op: "Equal"
  input: "mean_squared_error/Sum_1"
  input: "mean_squared_error/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like_1/Shape"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like_1/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like_1"
  op: "Fill"
  input: "mean_squared_error/ones_like_1/Shape"
  input: "mean_squared_error/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/Select"
  op: "Select"
  input: "mean_squared_error/Equal"
  input: "mean_squared_error/ones_like_1"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/div"
  op: "RealDiv"
  input: "mean_squared_error/Sum_2"
  input: "mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/zeros_like"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/value"
  op: "Select"
  input: "mean_squared_error/Greater"
  input: "mean_squared_error/div"
  input: "mean_squared_error/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "kernel/Regularizer/l2_regularizer/scale"
  input: "kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_1"
  op: "Identity"
  input: "Read_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "kernel/Regularizer_1/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "kernel/Regularizer_1/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Regularizer_1/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "kernel/Regularizer_1/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Regularizer_1/l2_regularizer"
  op: "Mul"
  input: "kernel/Regularizer_1/l2_regularizer/scale"
  input: "kernel/Regularizer_1/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Read_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_2"
  op: "Identity"
  input: "Read_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "kernel/Regularizer_2/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "kernel/Regularizer_2/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Regularizer_2/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "kernel/Regularizer_2/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Regularizer_2/l2_regularizer"
  op: "Mul"
  input: "kernel/Regularizer_2/l2_regularizer/scale"
  input: "kernel/Regularizer_2/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "add/x"
  input: "kernel/Regularizer/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "add"
  input: "kernel/Regularizer_1/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "add_1"
  input: "kernel/Regularizer_2/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "mean_squared_error/value"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "mean_squared_error/value"
  input: "add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "regularization_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "regularization_loss"
      }
    }
  }
}
node {
  name: "regularization_loss"
  op: "ScalarSummary"
  input: "regularization_loss/tags"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/StackPushV2"
  input: "^gradients/StackPushV2_1"
  input: "^gradients/StackPushV2_2"
  input: "^gradients/StackPushV2_3"
  input: "^gradients/StackPushV2_4"
  input: "^gradients/StackPushV2_5"
  input: "^gradients/StackPushV2_6"
  input: "^gradients/StackPushV2_7"
  input: "^gradients/gru_cell/MatMul_10_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_10_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_11_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_11_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_12_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_12_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_13_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_13_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_3_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_4_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_6_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_6_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_7_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_7_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_8_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_8_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_9_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_9_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/concat_11_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell/concat_11_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell/concat_13_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell/concat_13_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell/concat_3_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell/concat_3_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell/concat_5_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell/concat_5_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell/concat_7_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell/concat_7_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell/concat_9_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell/concat_9_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_10_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_10_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_11_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_11_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_12_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_13_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_13_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_14_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_14_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_15_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_16_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_16_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_17_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_17_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_18_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_19_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_19_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_20_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_20_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_5_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_5_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_6_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_7_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_7_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_8_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell/mul_8_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_9_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/StackPushV2"
  input: "^gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/StackPushV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_3"
  op: "Const"
  input: "^gradients/Add"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_4"
  op: "Enter"
  input: "gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_2"
  op: "Merge"
  input: "gradients/f_count_4"
  input: "gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "gradients/Merge_2"
  input: "map/while/comnet_model/rnn_7/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_1/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_7/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_1"
  op: "Add"
  input: "gradients/Switch_2:1"
  input: "gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_2"
  op: "NextIteration"
  input: "gradients/Add_1"
  input: "^gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell_1/concat_15_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell_1/concat_15_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell_1/mul_21_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_22_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_22_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_23_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_23_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_5"
  op: "Exit"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/f_acc"
  op: "StackV2"
  input: "gradients/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/Enter"
  op: "Enter"
  input: "gradients/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/StackPushV2"
  op: "StackPushV2"
  input: "gradients/Enter"
  input: "gradients/f_count_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/StackPopV2"
  op: "StackPopV2"
  input: "gradients/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_sync"
  op: "ControlTrigger"
  input: "^gradients/StackPopV2"
  input: "^gradients/StackPopV2_1"
  input: "^gradients/StackPopV2_2"
  input: "^gradients/StackPopV2_3"
  input: "^gradients/StackPopV2_4"
  input: "^gradients/StackPopV2_5"
  input: "^gradients/StackPopV2_6"
  input: "^gradients/StackPopV2_7"
  input: "^gradients/b_count_11"
  input: "^gradients/b_count_15"
  input: "^gradients/b_count_19"
  input: "^gradients/b_count_23"
  input: "^gradients/b_count_27"
  input: "^gradients/b_count_31"
  input: "^gradients/b_count_35"
  input: "^gradients/b_count_7"
  input: "^gradients/gru_cell/MatMul_10_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_10_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_11_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_11_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_12_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_12_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_13_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_13_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_4_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_6_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_6_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_7_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_8_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_8_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_9_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_9_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_10_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_10_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_11_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_11_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_12_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_13_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_13_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_14_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_14_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_15_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_16_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_16_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_17_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_17_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_18_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_19_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_19_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_20_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_20_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_5_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_5_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_6_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_7_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_7_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_8_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell/mul_8_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_9_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/StackPopV2"
  input: "^gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/StackPopV2"
  input: "^gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "gradients/b_count_4"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_5"
  op: "Enter"
  input: "gradients/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_3"
  op: "Merge"
  input: "gradients/b_count_5"
  input: "gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "gradients/Merge_3"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_6"
  op: "LoopCond"
  input: "gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "gradients/Merge_3"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_1"
  op: "Sub"
  input: "gradients/Switch_3:1"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_3"
  op: "NextIteration"
  input: "gradients/Sub_1"
  input: "^gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_7"
  op: "Exit"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_6"
  op: "Const"
  input: "^gradients/Add"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_7"
  op: "Enter"
  input: "gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_4"
  op: "Merge"
  input: "gradients/f_count_7"
  input: "gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "gradients/Merge_4"
  input: "map/while/comnet_model/rnn_6/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_2/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_6/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_2"
  op: "Add"
  input: "gradients/Switch_4:1"
  input: "gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_4"
  op: "NextIteration"
  input: "gradients/Add_2"
  input: "^gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell_1/concat_13_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell_1/concat_13_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell_1/mul_18_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_19_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_19_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_20_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_20_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_8"
  op: "Exit"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/f_acc_1"
  op: "StackV2"
  input: "gradients/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/Enter_1"
  op: "Enter"
  input: "gradients/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/Enter_1"
  input: "gradients/f_count_8"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_8"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_9"
  op: "Enter"
  input: "gradients/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_5"
  op: "Merge"
  input: "gradients/b_count_9"
  input: "gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "gradients/Merge_5"
  input: "gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_10"
  op: "LoopCond"
  input: "gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "gradients/Merge_5"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_2"
  op: "Sub"
  input: "gradients/Switch_5:1"
  input: "gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_5"
  op: "NextIteration"
  input: "gradients/Sub_2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_11"
  op: "Exit"
  input: "gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_9"
  op: "Const"
  input: "^gradients/Add"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_10"
  op: "Enter"
  input: "gradients/f_count_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_6"
  op: "Merge"
  input: "gradients/f_count_10"
  input: "gradients/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "gradients/Merge_6"
  input: "map/while/comnet_model/rnn_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_3/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_5/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_3"
  op: "Add"
  input: "gradients/Switch_6:1"
  input: "gradients/Add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_6"
  op: "NextIteration"
  input: "gradients/Add_3"
  input: "^gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell_1/concat_11_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell_1/concat_11_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell_1/mul_15_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_16_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_16_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_17_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_17_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_11"
  op: "Exit"
  input: "gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/f_acc_2"
  op: "StackV2"
  input: "gradients/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/Enter_2"
  op: "Enter"
  input: "gradients/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/StackPushV2_2"
  op: "StackPushV2"
  input: "gradients/Enter_2"
  input: "gradients/f_count_11"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/StackPopV2_2"
  op: "StackPopV2"
  input: "gradients/StackPopV2_2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/StackPopV2_2/Enter"
  op: "Enter"
  input: "gradients/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_12"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_13"
  op: "Enter"
  input: "gradients/StackPopV2_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_7"
  op: "Merge"
  input: "gradients/b_count_13"
  input: "gradients/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "gradients/Merge_7"
  input: "gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "gradients/b_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_14"
  op: "LoopCond"
  input: "gradients/GreaterEqual_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "gradients/Merge_7"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_3"
  op: "Sub"
  input: "gradients/Switch_7:1"
  input: "gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_7"
  op: "NextIteration"
  input: "gradients/Sub_3"
  input: "^gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_15"
  op: "Exit"
  input: "gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_12"
  op: "Const"
  input: "^gradients/Add"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_13"
  op: "Enter"
  input: "gradients/f_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_8"
  op: "Merge"
  input: "gradients/f_count_13"
  input: "gradients/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_8"
  op: "Switch"
  input: "gradients/Merge_8"
  input: "map/while/comnet_model/rnn_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_4/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_4/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_4"
  op: "Add"
  input: "gradients/Switch_8:1"
  input: "gradients/Add_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_8"
  op: "NextIteration"
  input: "gradients/Add_4"
  input: "^gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell_1/concat_9_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell_1/concat_9_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell_1/mul_12_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_13_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_13_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_14_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_14_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_14"
  op: "Exit"
  input: "gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/f_acc_3"
  op: "StackV2"
  input: "gradients/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/Enter_3"
  op: "Enter"
  input: "gradients/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/StackPushV2_3"
  op: "StackPushV2"
  input: "gradients/Enter_3"
  input: "gradients/f_count_14"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/StackPopV2_3"
  op: "StackPopV2"
  input: "gradients/StackPopV2_3/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/StackPopV2_3/Enter"
  op: "Enter"
  input: "gradients/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_16"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_17"
  op: "Enter"
  input: "gradients/StackPopV2_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_9"
  op: "Merge"
  input: "gradients/b_count_17"
  input: "gradients/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_4"
  op: "GreaterEqual"
  input: "gradients/Merge_9"
  input: "gradients/GreaterEqual_4/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_4/Enter"
  op: "Enter"
  input: "gradients/b_count_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_18"
  op: "LoopCond"
  input: "gradients/GreaterEqual_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_9"
  op: "Switch"
  input: "gradients/Merge_9"
  input: "gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_4"
  op: "Sub"
  input: "gradients/Switch_9:1"
  input: "gradients/GreaterEqual_4/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_9"
  op: "NextIteration"
  input: "gradients/Sub_4"
  input: "^gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_19"
  op: "Exit"
  input: "gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_15"
  op: "Const"
  input: "^gradients/Add"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_16"
  op: "Enter"
  input: "gradients/f_count_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_10"
  op: "Merge"
  input: "gradients/f_count_16"
  input: "gradients/NextIteration_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_10"
  op: "Switch"
  input: "gradients/Merge_10"
  input: "map/while/comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_5/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_5"
  op: "Add"
  input: "gradients/Switch_10:1"
  input: "gradients/Add_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_10"
  op: "NextIteration"
  input: "gradients/Add_5"
  input: "^gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell_1/concat_7_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell_1/concat_7_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell_1/mul_10_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_10_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_11_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_11_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_9_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_17"
  op: "Exit"
  input: "gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/f_acc_4"
  op: "StackV2"
  input: "gradients/Const_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/Enter_4"
  op: "Enter"
  input: "gradients/f_acc_4"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/StackPushV2_4"
  op: "StackPushV2"
  input: "gradients/Enter_4"
  input: "gradients/f_count_17"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/StackPopV2_4"
  op: "StackPopV2"
  input: "gradients/StackPopV2_4/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/StackPopV2_4/Enter"
  op: "Enter"
  input: "gradients/f_acc_4"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_20"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_21"
  op: "Enter"
  input: "gradients/StackPopV2_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_11"
  op: "Merge"
  input: "gradients/b_count_21"
  input: "gradients/NextIteration_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_5"
  op: "GreaterEqual"
  input: "gradients/Merge_11"
  input: "gradients/GreaterEqual_5/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_5/Enter"
  op: "Enter"
  input: "gradients/b_count_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_22"
  op: "LoopCond"
  input: "gradients/GreaterEqual_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_11"
  op: "Switch"
  input: "gradients/Merge_11"
  input: "gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_5"
  op: "Sub"
  input: "gradients/Switch_11:1"
  input: "gradients/GreaterEqual_5/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_11"
  op: "NextIteration"
  input: "gradients/Sub_5"
  input: "^gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_23"
  op: "Exit"
  input: "gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_18"
  op: "Const"
  input: "^gradients/Add"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_19"
  op: "Enter"
  input: "gradients/f_count_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_12"
  op: "Merge"
  input: "gradients/f_count_19"
  input: "gradients/NextIteration_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_12"
  op: "Switch"
  input: "gradients/Merge_12"
  input: "map/while/comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_6/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_6"
  op: "Add"
  input: "gradients/Switch_12:1"
  input: "gradients/Add_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_12"
  op: "NextIteration"
  input: "gradients/Add_6"
  input: "^gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell_1/concat_5_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell_1/concat_5_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell_1/mul_6_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_7_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_7_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_8_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_8_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_20"
  op: "Exit"
  input: "gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Const_5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/f_acc_5"
  op: "StackV2"
  input: "gradients/Const_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/Enter_5"
  op: "Enter"
  input: "gradients/f_acc_5"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/StackPushV2_5"
  op: "StackPushV2"
  input: "gradients/Enter_5"
  input: "gradients/f_count_20"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/StackPopV2_5"
  op: "StackPopV2"
  input: "gradients/StackPopV2_5/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/StackPopV2_5/Enter"
  op: "Enter"
  input: "gradients/f_acc_5"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_24"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_25"
  op: "Enter"
  input: "gradients/StackPopV2_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_13"
  op: "Merge"
  input: "gradients/b_count_25"
  input: "gradients/NextIteration_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_6"
  op: "GreaterEqual"
  input: "gradients/Merge_13"
  input: "gradients/GreaterEqual_6/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_6/Enter"
  op: "Enter"
  input: "gradients/b_count_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_26"
  op: "LoopCond"
  input: "gradients/GreaterEqual_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_13"
  op: "Switch"
  input: "gradients/Merge_13"
  input: "gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_6"
  op: "Sub"
  input: "gradients/Switch_13:1"
  input: "gradients/GreaterEqual_6/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_13"
  op: "NextIteration"
  input: "gradients/Sub_6"
  input: "^gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_27"
  op: "Exit"
  input: "gradients/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_21"
  op: "Const"
  input: "^gradients/Add"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_22"
  op: "Enter"
  input: "gradients/f_count_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_14"
  op: "Merge"
  input: "gradients/f_count_22"
  input: "gradients/NextIteration_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_14"
  op: "Switch"
  input: "gradients/Merge_14"
  input: "map/while/comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_7/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_7"
  op: "Add"
  input: "gradients/Switch_14:1"
  input: "gradients/Add_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_14"
  op: "NextIteration"
  input: "gradients/Add_7"
  input: "^gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell_1/concat_3_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell_1/concat_3_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_5_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_5_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_23"
  op: "Exit"
  input: "gradients/Switch_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/f_acc_6"
  op: "StackV2"
  input: "gradients/Const_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/Enter_6"
  op: "Enter"
  input: "gradients/f_acc_6"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/StackPushV2_6"
  op: "StackPushV2"
  input: "gradients/Enter_6"
  input: "gradients/f_count_23"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/StackPopV2_6"
  op: "StackPopV2"
  input: "gradients/StackPopV2_6/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/StackPopV2_6/Enter"
  op: "Enter"
  input: "gradients/f_acc_6"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_28"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_29"
  op: "Enter"
  input: "gradients/StackPopV2_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_15"
  op: "Merge"
  input: "gradients/b_count_29"
  input: "gradients/NextIteration_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_7"
  op: "GreaterEqual"
  input: "gradients/Merge_15"
  input: "gradients/GreaterEqual_7/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_7/Enter"
  op: "Enter"
  input: "gradients/b_count_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_30"
  op: "LoopCond"
  input: "gradients/GreaterEqual_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_15"
  op: "Switch"
  input: "gradients/Merge_15"
  input: "gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_7"
  op: "Sub"
  input: "gradients/Switch_15:1"
  input: "gradients/GreaterEqual_7/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_15"
  op: "NextIteration"
  input: "gradients/Sub_7"
  input: "^gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_31"
  op: "Exit"
  input: "gradients/Switch_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_24"
  op: "Const"
  input: "^gradients/Add"
  input: "^map/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_25"
  op: "Enter"
  input: "gradients/f_count_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_16"
  op: "Merge"
  input: "gradients/f_count_25"
  input: "gradients/NextIteration_16"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_16"
  op: "Switch"
  input: "gradients/Merge_16"
  input: "map/while/comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_8/y"
  op: "Const"
  input: "^map/while/comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_8"
  op: "Add"
  input: "gradients/Switch_16:1"
  input: "gradients/Add_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_16"
  op: "NextIteration"
  input: "gradients/Add_8"
  input: "^gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/gru_cell_1/concat_1_grad/ShapeN/StackPushV2"
  input: "^gradients/gru_cell_1/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^gradients/gru_cell_1/mul_1_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_2_grad/Mul/StackPushV2"
  input: "^gradients/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/gru_cell_1/mul_grad/Mul_1/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_26"
  op: "Exit"
  input: "gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_26"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/f_acc_7"
  op: "StackV2"
  input: "gradients/Const_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/f_count_26"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/Enter_7"
  op: "Enter"
  input: "gradients/f_acc_7"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/StackPushV2_7"
  op: "StackPushV2"
  input: "gradients/Enter_7"
  input: "gradients/f_count_26"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/StackPopV2_7"
  op: "StackPopV2"
  input: "gradients/StackPopV2_7/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/StackPopV2_7/Enter"
  op: "Enter"
  input: "gradients/f_acc_7"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_32"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_33"
  op: "Enter"
  input: "gradients/StackPopV2_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_17"
  op: "Merge"
  input: "gradients/b_count_33"
  input: "gradients/NextIteration_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_8"
  op: "GreaterEqual"
  input: "gradients/Merge_17"
  input: "gradients/GreaterEqual_8/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_8/Enter"
  op: "Enter"
  input: "gradients/b_count_32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_34"
  op: "LoopCond"
  input: "gradients/GreaterEqual_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_17"
  op: "Switch"
  input: "gradients/Merge_17"
  input: "gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_8"
  op: "Sub"
  input: "gradients/Switch_17:1"
  input: "gradients/GreaterEqual_8/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_17"
  op: "NextIteration"
  input: "gradients/Sub_8"
  input: "^gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_35"
  op: "Exit"
  input: "gradients/Switch_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Select"
  op: "Select"
  input: "mean_squared_error/Greater"
  input: "gradients/Fill"
  input: "gradients/mean_squared_error/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Select_1"
  op: "Select"
  input: "mean_squared_error/Greater"
  input: "gradients/mean_squared_error/value_grad/zeros_like"
  input: "gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/div_grad/Shape"
  input: "gradients/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mean_squared_error/value_grad/Select"
  input: "mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/div_grad/RealDiv"
  input: "gradients/mean_squared_error/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/div_grad/Sum"
  input: "gradients/mean_squared_error/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/Neg"
  op: "Neg"
  input: "mean_squared_error/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/mean_squared_error/div_grad/Neg"
  input: "mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/mean_squared_error/div_grad/RealDiv_1"
  input: "mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/mul"
  op: "Mul"
  input: "gradients/mean_squared_error/value_grad/Select"
  input: "gradients/mean_squared_error/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/div_grad/mul"
  input: "gradients/mean_squared_error/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/div_grad/Sum_1"
  input: "gradients/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer_2/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "kernel/Regularizer_2/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer_2/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "kernel/Regularizer_2/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/div_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients/mean_squared_error/Sum_2_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer_1/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "kernel/Regularizer_1/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer_1/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "kernel/Regularizer_1/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer_2/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "kernel/Regularizer_2/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/kernel/Regularizer_2/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Size"
  op: "Size"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/add"
  op: "Add"
  input: "mean_squared_error/range"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/mean_squared_error/Sum_grad/add"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients/mean_squared_error/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range"
  op: "Range"
  input: "gradients/mean_squared_error/Sum_grad/range/start"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  input: "gradients/mean_squared_error/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/mean_squared_error/Sum_grad/Shape_1"
  input: "gradients/mean_squared_error/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/mean_squared_error/Sum_grad/range"
  input: "gradients/mean_squared_error/Sum_grad/mod"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  input: "gradients/mean_squared_error/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  input: "gradients/mean_squared_error/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  input: "gradients/mean_squared_error/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Tile"
  input: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/mean_squared_error/Sum_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer_1/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "kernel/Regularizer_1/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/kernel/Regularizer_1/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/Mul_grad/Shape"
  input: "gradients/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/mean_squared_error/Sum_grad/Tile"
  input: "mean_squared_error/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/Mul_grad/Mul"
  input: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/Mul_grad/Sum"
  input: "gradients/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "mean_squared_error/SquaredDifference"
  input: "gradients/mean_squared_error/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/Mul_grad/Mul_1"
  input: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/Mul_grad/Sum_1"
  input: "gradients/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/scalar"
  input: "gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Squeeze"
  input: "IteratorGetNext:7"
  input: "^gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Shape"
  op: "Shape"
  input: "map/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "gradients/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "map/TensorArray_7"
  input: "map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "map/while/Exit_2"
  input: "^gradients/map/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/map/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "map/TensorArrayStack/range"
  input: "gradients/Squeeze_grad/Reshape"
  input: "gradients/map/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/map/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/Exit_2_grad/b_exit"
  input: "gradients/map/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/map/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/BiasAdd_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "map/TensorArray_7"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/BiasAdd_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/Merge_2_grad/Switch:1"
  input: "^gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/BiasAdd_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "map/while/Identity_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/MatMul_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/MatMul_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/Enter"
  input: "map/while/comnet_model/sequential/MatMul_2/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout_1/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout_1/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/Enter"
  input: "map/while/comnet_model/sequential/dropout_1/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout_1/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout_1/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/Enter"
  input: "map/while/comnet_model/sequential/dropout_1/Floor"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout_1/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout_1/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/Enter"
  input: "map/while/comnet_model/sequential/dropout_1/div"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Shape"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Sum"
  op: "Sum"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Sum"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg"
  op: "Neg"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/Selu_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/Selu_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/Enter"
  input: "map/while/comnet_model/sequential/Selu_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv_1"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/mul"
  op: "Mul"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/mul_grad/Mul"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/mul"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Sum_1"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/Selu_1_grad/SeluGrad"
  op: "SeluGrad"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Reshape"
  input: "gradients/map/while/comnet_model/sequential/dropout_1/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/kernel/Regularizer_2/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_2/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/kernel/Regularizer_2/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/map/while/comnet_model/sequential/Selu_1_grad/SeluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/map/while/comnet_model/sequential/Selu_1_grad/SeluGrad"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/MatMul_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/MatMul_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/Enter"
  input: "map/while/comnet_model/sequential/MatMul_1/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/Selu_1_grad/SeluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/Enter"
  input: "map/while/comnet_model/sequential/dropout/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/Enter"
  input: "map/while/comnet_model/sequential/dropout/Floor"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/Enter"
  input: "map/while/comnet_model/sequential/dropout/div"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Shape"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Sum"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg"
  op: "Neg"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/Selu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/Selu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/Enter"
  input: "map/while/comnet_model/sequential/Selu"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv_1"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/map/while/comnet_model/sequential/dropout/mul_grad/Mul"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/mul"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Sum_1"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/Selu_grad/SeluGrad"
  op: "SeluGrad"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Reshape"
  input: "gradients/map/while/comnet_model/sequential/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/kernel/Regularizer_1/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/kernel/Regularizer_1/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/map/while/comnet_model/sequential/Selu_grad/SeluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/map/while/comnet_model/sequential/Selu_grad/SeluGrad"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/MatMul/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/sequential/MatMul/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/Enter"
  input: "map/while/comnet_model/sequential/MatMul/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/Selu_grad/SeluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Exit_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Exit_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/Enter"
  input: "map/while/comnet_model/rnn_7/while/Exit_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_7/while/Exit_3_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_7/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/map/while/comnet_model/sequential/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_7/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_7/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/map/while/comnet_model/sequential/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_7/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/Merge_3_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/Enter_1"
  input: "map/while/comnet_model/rnn_7/while/GreaterEqual"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell_1/mul_21_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_22_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_23_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_23_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_7/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul"
  op: "Mul"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select_1"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/Enter_1"
  input: "map/while/comnet_model/rnn_7/while/Identity_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1"
  op: "Mul"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select_1"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_7:1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_22_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul"
  op: "Mul"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select_1"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/Enter_1"
  input: "gru_cell_1/Tanh_7"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1"
  op: "Mul"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select_1"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1/Enter_1"
  input: "gru_cell_1/sub_7"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_23_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_7_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell_1/sub_7_grad/Shape"
  input: "gradients/gru_cell_1/sub_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_7_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_23_grad/Mul"
  input: "gradients/gru_cell_1/sub_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_7_grad/Sum"
  input: "gradients/gru_cell_1/sub_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_23_grad/Mul"
  input: "gradients/gru_cell_1/sub_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_7_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell_1/sub_7_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_7_grad/Neg"
  input: "gradients/gru_cell_1/sub_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Tanh_7_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell_1/mul_23_grad/Mul/StackPopV2"
  input: "gradients/gru_cell_1/mul_23_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_15_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Tanh_7_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Tanh_7_grad/TanhGrad"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_15/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_15/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_15/ReadVariableOp"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Tanh_7_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_15"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_15_grad/Const"
  input: "gradients/gru_cell_1/concat_15_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/Enter_1"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/Enter_2"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/Enter_3"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/Enter_3"
  input: "gru_cell_1/mul_21"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2_1/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_15_grad/mod"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul"
  input: "gradients/gru_cell_1/concat_15_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_15_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul"
  input: "gradients/gru_cell_1/concat_15_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_15_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_15_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_15_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_7"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_21_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_15_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/gru_cell_1/mul_22_grad/Mul"
  input: "gradients/gru_cell_1/sub_7_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/mul_22_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_7_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell_1/mul_21_grad/Mul"
  input: "gradients/AddN_3"
  input: "gradients/gru_cell_1/split_7_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_7_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell_1/split_7_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/Enter_1"
  input: "gru_cell_1/Sigmoid_7"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_14_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_14/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_14/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_14/ReadVariableOp"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_7_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_14"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_14_grad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_14_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_14_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_14_grad/Const"
  input: "gradients/gru_cell_1/concat_14_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_14_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_7/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_14_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_15_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/mul_22_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_14_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_14_grad/mod"
  input: "gradients/gru_cell_1/concat_14_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_14_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_14_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul"
  input: "gradients/gru_cell_1/concat_14_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_14_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_14_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul"
  input: "gradients/gru_cell_1/concat_14_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_14_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_14_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/gru_cell_1/concat_15_grad/Slice"
  input: "gradients/gru_cell_1/concat_14_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/concat_15_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_7/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/transpose"
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/transpose"
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "gradients/AddN_4"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter_1"
  input: "map/while/comnet_model/rnn_7/while/Identity_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select"
  input: "gradients/gru_cell_1/mul_22_grad/Mul_1"
  input: "gradients/gru_cell_1/mul_21_grad/Mul_1"
  input: "gradients/gru_cell_1/concat_14_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_7/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_14_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_7/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_7/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_7/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  input: "map/while/comnet_model/rnn_7/TensorArrayUnstack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_7/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_7/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_7/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/rnn_7/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_7/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/map/while/comnet_model/rnn_7/transpose_grad/transpose"
  input: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/StackPopV2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/Enter"
  input: "map/while/comnet_model/stack_16"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Shape"
  op: "Shape"
  input: "gru_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32"
  op: "Cast"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/StackPopV2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Size"
  op: "Size"
  input: "map/while/comnet_model/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_7_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_7_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Size"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/strided_slice/stack"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/strided_slice/stack_1"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/concat/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/concat"
  op: "ConcatV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/strided_slice"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/ScatterNd_7_grad/GatherNd"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/Enter"
  input: "map/while/comnet_model/strided_slice"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Shape"
  op: "Shape"
  input: "gru_cell/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/add_6_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/add_6_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32"
  input: "gradients/gru_cell/add_6_grad/Sum/strided_slice/stack"
  input: "gradients/gru_cell/add_6_grad/Sum/strided_slice/stack_1"
  input: "gradients/gru_cell/add_6_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1"
  input: "gradients/gru_cell/add_6_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/add_6_grad/Sum/input"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/add_6_grad/Sum"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum_1/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/ToInt32"
  input: "gradients/gru_cell/add_6_grad/Sum_1/strided_slice/stack"
  input: "gradients/gru_cell/add_6_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/gru_cell/add_6_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1"
  input: "gradients/gru_cell/add_6_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/add_6_grad/Sum_1/input"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/add_6_grad/Sum_1"
  input: "gradients/gru_cell/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_19_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_19_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_19_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_19_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_19_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_19_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_6_grad/Reshape"
  input: "gradients/gru_cell/mul_19_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_19_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_19_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_19_grad/Mul/Enter"
  input: "gru_cell/add_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_19_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_19_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_19_grad/Mul"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_19_grad/Sum"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_19_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_6_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_19_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_19_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_19_grad/Mul_1/Enter"
  input: "gru_cell/split_6:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_19_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_19_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_19_grad/Mul_1"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_19_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_19_grad/Sum_1"
  input: "gradients/gru_cell/mul_19_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Shape"
  op: "Shape"
  input: "gru_cell/sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_20_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_20_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_20_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_20_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_20_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_20_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_6_grad/Reshape_1"
  input: "gradients/gru_cell/mul_20_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_20_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_20_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_20_grad/Mul/Enter"
  input: "gru_cell/Tanh_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_20_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_20_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_20_grad/Mul"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_20_grad/Sum"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_20_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_6_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_20_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_20_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_20_grad/Mul_1/Enter"
  input: "gru_cell/sub_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_20_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_20_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_20_grad/Mul_1"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_20_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_20_grad/Sum_1"
  input: "gradients/gru_cell/mul_20_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/sub_6_grad/Shape"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/sub_6_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_20_grad/Reshape"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/sub_6_grad/Sum"
  input: "gradients/gru_cell/sub_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_20_grad/Reshape"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell/sub_6_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/sub_6_grad/Neg"
  input: "gradients/gru_cell/sub_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Tanh_6_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell/mul_20_grad/Mul/StackPopV2"
  input: "gradients/gru_cell/mul_20_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_13_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Tanh_6_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Tanh_6_grad/TanhGrad"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_13/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_13/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul/Enter"
  input: "gru_cell/MatMul_13/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Tanh_6_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul_1/Enter"
  input: "gru_cell/concat_13"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_13_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_13_grad/Const"
  input: "gradients/gru_cell/concat_13_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/Enter"
  input: "map/while/comnet_model/UnsortedSegmentSum_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/Enter_1"
  input: "gru_cell/mul_18"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_13_grad/mod"
  input: "gradients/gru_cell/concat_13_grad/ShapeN"
  input: "gradients/gru_cell/concat_13_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul"
  input: "gradients/gru_cell/concat_13_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_13_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_13_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul"
  input: "gradients/gru_cell/concat_13_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_13_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_18_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_18_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_18_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_18_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_18_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_18_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/concat_13_grad/Slice_1"
  input: "gradients/gru_cell/mul_19_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_18_grad/Mul"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_18_grad/Sum"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_18_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/concat_13_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_18_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_18_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_18_grad/Mul_1/Enter"
  input: "gru_cell/split_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_18_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_18_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_18_grad/Mul_1"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_18_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_18_grad/Sum_1"
  input: "gradients/gru_cell/mul_18_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/gru_cell/mul_19_grad/Reshape"
  input: "gradients/gru_cell/sub_6_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_19_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_6_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_18_grad/Reshape"
  input: "gradients/AddN_6"
  input: "gradients/gru_cell/split_6_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_6_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell/split_6_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/Enter"
  input: "gru_cell/Sigmoid_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_12_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_12/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_12/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul/Enter"
  input: "gru_cell/MatMul_12/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Sigmoid_6_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul_1/Enter"
  input: "gru_cell/concat_12"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_12_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_12_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_12_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_12_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_12_grad/Const"
  input: "gradients/gru_cell/concat_12_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_12_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_12_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_13_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/mul_19_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_12_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_12_grad/mod"
  input: "gradients/gru_cell/concat_12_grad/ShapeN"
  input: "gradients/gru_cell/concat_12_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_12_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul"
  input: "gradients/gru_cell/concat_12_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_12_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_12_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul"
  input: "gradients/gru_cell/concat_12_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_12_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/gru_cell/concat_13_grad/Slice"
  input: "gradients/gru_cell/concat_12_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/concat_13_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/Maximum"
  op: "Maximum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GatherV2/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_7"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/Maximum"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GreaterEqual/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GreaterEqual"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ones_like/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ones_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ones_like/Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/and"
  op: "LogicalAnd"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/and"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/GatherV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_6/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd"
  op: "ScatterNd"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_6_grad/Select"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/Enter"
  input: "map/while/comnet_model/stack_14"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/Enter_1"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_6/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_6/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_6/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_6/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "map/while/comnet_model/rnn_6/while/Exit_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_1_grad/transpose"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  input: "map/while/comnet_model/rnn_6/TensorArrayStack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_7/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_6/while/Exit_3_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_6/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_6/while/Exit_2_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_6/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_6/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_6/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_6/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_6/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_6/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_6/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Merge_3_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/Enter_1"
  input: "map/while/comnet_model/rnn_6/while/GreaterEqual"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell_1/mul_18_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_19_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_20_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_20_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_6/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_6/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_6/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_6/while/Merge_2_grad/Switch:1"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  input: "map/while/comnet_model/rnn_6/while/Identity_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/Enter"
  input: "map/while/comnet_model/rnn_6/zeros"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select_1"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_6/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/Enter_1"
  input: "map/while/comnet_model/rnn_6/while/Identity_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_6:1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_19_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/Enter_1"
  input: "gru_cell_1/Tanh_6"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1/Enter_1"
  input: "gru_cell_1/sub_6"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_20_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_6_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell_1/sub_6_grad/Shape"
  input: "gradients/gru_cell_1/sub_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_6_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_20_grad/Mul"
  input: "gradients/gru_cell_1/sub_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_6_grad/Sum"
  input: "gradients/gru_cell_1/sub_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_20_grad/Mul"
  input: "gradients/gru_cell_1/sub_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_6_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell_1/sub_6_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_6_grad/Neg"
  input: "gradients/gru_cell_1/sub_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Tanh_6_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell_1/mul_20_grad/Mul/StackPopV2"
  input: "gradients/gru_cell_1/mul_20_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_13_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Tanh_6_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Tanh_6_grad/TanhGrad"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_13/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_13/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_13/ReadVariableOp"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Tanh_6_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_13"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_13_grad/Const"
  input: "gradients/gru_cell_1/concat_13_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/Enter_1"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/Enter_2"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/Enter_3"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/Enter_3"
  input: "gru_cell_1/mul_18"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2_1/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_13_grad/mod"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul"
  input: "gradients/gru_cell_1/concat_13_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_13_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul"
  input: "gradients/gru_cell_1/concat_13_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_13_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_13_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_13_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_6"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_18_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_13_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/gru_cell_1/mul_19_grad/Mul"
  input: "gradients/gru_cell_1/sub_6_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/mul_19_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_6_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell_1/mul_18_grad/Mul"
  input: "gradients/AddN_9"
  input: "gradients/gru_cell_1/split_6_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_6_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell_1/split_6_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/Enter_1"
  input: "gru_cell_1/Sigmoid_6"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_12_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_12/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_12/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_12/ReadVariableOp"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_6_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_12"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_12_grad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_12_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_12_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_12_grad/Const"
  input: "gradients/gru_cell_1/concat_12_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_12_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_6/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_12_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_13_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/mul_19_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_12_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_12_grad/mod"
  input: "gradients/gru_cell_1/concat_12_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_12_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_12_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul"
  input: "gradients/gru_cell_1/concat_12_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_12_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_12_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul"
  input: "gradients/gru_cell_1/concat_12_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_12_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_12_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/gru_cell_1/concat_13_grad/Slice"
  input: "gradients/gru_cell_1/concat_12_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/concat_13_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_6/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/transpose"
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/transpose"
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_10"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select"
  input: "gradients/gru_cell_1/mul_19_grad/Mul_1"
  input: "gradients/gru_cell_1/mul_18_grad/Mul_1"
  input: "gradients/gru_cell_1/concat_12_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_6/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_12_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_6/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_6/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_6/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  input: "map/while/comnet_model/rnn_6/TensorArrayUnstack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_6/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_6/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_6/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/rnn_6/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_6_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/map/while/comnet_model/rnn_6/transpose_grad/transpose"
  input: "gradients/map/while/comnet_model/GatherNd_6_grad/ScatterNd/StackPopV2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/Shape"
  op: "Shape"
  input: "gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32"
  op: "Cast"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/StackPopV2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/Size"
  op: "Size"
  input: "map/while/comnet_model/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_6_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_6_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/Size"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ToInt32"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/strided_slice/stack"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/strided_slice/stack_1"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/concat/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/concat"
  op: "ConcatV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/strided_slice"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/ScatterNd_6_grad/GatherNd"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Shape"
  input: "gradients/gru_cell/mul_19_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/strided_slice/stack"
  input: "gradients/strided_slice/stack_1"
  input: "gradients/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range"
  op: "Range"
  input: "gradients/range/start"
  input: "gradients/strided_slice"
  input: "gradients/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_2"
  op: "Shape"
  input: "gradients/gru_cell/mul_18_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/Shape_2"
  input: "gradients/strided_slice_1/stack"
  input: "gradients/strided_slice_1/stack_1"
  input: "gradients/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_1/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_1/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_1"
  op: "Range"
  input: "gradients/range_1/start"
  input: "gradients/strided_slice_1"
  input: "gradients/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_3"
  op: "Shape"
  input: "gradients/gru_cell/concat_12_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2"
  op: "StridedSlice"
  input: "gradients/Shape_3"
  input: "gradients/strided_slice_2/stack"
  input: "gradients/strided_slice_2/stack_1"
  input: "gradients/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_2/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_2/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_2"
  op: "Range"
  input: "gradients/range_2/start"
  input: "gradients/strided_slice_2"
  input: "gradients/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast"
  op: "Cast"
  input: "gradients/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_1"
  op: "Cast"
  input: "gradients/range_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_2"
  op: "Cast"
  input: "gradients/range_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_19_grad/Reshape_1"
  input: "gradients/gru_cell/mul_18_grad/Reshape_1"
  input: "gradients/gru_cell/concat_12_grad/Slice_1"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/Reshape"
  input: "gradients/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_1"
  op: "ConcatV2"
  input: "gradients/Cast"
  input: "gradients/Cast_1"
  input: "gradients/Cast_2"
  input: "gradients/map/while/comnet_model/GatherV2_6_grad/Reshape_1"
  input: "gradients/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Shape"
  op: "Shape"
  input: "gru_cell/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/add_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/add_5_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/gru_cell/add_5_grad/Sum/strided_slice/stack"
  input: "gradients/gru_cell/add_5_grad/Sum/strided_slice/stack_1"
  input: "gradients/gru_cell/add_5_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat"
  input: "gradients/concat_1"
  input: "gradients/gru_cell/add_5_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/add_5_grad/Sum/input"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/add_5_grad/Sum"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum_1/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/gru_cell/add_5_grad/Sum_1/strided_slice/stack"
  input: "gradients/gru_cell/add_5_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/gru_cell/add_5_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat"
  input: "gradients/concat_1"
  input: "gradients/gru_cell/add_5_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/add_5_grad/Sum_1/input"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/add_5_grad/Sum_1"
  input: "gradients/gru_cell/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_16_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_16_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_16_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_16_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_16_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_16_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_5_grad/Reshape"
  input: "gradients/gru_cell/mul_16_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_16_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_16_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_16_grad/Mul/Enter"
  input: "gru_cell/add_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_16_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_16_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_16_grad/Mul"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_16_grad/Sum"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_16_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_16_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_16_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_16_grad/Mul_1/Enter"
  input: "gru_cell/split_5:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_16_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_16_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_16_grad/Mul_1"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_16_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_16_grad/Sum_1"
  input: "gradients/gru_cell/mul_16_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Shape"
  op: "Shape"
  input: "gru_cell/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/Tanh_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_17_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_17_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_17_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_17_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_17_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_17_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_5_grad/Reshape_1"
  input: "gradients/gru_cell/mul_17_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_17_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_17_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_17_grad/Mul/Enter"
  input: "gru_cell/Tanh_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_17_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_17_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_17_grad/Mul"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_17_grad/Sum"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_17_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_17_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_17_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_17_grad/Mul_1/Enter"
  input: "gru_cell/sub_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_17_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_17_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_17_grad/Mul_1"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_17_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_17_grad/Sum_1"
  input: "gradients/gru_cell/mul_17_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/sub_5_grad/Shape"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/sub_5_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_17_grad/Reshape"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/sub_5_grad/Sum"
  input: "gradients/gru_cell/sub_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_17_grad/Reshape"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell/sub_5_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/sub_5_grad/Neg"
  input: "gradients/gru_cell/sub_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Tanh_5_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell/mul_17_grad/Mul/StackPopV2"
  input: "gradients/gru_cell/mul_17_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_11_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Tanh_5_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Tanh_5_grad/TanhGrad"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_11/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_11/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul/Enter"
  input: "gru_cell/MatMul_11/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Tanh_5_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul_1/Enter"
  input: "gru_cell/concat_11"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_11_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_11_grad/Const"
  input: "gradients/gru_cell/concat_11_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/Enter"
  input: "map/while/comnet_model/UnsortedSegmentSum_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/Enter_1"
  input: "gru_cell/mul_15"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_11_grad/mod"
  input: "gradients/gru_cell/concat_11_grad/ShapeN"
  input: "gradients/gru_cell/concat_11_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul"
  input: "gradients/gru_cell/concat_11_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_11_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_11_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul"
  input: "gradients/gru_cell/concat_11_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_11_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_15_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_15_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_15_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_15_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_15_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_15_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/concat_11_grad/Slice_1"
  input: "gradients/gru_cell/mul_16_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_15_grad/Mul"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_15_grad/Sum"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_15_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/concat_11_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_15_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_15_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_15_grad/Mul_1/Enter"
  input: "gru_cell/split_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_15_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_15_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_15_grad/Mul_1"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_15_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_15_grad/Sum_1"
  input: "gradients/gru_cell/mul_15_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/gru_cell/mul_16_grad/Reshape"
  input: "gradients/gru_cell/sub_5_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_16_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_5_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_15_grad/Reshape"
  input: "gradients/AddN_12"
  input: "gradients/gru_cell/split_5_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_5_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell/split_5_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/Enter"
  input: "gru_cell/Sigmoid_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_10_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_10/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_10/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul/Enter"
  input: "gru_cell/MatMul_10/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Sigmoid_5_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul_1/Enter"
  input: "gru_cell/concat_10"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_10_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_10_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_10_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_10_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_10_grad/Const"
  input: "gradients/gru_cell/concat_10_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_10_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_10_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_11_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/mul_16_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_10_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_10_grad/mod"
  input: "gradients/gru_cell/concat_10_grad/ShapeN"
  input: "gradients/gru_cell/concat_10_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_10_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul"
  input: "gradients/gru_cell/concat_10_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_10_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_10_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul"
  input: "gradients/gru_cell/concat_10_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_10_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/gru_cell/concat_11_grad/Slice"
  input: "gradients/gru_cell/concat_10_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/concat_11_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/Maximum"
  op: "Maximum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GatherV2/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_13"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/Maximum"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GreaterEqual/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GreaterEqual"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ones_like/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ones_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ones_like/Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/and"
  op: "LogicalAnd"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/and"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/GatherV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_5/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd"
  op: "ScatterNd"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_5_grad/Select"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/Enter"
  input: "map/while/comnet_model/stack_12"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/Enter_1"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_5/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_5/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_5/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_5/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "map/while/comnet_model/rnn_5/while/Exit_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_1_grad/transpose"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  input: "map/while/comnet_model/rnn_5/TensorArrayStack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_6/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_5/while/Exit_3_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_5/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_5/while/Exit_2_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_5/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_5/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_5/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_5/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_5/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_5/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_5/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Merge_3_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/Enter_1"
  input: "map/while/comnet_model/rnn_5/while/GreaterEqual"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell_1/mul_15_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_16_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_17_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_17_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_5/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_5/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_5/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_5/while/Merge_2_grad/Switch:1"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  input: "map/while/comnet_model/rnn_5/while/Identity_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/Enter"
  input: "map/while/comnet_model/rnn_5/zeros"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select_1"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_5/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/Enter_1"
  input: "map/while/comnet_model/rnn_5/while/Identity_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_5:1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_16_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/Enter_1"
  input: "gru_cell_1/Tanh_5"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1/Enter_1"
  input: "gru_cell_1/sub_5"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_17_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_5_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell_1/sub_5_grad/Shape"
  input: "gradients/gru_cell_1/sub_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_5_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_17_grad/Mul"
  input: "gradients/gru_cell_1/sub_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_5_grad/Sum"
  input: "gradients/gru_cell_1/sub_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_17_grad/Mul"
  input: "gradients/gru_cell_1/sub_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_5_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell_1/sub_5_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_5_grad/Neg"
  input: "gradients/gru_cell_1/sub_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Tanh_5_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell_1/mul_17_grad/Mul/StackPopV2"
  input: "gradients/gru_cell_1/mul_17_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_11_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Tanh_5_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Tanh_5_grad/TanhGrad"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_11/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_11/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_11/ReadVariableOp"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Tanh_5_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_11"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_11_grad/Const"
  input: "gradients/gru_cell_1/concat_11_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/Enter_1"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/Enter_2"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/Enter_3"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/Enter_3"
  input: "gru_cell_1/mul_15"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2_1/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_11_grad/mod"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul"
  input: "gradients/gru_cell_1/concat_11_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_11_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul"
  input: "gradients/gru_cell_1/concat_11_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_11_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_11_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_11_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_5"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_15_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_11_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/gru_cell_1/mul_16_grad/Mul"
  input: "gradients/gru_cell_1/sub_5_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/mul_16_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_5_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell_1/mul_15_grad/Mul"
  input: "gradients/AddN_15"
  input: "gradients/gru_cell_1/split_5_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_5_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell_1/split_5_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/Enter_1"
  input: "gru_cell_1/Sigmoid_5"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_10_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_10/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_10/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_10/ReadVariableOp"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_5_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_10"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_10_grad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_10_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_10_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_10_grad/Const"
  input: "gradients/gru_cell_1/concat_10_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_10_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_5/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_10_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_11_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/mul_16_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_10_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_10_grad/mod"
  input: "gradients/gru_cell_1/concat_10_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_10_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_10_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul"
  input: "gradients/gru_cell_1/concat_10_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_10_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_10_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul"
  input: "gradients/gru_cell_1/concat_10_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_10_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_10_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/gru_cell_1/concat_11_grad/Slice"
  input: "gradients/gru_cell_1/concat_10_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/concat_11_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/Sub_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_5/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/transpose"
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/transpose"
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_16"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select"
  input: "gradients/gru_cell_1/mul_16_grad/Mul_1"
  input: "gradients/gru_cell_1/mul_15_grad/Mul_1"
  input: "gradients/gru_cell_1/concat_10_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_5/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_10_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_5/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_5/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  input: "map/while/comnet_model/rnn_5/TensorArrayUnstack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_5/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_5/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_5/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/rnn_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_5_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/map/while/comnet_model/rnn_5/transpose_grad/transpose"
  input: "gradients/map/while/comnet_model/GatherNd_5_grad/ScatterNd/StackPopV2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/Shape"
  op: "Shape"
  input: "gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32"
  op: "Cast"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/StackPopV2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/Size"
  op: "Size"
  input: "map/while/comnet_model/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_5_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_5_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/Size"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ToInt32"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/strided_slice/stack"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/strided_slice/stack_1"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/concat/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/concat"
  op: "ConcatV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/strided_slice"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/ScatterNd_5_grad/GatherNd"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_4"
  op: "Shape"
  input: "gradients/gru_cell/mul_16_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3"
  op: "StridedSlice"
  input: "gradients/Shape_4"
  input: "gradients/strided_slice_3/stack"
  input: "gradients/strided_slice_3/stack_1"
  input: "gradients/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_3/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_3/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_3"
  op: "Range"
  input: "gradients/range_3/start"
  input: "gradients/strided_slice_3"
  input: "gradients/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_5"
  op: "Shape"
  input: "gradients/gru_cell/mul_15_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4"
  op: "StridedSlice"
  input: "gradients/Shape_5"
  input: "gradients/strided_slice_4/stack"
  input: "gradients/strided_slice_4/stack_1"
  input: "gradients/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_4/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_4/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_4"
  op: "Range"
  input: "gradients/range_4/start"
  input: "gradients/strided_slice_4"
  input: "gradients/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_6"
  op: "Shape"
  input: "gradients/gru_cell/concat_10_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5"
  op: "StridedSlice"
  input: "gradients/Shape_6"
  input: "gradients/strided_slice_5/stack"
  input: "gradients/strided_slice_5/stack_1"
  input: "gradients/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_5/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_5/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_5"
  op: "Range"
  input: "gradients/range_5/start"
  input: "gradients/strided_slice_5"
  input: "gradients/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_3"
  op: "Cast"
  input: "gradients/range_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_4"
  op: "Cast"
  input: "gradients/range_4"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_5"
  op: "Cast"
  input: "gradients/range_5"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_2"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_16_grad/Reshape_1"
  input: "gradients/gru_cell/mul_15_grad/Reshape_1"
  input: "gradients/gru_cell/concat_10_grad/Slice_1"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/Reshape"
  input: "gradients/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_3"
  op: "ConcatV2"
  input: "gradients/Cast_3"
  input: "gradients/Cast_4"
  input: "gradients/Cast_5"
  input: "gradients/map/while/comnet_model/GatherV2_5_grad/Reshape_1"
  input: "gradients/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Shape"
  op: "Shape"
  input: "gru_cell/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/add_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/add_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_4"
  input: "gradients/gru_cell/add_4_grad/Sum/strided_slice/stack"
  input: "gradients/gru_cell/add_4_grad/Sum/strided_slice/stack_1"
  input: "gradients/gru_cell/add_4_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_2"
  input: "gradients/concat_3"
  input: "gradients/gru_cell/add_4_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/add_4_grad/Sum/input"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/add_4_grad/Sum"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum_1/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_4"
  input: "gradients/gru_cell/add_4_grad/Sum_1/strided_slice/stack"
  input: "gradients/gru_cell/add_4_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/gru_cell/add_4_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_2"
  input: "gradients/concat_3"
  input: "gradients/gru_cell/add_4_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/add_4_grad/Sum_1/input"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/add_4_grad/Sum_1"
  input: "gradients/gru_cell/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_13_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_13_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_13_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_13_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_13_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_13_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_4_grad/Reshape"
  input: "gradients/gru_cell/mul_13_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_13_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_13_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_13_grad/Mul/Enter"
  input: "gru_cell/add_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_13_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_13_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_13_grad/Mul"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_13_grad/Sum"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_13_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_13_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_13_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_13_grad/Mul_1/Enter"
  input: "gru_cell/split_4:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_13_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_13_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_13_grad/Mul_1"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_13_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_13_grad/Sum_1"
  input: "gradients/gru_cell/mul_13_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Shape"
  op: "Shape"
  input: "gru_cell/sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_14_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_14_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_14_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_14_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_14_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_14_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_4_grad/Reshape_1"
  input: "gradients/gru_cell/mul_14_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_14_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_14_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_14_grad/Mul/Enter"
  input: "gru_cell/Tanh_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_14_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_14_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_14_grad/Mul"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_14_grad/Sum"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_14_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_14_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_14_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_14_grad/Mul_1/Enter"
  input: "gru_cell/sub_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_14_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_14_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_14_grad/Mul_1"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_14_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_14_grad/Sum_1"
  input: "gradients/gru_cell/mul_14_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/sub_4_grad/Shape"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/sub_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_14_grad/Reshape"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/sub_4_grad/Sum"
  input: "gradients/gru_cell/sub_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_14_grad/Reshape"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell/sub_4_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/sub_4_grad/Neg"
  input: "gradients/gru_cell/sub_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Tanh_4_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell/mul_14_grad/Mul/StackPopV2"
  input: "gradients/gru_cell/mul_14_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_9_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Tanh_4_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Tanh_4_grad/TanhGrad"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_9/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_9/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul/Enter"
  input: "gru_cell/MatMul_9/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Tanh_4_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul_1/Enter"
  input: "gru_cell/concat_9"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_9_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_9_grad/Const"
  input: "gradients/gru_cell/concat_9_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/Enter"
  input: "map/while/comnet_model/UnsortedSegmentSum_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/Enter_1"
  input: "gru_cell/mul_12"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_9_grad/mod"
  input: "gradients/gru_cell/concat_9_grad/ShapeN"
  input: "gradients/gru_cell/concat_9_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul"
  input: "gradients/gru_cell/concat_9_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_9_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_9_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul"
  input: "gradients/gru_cell/concat_9_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_9_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_12_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_12_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_12_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_12_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_12_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_12_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/concat_9_grad/Slice_1"
  input: "gradients/gru_cell/mul_13_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_12_grad/Mul"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_12_grad/Sum"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_12_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/concat_9_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_12_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_12_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_12_grad/Mul_1/Enter"
  input: "gru_cell/split_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_12_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_12_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_12_grad/Mul_1"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_12_grad/Sum_1"
  input: "gradients/gru_cell/mul_12_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/gru_cell/mul_13_grad/Reshape"
  input: "gradients/gru_cell/sub_4_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_4_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_12_grad/Reshape"
  input: "gradients/AddN_18"
  input: "gradients/gru_cell/split_4_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_4_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell/split_4_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/Enter"
  input: "gru_cell/Sigmoid_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_8_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_8/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_8/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul/Enter"
  input: "gru_cell/MatMul_8/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Sigmoid_4_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul_1/Enter"
  input: "gru_cell/concat_8"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_8_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_8_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_8_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_8_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_8_grad/Const"
  input: "gradients/gru_cell/concat_8_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_8_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_8_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_9_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/mul_13_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_8_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_8_grad/mod"
  input: "gradients/gru_cell/concat_8_grad/ShapeN"
  input: "gradients/gru_cell/concat_8_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_8_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul"
  input: "gradients/gru_cell/concat_8_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_8_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_8_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul"
  input: "gradients/gru_cell/concat_8_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_8_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/gru_cell/concat_9_grad/Slice"
  input: "gradients/gru_cell/concat_8_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/concat_9_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/Maximum"
  op: "Maximum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GatherV2/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_19"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/Maximum"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GreaterEqual/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GreaterEqual"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ones_like/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ones_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ones_like/Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/and"
  op: "LogicalAnd"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/and"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/GatherV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_4/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd"
  op: "ScatterNd"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_4_grad/Select"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/Enter"
  input: "map/while/comnet_model/stack_10"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/Enter_1"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_4/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_4/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_4/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_4/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "map/while/comnet_model/rnn_4/while/Exit_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_1_grad/transpose"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  input: "map/while/comnet_model/rnn_4/TensorArrayStack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_5/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_4/while/Exit_3_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_4/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_4/while/Exit_2_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_4/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_4/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_4/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_4/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_4/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_4/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_4/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Merge_3_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/Enter_1"
  input: "map/while/comnet_model/rnn_4/while/GreaterEqual"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell_1/mul_12_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_13_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_14_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_14_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_4/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_4/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_4/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_4/while/Merge_2_grad/Switch:1"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  input: "map/while/comnet_model/rnn_4/while/Identity_1"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/Enter"
  input: "map/while/comnet_model/rnn_4/zeros"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select_1"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_4/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/Enter_1"
  input: "map/while/comnet_model/rnn_4/while/Identity_3"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_4:1"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_13_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/Enter_1"
  input: "gru_cell_1/Tanh_4"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1/Enter_1"
  input: "gru_cell_1/sub_4"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_14_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_4_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell_1/sub_4_grad/Shape"
  input: "gradients/gru_cell_1/sub_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_4_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_14_grad/Mul"
  input: "gradients/gru_cell_1/sub_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_4_grad/Sum"
  input: "gradients/gru_cell_1/sub_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_14_grad/Mul"
  input: "gradients/gru_cell_1/sub_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_4_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell_1/sub_4_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_4_grad/Neg"
  input: "gradients/gru_cell_1/sub_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Tanh_4_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell_1/mul_14_grad/Mul/StackPopV2"
  input: "gradients/gru_cell_1/mul_14_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_9_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Tanh_4_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Tanh_4_grad/TanhGrad"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_9/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_9/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_9/ReadVariableOp"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Tanh_4_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_9"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/Const"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_9_grad/Const"
  input: "gradients/gru_cell_1/concat_9_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/Enter_1"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/Enter_2"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/Enter_3"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/Enter_3"
  input: "gru_cell_1/mul_12"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2_1/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_9_grad/mod"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul"
  input: "gradients/gru_cell_1/concat_9_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_9_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul"
  input: "gradients/gru_cell_1/concat_9_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_9_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_9_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_9_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_4"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_12_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_9_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/gru_cell_1/mul_13_grad/Mul"
  input: "gradients/gru_cell_1/sub_4_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/mul_13_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_4_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell_1/mul_12_grad/Mul"
  input: "gradients/AddN_21"
  input: "gradients/gru_cell_1/split_4_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_4_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell_1/split_4_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/Enter_1"
  input: "gru_cell_1/Sigmoid_4"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_8_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_8/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_8/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_8/ReadVariableOp"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_4_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_8"
  input: "^gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_8_grad/Const"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_8_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_8_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_8_grad/Const"
  input: "gradients/gru_cell_1/concat_8_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_8_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_4/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_8_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_9_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/mul_13_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_8_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_8_grad/mod"
  input: "gradients/gru_cell_1/concat_8_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_8_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_8_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul"
  input: "gradients/gru_cell_1/concat_8_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_8_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_8_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul"
  input: "gradients/gru_cell_1/concat_8_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_8_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_8_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/gru_cell_1/concat_9_grad/Slice"
  input: "gradients/gru_cell_1/concat_8_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/concat_9_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/Sub_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_4/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/transpose"
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/transpose"
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_22"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select"
  input: "gradients/gru_cell_1/mul_13_grad/Mul_1"
  input: "gradients/gru_cell_1/mul_12_grad/Mul_1"
  input: "gradients/gru_cell_1/concat_8_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_4/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_8_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_4/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_4/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  input: "map/while/comnet_model/rnn_4/TensorArrayUnstack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_4/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_4/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_4/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/rnn_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_4_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/map/while/comnet_model/rnn_4/transpose_grad/transpose"
  input: "gradients/map/while/comnet_model/GatherNd_4_grad/ScatterNd/StackPopV2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/Shape"
  op: "Shape"
  input: "gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32"
  op: "Cast"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/StackPopV2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/Size"
  op: "Size"
  input: "map/while/comnet_model/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_4_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_4_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/Size"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ToInt32"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/strided_slice/stack"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/strided_slice/stack_1"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/concat/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/concat"
  op: "ConcatV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/strided_slice"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/ScatterNd_4_grad/GatherNd"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_7"
  op: "Shape"
  input: "gradients/gru_cell/mul_13_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6"
  op: "StridedSlice"
  input: "gradients/Shape_7"
  input: "gradients/strided_slice_6/stack"
  input: "gradients/strided_slice_6/stack_1"
  input: "gradients/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_6/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_6/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_6"
  op: "Range"
  input: "gradients/range_6/start"
  input: "gradients/strided_slice_6"
  input: "gradients/range_6/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_8"
  op: "Shape"
  input: "gradients/gru_cell/mul_12_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7"
  op: "StridedSlice"
  input: "gradients/Shape_8"
  input: "gradients/strided_slice_7/stack"
  input: "gradients/strided_slice_7/stack_1"
  input: "gradients/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_7/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_7/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_7"
  op: "Range"
  input: "gradients/range_7/start"
  input: "gradients/strided_slice_7"
  input: "gradients/range_7/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_9"
  op: "Shape"
  input: "gradients/gru_cell/concat_8_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_8/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_8/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_8/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_8"
  op: "StridedSlice"
  input: "gradients/Shape_9"
  input: "gradients/strided_slice_8/stack"
  input: "gradients/strided_slice_8/stack_1"
  input: "gradients/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_8/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_8/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_8"
  op: "Range"
  input: "gradients/range_8/start"
  input: "gradients/strided_slice_8"
  input: "gradients/range_8/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_6"
  op: "Cast"
  input: "gradients/range_6"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_7"
  op: "Cast"
  input: "gradients/range_7"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_8"
  op: "Cast"
  input: "gradients/range_8"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_4/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_4"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_13_grad/Reshape_1"
  input: "gradients/gru_cell/mul_12_grad/Reshape_1"
  input: "gradients/gru_cell/concat_8_grad/Slice_1"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/Reshape"
  input: "gradients/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_5/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_5"
  op: "ConcatV2"
  input: "gradients/Cast_6"
  input: "gradients/Cast_7"
  input: "gradients/Cast_8"
  input: "gradients/map/while/comnet_model/GatherV2_4_grad/Reshape_1"
  input: "gradients/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Shape"
  op: "Shape"
  input: "gru_cell/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/add_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/add_3_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_7"
  input: "gradients/gru_cell/add_3_grad/Sum/strided_slice/stack"
  input: "gradients/gru_cell/add_3_grad/Sum/strided_slice/stack_1"
  input: "gradients/gru_cell/add_3_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_4"
  input: "gradients/concat_5"
  input: "gradients/gru_cell/add_3_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/add_3_grad/Sum/input"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/add_3_grad/Sum"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum_1/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_7"
  input: "gradients/gru_cell/add_3_grad/Sum_1/strided_slice/stack"
  input: "gradients/gru_cell/add_3_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/gru_cell/add_3_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_4"
  input: "gradients/concat_5"
  input: "gradients/gru_cell/add_3_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/add_3_grad/Sum_1/input"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/add_3_grad/Sum_1"
  input: "gradients/gru_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_10_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_10_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_10_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_10_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_10_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_10_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_3_grad/Reshape"
  input: "gradients/gru_cell/mul_10_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_10_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_10_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_10_grad/Mul/Enter"
  input: "gru_cell/add_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_10_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_10_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_10_grad/Mul"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_10_grad/Sum"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_10_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_10_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_10_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_10_grad/Mul_1/Enter"
  input: "gru_cell/split_3:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_10_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_10_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_10_grad/Mul_1"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_10_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_10_grad/Sum_1"
  input: "gradients/gru_cell/mul_10_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Shape"
  op: "Shape"
  input: "gru_cell/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_11_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_11_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_11_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_11_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_11_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_11_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_3_grad/Reshape_1"
  input: "gradients/gru_cell/mul_11_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_11_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_11_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_11_grad/Mul/Enter"
  input: "gru_cell/Tanh_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_11_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_11_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_11_grad/Mul"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_11_grad/Sum"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_11_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_3_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_11_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_11_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_11_grad/Mul_1/Enter"
  input: "gru_cell/sub_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_11_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_11_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_11_grad/Mul_1"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_11_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_11_grad/Sum_1"
  input: "gradients/gru_cell/mul_11_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/sub_3_grad/Shape"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/sub_3_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_11_grad/Reshape"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/sub_3_grad/Sum"
  input: "gradients/gru_cell/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_11_grad/Reshape"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell/sub_3_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/sub_3_grad/Neg"
  input: "gradients/gru_cell/sub_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell/mul_11_grad/Mul/StackPopV2"
  input: "gradients/gru_cell/mul_11_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_7_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Tanh_3_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Tanh_3_grad/TanhGrad"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_7/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_7/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul/Enter"
  input: "gru_cell/MatMul_7/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Tanh_3_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul_1/Enter"
  input: "gru_cell/concat_7"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_7_grad/Const"
  input: "gradients/gru_cell/concat_7_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/Enter"
  input: "map/while/comnet_model/UnsortedSegmentSum_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/Enter_1"
  input: "gru_cell/mul_9"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_7_grad/mod"
  input: "gradients/gru_cell/concat_7_grad/ShapeN"
  input: "gradients/gru_cell/concat_7_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul"
  input: "gradients/gru_cell/concat_7_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_7_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_7_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul"
  input: "gradients/gru_cell/concat_7_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_7_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_9_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_9_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/concat_7_grad/Slice_1"
  input: "gradients/gru_cell/mul_10_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_9_grad/Mul"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_9_grad/Sum"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_9_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/concat_7_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_9_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_9_grad/Mul_1/Enter"
  input: "gru_cell/split_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_9_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_9_grad/Mul_1"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_9_grad/Sum_1"
  input: "gradients/gru_cell/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/gru_cell/mul_10_grad/Reshape"
  input: "gradients/gru_cell/sub_3_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_10_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_3_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_9_grad/Reshape"
  input: "gradients/AddN_24"
  input: "gradients/gru_cell/split_3_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_3_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell/split_3_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/Enter"
  input: "gru_cell/Sigmoid_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_6_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_6/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_6/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul/Enter"
  input: "gru_cell/MatMul_6/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Sigmoid_3_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul_1/Enter"
  input: "gru_cell/concat_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_6_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_6_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_6_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_6_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_6_grad/Const"
  input: "gradients/gru_cell/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_6_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_6_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_7_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/mul_10_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_6_grad/mod"
  input: "gradients/gru_cell/concat_6_grad/ShapeN"
  input: "gradients/gru_cell/concat_6_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul"
  input: "gradients/gru_cell/concat_6_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_6_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul"
  input: "gradients/gru_cell/concat_6_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_6_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/gru_cell/concat_7_grad/Slice"
  input: "gradients/gru_cell/concat_6_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/concat_7_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/Maximum"
  op: "Maximum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GatherV2/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_25"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/Maximum"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GreaterEqual/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GreaterEqual"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ones_like/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ones_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ones_like/Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/and"
  op: "LogicalAnd"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/and"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/GatherV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_3/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd"
  op: "ScatterNd"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_3_grad/Select"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/Enter"
  input: "map/while/comnet_model/stack_8"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/Enter_1"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_3/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_3/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_3/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_3/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "map/while/comnet_model/rnn_3/while/Exit_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_1_grad/transpose"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  input: "map/while/comnet_model/rnn_3/TensorArrayStack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_4/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_3/while/Exit_3_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_3/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_3/while/Exit_2_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_3/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_3/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_3/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_3/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_3/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Merge_3_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/Enter_1"
  input: "map/while/comnet_model/rnn_3/while/GreaterEqual"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_10_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_11_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_11_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_9_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_3/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_3/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_3/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_3/while/Merge_2_grad/Switch:1"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  input: "map/while/comnet_model/rnn_3/while/Identity_1"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/Enter"
  input: "map/while/comnet_model/rnn_3/zeros"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select_1"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_3/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_26"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/Enter_1"
  input: "map/while/comnet_model/rnn_3/while/Identity_3"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_26"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_3:1"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_10_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_26"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/Enter_1"
  input: "gru_cell_1/Tanh_3"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_26"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1/Enter_1"
  input: "gru_cell_1/sub_3"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_11_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell_1/sub_3_grad/Shape"
  input: "gradients/gru_cell_1/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_3_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_11_grad/Mul"
  input: "gradients/gru_cell_1/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_3_grad/Sum"
  input: "gradients/gru_cell_1/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_11_grad/Mul"
  input: "gradients/gru_cell_1/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_3_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell_1/sub_3_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_3_grad/Neg"
  input: "gradients/gru_cell_1/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell_1/mul_11_grad/Mul/StackPopV2"
  input: "gradients/gru_cell_1/mul_11_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_7_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Tanh_3_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Tanh_3_grad/TanhGrad"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_7/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_7/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_7/ReadVariableOp"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Tanh_3_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_7"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/Const"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_7_grad/Const"
  input: "gradients/gru_cell_1/concat_7_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/Enter_1"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/Enter_2"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/Enter_3"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/Enter_3"
  input: "gru_cell_1/mul_9"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2_1/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_7_grad/mod"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul"
  input: "gradients/gru_cell_1/concat_7_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_7_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul"
  input: "gradients/gru_cell_1/concat_7_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_7_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_7_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_7_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_3"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_9_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_7_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/gru_cell_1/mul_10_grad/Mul"
  input: "gradients/gru_cell_1/sub_3_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/mul_10_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_3_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell_1/mul_9_grad/Mul"
  input: "gradients/AddN_27"
  input: "gradients/gru_cell_1/split_3_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_3_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell_1/split_3_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/Enter_1"
  input: "gru_cell_1/Sigmoid_3"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_6_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_6/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_6/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_6/ReadVariableOp"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_3_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_6"
  input: "^gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_6_grad/Const"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_6_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_6_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_6_grad/Const"
  input: "gradients/gru_cell_1/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_6_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_3/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_6_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_7_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/mul_10_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_6_grad/mod"
  input: "gradients/gru_cell_1/concat_6_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_6_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul"
  input: "gradients/gru_cell_1/concat_6_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_6_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul"
  input: "gradients/gru_cell_1/concat_6_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_6_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_6_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/gru_cell_1/concat_7_grad/Slice"
  input: "gradients/gru_cell_1/concat_6_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/concat_7_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/Sub_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_3/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/transpose"
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/transpose"
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_28"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select"
  input: "gradients/gru_cell_1/mul_10_grad/Mul_1"
  input: "gradients/gru_cell_1/mul_9_grad/Mul_1"
  input: "gradients/gru_cell_1/concat_6_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_3/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_6_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_3/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  input: "map/while/comnet_model/rnn_3/TensorArrayUnstack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_3/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_3/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_3/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_3_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/map/while/comnet_model/rnn_3/transpose_grad/transpose"
  input: "gradients/map/while/comnet_model/GatherNd_3_grad/ScatterNd/StackPopV2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/Shape"
  op: "Shape"
  input: "gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32"
  op: "Cast"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/StackPopV2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/Size"
  op: "Size"
  input: "map/while/comnet_model/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_3_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_3_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/Size"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ToInt32"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/strided_slice/stack"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/strided_slice/stack_1"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/concat/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/concat"
  op: "ConcatV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/strided_slice"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/ScatterNd_3_grad/GatherNd"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_10"
  op: "Shape"
  input: "gradients/gru_cell/mul_10_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_9/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_9/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_9/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_9"
  op: "StridedSlice"
  input: "gradients/Shape_10"
  input: "gradients/strided_slice_9/stack"
  input: "gradients/strided_slice_9/stack_1"
  input: "gradients/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_9/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_9/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_9"
  op: "Range"
  input: "gradients/range_9/start"
  input: "gradients/strided_slice_9"
  input: "gradients/range_9/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_11"
  op: "Shape"
  input: "gradients/gru_cell/mul_9_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_10/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_10/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_10/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_10"
  op: "StridedSlice"
  input: "gradients/Shape_11"
  input: "gradients/strided_slice_10/stack"
  input: "gradients/strided_slice_10/stack_1"
  input: "gradients/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_10/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_10/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_10"
  op: "Range"
  input: "gradients/range_10/start"
  input: "gradients/strided_slice_10"
  input: "gradients/range_10/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_12"
  op: "Shape"
  input: "gradients/gru_cell/concat_6_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_11/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_11/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_11/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_11"
  op: "StridedSlice"
  input: "gradients/Shape_12"
  input: "gradients/strided_slice_11/stack"
  input: "gradients/strided_slice_11/stack_1"
  input: "gradients/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_11/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_11/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_11"
  op: "Range"
  input: "gradients/range_11/start"
  input: "gradients/strided_slice_11"
  input: "gradients/range_11/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_9"
  op: "Cast"
  input: "gradients/range_9"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_10"
  op: "Cast"
  input: "gradients/range_10"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_11"
  op: "Cast"
  input: "gradients/range_11"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_6/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_6"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_10_grad/Reshape_1"
  input: "gradients/gru_cell/mul_9_grad/Reshape_1"
  input: "gradients/gru_cell/concat_6_grad/Slice_1"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/Reshape"
  input: "gradients/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_7/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_7"
  op: "ConcatV2"
  input: "gradients/Cast_9"
  input: "gradients/Cast_10"
  input: "gradients/Cast_11"
  input: "gradients/map/while/comnet_model/GatherV2_3_grad/Reshape_1"
  input: "gradients/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Shape"
  op: "Shape"
  input: "gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/add_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/add_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_10"
  input: "gradients/gru_cell/add_2_grad/Sum/strided_slice/stack"
  input: "gradients/gru_cell/add_2_grad/Sum/strided_slice/stack_1"
  input: "gradients/gru_cell/add_2_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_6"
  input: "gradients/concat_7"
  input: "gradients/gru_cell/add_2_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/add_2_grad/Sum/input"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/add_2_grad/Sum"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum_1/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_10"
  input: "gradients/gru_cell/add_2_grad/Sum_1/strided_slice/stack"
  input: "gradients/gru_cell/add_2_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/gru_cell/add_2_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_6"
  input: "gradients/concat_7"
  input: "gradients/gru_cell/add_2_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/add_2_grad/Sum_1/input"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/add_2_grad/Sum_1"
  input: "gradients/gru_cell/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_7_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_7_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_2_grad/Reshape"
  input: "gradients/gru_cell/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_7_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_7_grad/Mul/Enter"
  input: "gru_cell/add_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_7_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_7_grad/Mul"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_7_grad/Sum"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_7_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_7_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_7_grad/Mul_1/Enter"
  input: "gru_cell/split_2:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_7_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_7_grad/Mul_1"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_7_grad/Sum_1"
  input: "gradients/gru_cell/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Shape"
  op: "Shape"
  input: "gru_cell/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_8_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_8_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_2_grad/Reshape_1"
  input: "gradients/gru_cell/mul_8_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_8_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_8_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_8_grad/Mul/Enter"
  input: "gru_cell/Tanh_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_8_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_8_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_8_grad/Mul"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_8_grad/Sum"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_8_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_8_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_8_grad/Mul_1/Enter"
  input: "gru_cell/sub_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_8_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_8_grad/Mul_1"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_8_grad/Sum_1"
  input: "gradients/gru_cell/mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/sub_2_grad/Shape"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/sub_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_8_grad/Reshape"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/sub_2_grad/Sum"
  input: "gradients/gru_cell/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_8_grad/Reshape"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/sub_2_grad/Neg"
  input: "gradients/gru_cell/sub_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell/mul_8_grad/Mul/StackPopV2"
  input: "gradients/gru_cell/mul_8_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_5_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Tanh_2_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Tanh_2_grad/TanhGrad"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_5/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_5/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul/Enter"
  input: "gru_cell/MatMul_5/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Tanh_2_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul_1/Enter"
  input: "gru_cell/concat_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_5_grad/Const"
  input: "gradients/gru_cell/concat_5_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/Enter"
  input: "map/while/comnet_model/UnsortedSegmentSum_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/Enter_1"
  input: "gru_cell/mul_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_5_grad/mod"
  input: "gradients/gru_cell/concat_5_grad/ShapeN"
  input: "gradients/gru_cell/concat_5_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul"
  input: "gradients/gru_cell/concat_5_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_5_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_5_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul"
  input: "gradients/gru_cell/concat_5_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_5_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_6_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_6_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/concat_5_grad/Slice_1"
  input: "gradients/gru_cell/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_6_grad/Mul"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_6_grad/Sum"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_6_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/concat_5_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_6_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_6_grad/Mul_1/Enter"
  input: "gru_cell/split_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_6_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_6_grad/Mul_1"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_6_grad/Sum_1"
  input: "gradients/gru_cell/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/gru_cell/mul_7_grad/Reshape"
  input: "gradients/gru_cell/sub_2_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_2_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_6_grad/Reshape"
  input: "gradients/AddN_30"
  input: "gradients/gru_cell/split_2_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_2_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell/split_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/Enter"
  input: "gru_cell/Sigmoid_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_4_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul/Enter"
  input: "gru_cell/MatMul_4/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul_1/Enter"
  input: "gru_cell/concat_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_4_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_4_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_4_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_4_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_4_grad/Const"
  input: "gradients/gru_cell/concat_4_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_4_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_4_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_5_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_4_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_4_grad/mod"
  input: "gradients/gru_cell/concat_4_grad/ShapeN"
  input: "gradients/gru_cell/concat_4_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_4_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul"
  input: "gradients/gru_cell/concat_4_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_4_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_4_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul"
  input: "gradients/gru_cell/concat_4_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_4_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/gru_cell/concat_5_grad/Slice"
  input: "gradients/gru_cell/concat_4_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/concat_5_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/Maximum"
  op: "Maximum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GatherV2/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_31"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/Maximum"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ones_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/and"
  op: "LogicalAnd"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/and"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd"
  op: "ScatterNd"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_2_grad/Select"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/Enter"
  input: "map/while/comnet_model/stack_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/Enter_1"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_2/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_2/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_2/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_2/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "map/while/comnet_model/rnn_2/while/Exit_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_1_grad/transpose"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  input: "map/while/comnet_model/rnn_2/TensorArrayStack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_3/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_2/while/Exit_3_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_2/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_2/while/Exit_2_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_2/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_2/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_2/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Merge_3_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/Enter_1"
  input: "map/while/comnet_model/rnn_2/while/GreaterEqual"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell_1/mul_6_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_7_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_8_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_8_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_2/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_2/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  input: "map/while/comnet_model/rnn_2/while/Identity_1"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/Enter"
  input: "map/while/comnet_model/rnn_2/zeros"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select_1"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/Enter_1"
  input: "map/while/comnet_model/rnn_2/while/Identity_3"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_2:1"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_7_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/Enter_1"
  input: "gru_cell_1/Tanh_2"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1/Enter_1"
  input: "gru_cell_1/sub_2"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_8_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell_1/sub_2_grad/Shape"
  input: "gradients/gru_cell_1/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_2_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_8_grad/Mul"
  input: "gradients/gru_cell_1/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_2_grad/Sum"
  input: "gradients/gru_cell_1/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_8_grad/Mul"
  input: "gradients/gru_cell_1/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_2_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell_1/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_2_grad/Neg"
  input: "gradients/gru_cell_1/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell_1/mul_8_grad/Mul/StackPopV2"
  input: "gradients/gru_cell_1/mul_8_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_5_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Tanh_2_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Tanh_2_grad/TanhGrad"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_5/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_5/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_5/ReadVariableOp"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Tanh_2_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_5"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/Const"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_5_grad/Const"
  input: "gradients/gru_cell_1/concat_5_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/Enter_1"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/Enter_2"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/Enter_3"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/Enter_3"
  input: "gru_cell_1/mul_6"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2_1/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_5_grad/mod"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/gru_cell_1/concat_5_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_5_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/gru_cell_1/concat_5_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_5_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_5_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_5_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_2"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_6_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/gru_cell_1/mul_7_grad/Mul"
  input: "gradients/gru_cell_1/sub_2_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/mul_7_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_2_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell_1/mul_6_grad/Mul"
  input: "gradients/AddN_33"
  input: "gradients/gru_cell_1/split_2_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_2_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell_1/split_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/Enter_1"
  input: "gru_cell_1/Sigmoid_2"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_4_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_4/ReadVariableOp"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_4"
  input: "^gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_4_grad/Const"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_4_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_4_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_4_grad/Const"
  input: "gradients/gru_cell_1/concat_4_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_4_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_2/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_4_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_5_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_4_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_4_grad/mod"
  input: "gradients/gru_cell_1/concat_4_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_4_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_4_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul"
  input: "gradients/gru_cell_1/concat_4_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_4_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_4_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul"
  input: "gradients/gru_cell_1/concat_4_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_4_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_4_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/gru_cell_1/concat_5_grad/Slice"
  input: "gradients/gru_cell_1/concat_4_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/concat_5_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/Sub_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_2/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/transpose"
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/transpose"
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_34"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select"
  input: "gradients/gru_cell_1/mul_7_grad/Mul_1"
  input: "gradients/gru_cell_1/mul_6_grad/Mul_1"
  input: "gradients/gru_cell_1/concat_4_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_2/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_2/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  input: "map/while/comnet_model/rnn_2/TensorArrayUnstack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_2/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_2/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_2/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_2_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/map/while/comnet_model/rnn_2/transpose_grad/transpose"
  input: "gradients/map/while/comnet_model/GatherNd_2_grad/ScatterNd/StackPopV2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/Shape"
  op: "Shape"
  input: "gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32"
  op: "Cast"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/StackPopV2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/Size"
  op: "Size"
  input: "map/while/comnet_model/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_2_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_2_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/Size"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ToInt32"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/strided_slice/stack"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/strided_slice/stack_1"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/concat/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/concat"
  op: "ConcatV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/strided_slice"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/ScatterNd_2_grad/GatherNd"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_13"
  op: "Shape"
  input: "gradients/gru_cell/mul_7_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_12/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_12/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_12/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_12"
  op: "StridedSlice"
  input: "gradients/Shape_13"
  input: "gradients/strided_slice_12/stack"
  input: "gradients/strided_slice_12/stack_1"
  input: "gradients/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_12/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_12/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_12"
  op: "Range"
  input: "gradients/range_12/start"
  input: "gradients/strided_slice_12"
  input: "gradients/range_12/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_14"
  op: "Shape"
  input: "gradients/gru_cell/mul_6_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_13/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_13/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_13/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_13"
  op: "StridedSlice"
  input: "gradients/Shape_14"
  input: "gradients/strided_slice_13/stack"
  input: "gradients/strided_slice_13/stack_1"
  input: "gradients/strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_13/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_13/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_13"
  op: "Range"
  input: "gradients/range_13/start"
  input: "gradients/strided_slice_13"
  input: "gradients/range_13/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_15"
  op: "Shape"
  input: "gradients/gru_cell/concat_4_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_14/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_14/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_14/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_14"
  op: "StridedSlice"
  input: "gradients/Shape_15"
  input: "gradients/strided_slice_14/stack"
  input: "gradients/strided_slice_14/stack_1"
  input: "gradients/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_14/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_14/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_14"
  op: "Range"
  input: "gradients/range_14/start"
  input: "gradients/strided_slice_14"
  input: "gradients/range_14/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_12"
  op: "Cast"
  input: "gradients/range_12"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_13"
  op: "Cast"
  input: "gradients/range_13"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_14"
  op: "Cast"
  input: "gradients/range_14"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_8/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_8"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_7_grad/Reshape_1"
  input: "gradients/gru_cell/mul_6_grad/Reshape_1"
  input: "gradients/gru_cell/concat_4_grad/Slice_1"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/Reshape"
  input: "gradients/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_9/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_9"
  op: "ConcatV2"
  input: "gradients/Cast_12"
  input: "gradients/Cast_13"
  input: "gradients/Cast_14"
  input: "gradients/map/while/comnet_model/GatherV2_2_grad/Reshape_1"
  input: "gradients/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Shape"
  op: "Shape"
  input: "gru_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/add_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/add_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_13"
  input: "gradients/gru_cell/add_1_grad/Sum/strided_slice/stack"
  input: "gradients/gru_cell/add_1_grad/Sum/strided_slice/stack_1"
  input: "gradients/gru_cell/add_1_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_8"
  input: "gradients/concat_9"
  input: "gradients/gru_cell/add_1_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/add_1_grad/Sum/input"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/add_1_grad/Sum"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum_1/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_13"
  input: "gradients/gru_cell/add_1_grad/Sum_1/strided_slice/stack"
  input: "gradients/gru_cell/add_1_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/gru_cell/add_1_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_8"
  input: "gradients/concat_9"
  input: "gradients/gru_cell/add_1_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/add_1_grad/Sum_1/input"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/add_1_grad/Sum_1"
  input: "gradients/gru_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_1_grad/Reshape"
  input: "gradients/gru_cell/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_4_grad/Mul/Enter"
  input: "gru_cell/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_4_grad/Mul"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_4_grad/Sum"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_4_grad/Mul_1/Enter"
  input: "gru_cell/split_1:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_4_grad/Mul_1"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_4_grad/Sum_1"
  input: "gradients/gru_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Shape"
  op: "Shape"
  input: "gru_cell/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_5_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_1_grad/Reshape_1"
  input: "gradients/gru_cell/mul_5_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_5_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_5_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_5_grad/Mul/Enter"
  input: "gru_cell/Tanh_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_5_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_5_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_5_grad/Mul"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_5_grad/Sum"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_5_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_5_grad/Mul_1/Enter"
  input: "gru_cell/sub_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_5_grad/Mul_1"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_5_grad/Sum_1"
  input: "gradients/gru_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/sub_1_grad/Shape"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/sub_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_5_grad/Reshape"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/sub_1_grad/Sum"
  input: "gradients/gru_cell/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_5_grad/Reshape"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/sub_1_grad/Neg"
  input: "gradients/gru_cell/sub_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell/mul_5_grad/Mul/StackPopV2"
  input: "gradients/gru_cell/mul_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_3_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Tanh_1_grad/TanhGrad"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul/Enter"
  input: "gru_cell/MatMul_3/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul_1/Enter"
  input: "gru_cell/concat_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_3_grad/Const"
  input: "gradients/gru_cell/concat_3_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/Enter"
  input: "map/while/comnet_model/UnsortedSegmentSum_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/Enter_1"
  input: "gru_cell/mul_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_3_grad/mod"
  input: "gradients/gru_cell/concat_3_grad/ShapeN"
  input: "gradients/gru_cell/concat_3_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul"
  input: "gradients/gru_cell/concat_3_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_3_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul"
  input: "gradients/gru_cell/concat_3_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_3_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Shape"
  op: "Shape"
  input: "gru_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_3_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/concat_3_grad/Slice_1"
  input: "gradients/gru_cell/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_3_grad/Mul"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_3_grad/Sum"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/concat_3_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_3_grad/Mul_1/Enter"
  input: "gru_cell/split_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_3_grad/Mul_1"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_3_grad/Sum_1"
  input: "gradients/gru_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/gru_cell/mul_4_grad/Reshape"
  input: "gradients/gru_cell/sub_1_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_3_grad/Reshape"
  input: "gradients/AddN_36"
  input: "gradients/gru_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/Enter"
  input: "gru_cell/Sigmoid_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul/Enter"
  input: "gru_cell/MatMul_2/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Sigmoid_1_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul_1/Enter"
  input: "gru_cell/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_2_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_2_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_2_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_2_grad/Const"
  input: "gradients/gru_cell/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_2_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_3_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_2_grad/mod"
  input: "gradients/gru_cell/concat_2_grad/ShapeN"
  input: "gradients/gru_cell/concat_2_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul"
  input: "gradients/gru_cell/concat_2_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_2_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul"
  input: "gradients/gru_cell/concat_2_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_2_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/gru_cell/concat_3_grad/Slice"
  input: "gradients/gru_cell/concat_2_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/concat_3_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GatherV2/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_37"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/Maximum"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ones_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/and"
  op: "LogicalAnd"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/and"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd"
  op: "ScatterNd"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_1_grad/Select"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/Enter"
  input: "map/while/comnet_model/stack_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/Enter_1"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_1/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_1/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_1/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
        s: "loc:@map/while/comnet_model/rnn_1/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "map/while/comnet_model/rnn_1/while/Exit_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_1_grad/transpose"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  input: "map/while/comnet_model/rnn_1/TensorArrayStack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_2/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_1/while/Exit_3_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_1/while/Exit_2_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_1/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_1/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Merge_3_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/Enter_1"
  input: "map/while/comnet_model/rnn_1/while/GreaterEqual"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_5_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_5_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_1/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_1/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  input: "map/while/comnet_model/rnn_1/while/Identity_1"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/Enter"
  input: "map/while/comnet_model/rnn_1/zeros"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select_1"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_38"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/Enter_1"
  input: "map/while/comnet_model/rnn_1/while/Identity_3"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_38"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_1:1"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_38"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/Enter_1"
  input: "gru_cell_1/Tanh_1"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_38"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1/Enter_1"
  input: "gru_cell_1/sub_1"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_5_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell_1/sub_1_grad/Shape"
  input: "gradients/gru_cell_1/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_5_grad/Mul"
  input: "gradients/gru_cell_1/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_1_grad/Sum"
  input: "gradients/gru_cell_1/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_5_grad/Mul"
  input: "gradients/gru_cell_1/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell_1/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_1_grad/Neg"
  input: "gradients/gru_cell_1/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell_1/mul_5_grad/Mul/StackPopV2"
  input: "gradients/gru_cell_1/mul_5_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_3_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Tanh_1_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Tanh_1_grad/TanhGrad"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_3/ReadVariableOp"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Tanh_1_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_3"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/Const"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_3_grad/Const"
  input: "gradients/gru_cell_1/concat_3_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/Enter_1"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/Enter_2"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/Enter_3"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/Enter_3"
  input: "gru_cell_1/mul_3"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2_1/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_3_grad/mod"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/gru_cell_1/concat_3_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/gru_cell_1/concat_3_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_3_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_3_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_3_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split_1"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/gru_cell_1/sub_1_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/mul_4_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/AddN_39"
  input: "gradients/gru_cell_1/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_1_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell_1/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/Enter_1"
  input: "gru_cell_1/Sigmoid_1"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_2/ReadVariableOp"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_1_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_2"
  input: "^gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_2_grad/Const"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_2_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_2_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_2_grad/Const"
  input: "gradients/gru_cell_1/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_2_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_3_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_2_grad/mod"
  input: "gradients/gru_cell_1/concat_2_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_2_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/gru_cell_1/concat_2_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_2_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/gru_cell_1/concat_2_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_2_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/gru_cell_1/concat_3_grad/Slice"
  input: "gradients/gru_cell_1/concat_2_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/concat_3_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/Sub_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_1/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/transpose"
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/transpose"
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_2"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_3"
  input: "^gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_40"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select"
  input: "gradients/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/gru_cell_1/concat_2_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn_1/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn_1/TensorArray_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/TensorArrayUnstack/range"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/Enter"
  input: "map/while/comnet_model/rnn_1/TensorArrayUnstack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn_1/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/ScatterNd_1_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/map/while/comnet_model/rnn_1/transpose_grad/transpose"
  input: "gradients/map/while/comnet_model/GatherNd_1_grad/ScatterNd/StackPopV2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/Shape"
  op: "Shape"
  input: "gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32"
  op: "Cast"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/StackPopV2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/Size"
  op: "Size"
  input: "map/while/comnet_model/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_1_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherV2_1_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/Enter"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/Size"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ToInt32"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/strided_slice/stack"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/strided_slice/stack_1"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/concat/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/strided_slice"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/ScatterNd_1_grad/GatherNd"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherV2_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_16"
  op: "Shape"
  input: "gradients/gru_cell/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_15/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_15/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_15/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_15"
  op: "StridedSlice"
  input: "gradients/Shape_16"
  input: "gradients/strided_slice_15/stack"
  input: "gradients/strided_slice_15/stack_1"
  input: "gradients/strided_slice_15/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_15/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_15/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_15"
  op: "Range"
  input: "gradients/range_15/start"
  input: "gradients/strided_slice_15"
  input: "gradients/range_15/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_17"
  op: "Shape"
  input: "gradients/gru_cell/mul_3_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_16/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_16/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_16/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_16"
  op: "StridedSlice"
  input: "gradients/Shape_17"
  input: "gradients/strided_slice_16/stack"
  input: "gradients/strided_slice_16/stack_1"
  input: "gradients/strided_slice_16/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_16/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_16/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_16"
  op: "Range"
  input: "gradients/range_16/start"
  input: "gradients/strided_slice_16"
  input: "gradients/range_16/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_18"
  op: "Shape"
  input: "gradients/gru_cell/concat_2_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_17/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_17/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_17/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_17"
  op: "StridedSlice"
  input: "gradients/Shape_18"
  input: "gradients/strided_slice_17/stack"
  input: "gradients/strided_slice_17/stack_1"
  input: "gradients/strided_slice_17/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_17/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_17/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_17"
  op: "Range"
  input: "gradients/range_17/start"
  input: "gradients/strided_slice_17"
  input: "gradients/range_17/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_15"
  op: "Cast"
  input: "gradients/range_15"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_16"
  op: "Cast"
  input: "gradients/range_16"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_17"
  op: "Cast"
  input: "gradients/range_17"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_10/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_10"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_4_grad/Reshape_1"
  input: "gradients/gru_cell/mul_3_grad/Reshape_1"
  input: "gradients/gru_cell/concat_2_grad/Slice_1"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/Reshape"
  input: "gradients/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_11/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_11"
  op: "ConcatV2"
  input: "gradients/Cast_15"
  input: "gradients/Cast_16"
  input: "gradients/Cast_17"
  input: "gradients/map/while/comnet_model/GatherV2_1_grad/Reshape_1"
  input: "gradients/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_16"
  input: "gradients/gru_cell/add_grad/Sum/strided_slice/stack"
  input: "gradients/gru_cell/add_grad/Sum/strided_slice/stack_1"
  input: "gradients/gru_cell/add_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_10"
  input: "gradients/concat_11"
  input: "gradients/gru_cell/add_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/add_grad/Sum/input"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/add_grad/Sum"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum_1/strided_slice/stack"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_16"
  input: "gradients/gru_cell/add_grad/Sum_1/strided_slice/stack"
  input: "gradients/gru_cell/add_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/gru_cell/add_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_10"
  input: "gradients/concat_11"
  input: "gradients/gru_cell/add_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/add_grad/Sum_1/input"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/add_grad/Sum_1"
  input: "gradients/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_grad/Reshape"
  input: "gradients/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_1_grad/Mul/Enter"
  input: "map/while/comnet_model/zeros"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_1_grad/Mul"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_1_grad/Sum"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "gru_cell/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_1_grad/Mul_1"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/add_grad/Reshape_1"
  input: "gradients/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_2_grad/Mul/Enter"
  input: "gru_cell/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_2_grad/Mul"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_2_grad/Sum"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_2_grad/Mul_1"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_2_grad/Sum_1"
  input: "gradients/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/sub_grad/Shape"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_2_grad/Reshape"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/sub_grad/Sum"
  input: "gradients/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_2_grad/Reshape"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/sub_grad/Neg"
  input: "gradients/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "gradients/gru_cell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul/Enter"
  input: "gru_cell/MatMul_1/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "gru_cell/concat_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_1_grad/Const"
  input: "gradients/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/UnsortedSegmentSum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "map/while/comnet_model/UnsortedSegmentSum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "gru_cell/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_1_grad/mod"
  input: "gradients/gru_cell/concat_1_grad/ShapeN"
  input: "gradients/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/gru_cell/concat_1_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_42"
  op: "AddN"
  input: "gradients/gru_cell/BiasAdd_13_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_11_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_9_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_7_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_5_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_3_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/BiasAdd_13_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "map/while/comnet_model/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/gru_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell/concat_1_grad/Slice_1"
  input: "gradients/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell/mul_grad/Mul"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell/mul_grad/Sum"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "gradients/gru_cell/concat_1_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/mul_grad/Mul_1/Enter"
  input: "gru_cell/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell/mul_grad/Mul_1"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell/mul_grad/Sum_1"
  input: "gradients/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_43"
  op: "AddN"
  input: "gradients/gru_cell/MatMul_13_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_11_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_9_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_7_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_5_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_3_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_1_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/MatMul_13_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_44"
  op: "AddN"
  input: "gradients/gru_cell/mul_1_grad/Reshape"
  input: "gradients/gru_cell/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell/mul_grad/Reshape"
  input: "gradients/AddN_44"
  input: "gradients/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "gru_cell/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/gru_cell/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/MatMul/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_grad/MatMul/Enter"
  input: "gru_cell/MatMul/ReadVariableOp"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "gru_cell/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell/concat_grad/Const"
  input: "gradients/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell/concat_grad/mod"
  input: "gradients/gru_cell/concat_grad/ShapeN"
  input: "gradients/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_grad/MatMul"
  input: "gradients/gru_cell/concat_grad/ConcatOffset"
  input: "gradients/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell/MatMul_grad/MatMul"
  input: "gradients/gru_cell/concat_grad/ConcatOffset:1"
  input: "gradients/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_45"
  op: "AddN"
  input: "gradients/gru_cell/BiasAdd_12_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_10_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_8_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_6_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_4_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_2_grad/BiasAddGrad"
  input: "gradients/gru_cell/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/BiasAdd_12_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_46"
  op: "AddN"
  input: "gradients/gru_cell/concat_1_grad/Slice"
  input: "gradients/gru_cell/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/Maximum"
  op: "Maximum"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GatherV2/axis"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_46"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/Maximum"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GreaterEqual/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/map/while/comnet_model/GatherV2_7_grad/Reshape_1/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ExpandDims/dim"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GreaterEqual"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ones_like/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ones_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ones_like/Shape"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/and"
  op: "LogicalAnd"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ExpandDims"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/and"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_47"
  op: "AddN"
  input: "gradients/gru_cell/MatMul_12_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_10_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_8_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_6_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_4_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_2_grad/MatMul_1"
  input: "gradients/gru_cell/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell/MatMul_12_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd"
  op: "ScatterNd"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2"
  input: "gradients/map/while/comnet_model/UnsortedSegmentSum_grad/Select"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/stack_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/Enter"
  input: "map/while/comnet_model/stack_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/GatherNd_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/Enter_1"
  input: "gradients/map/while/comnet_model/GatherNd_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/Enter"
  input: "map/while/comnet_model/rnn/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/map/while/comnet_model/GatherNd_grad/ScatterNd"
  input: "gradients/map/while/comnet_model/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
        s: "loc:@map/while/comnet_model/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
        s: "loc:@map/while/comnet_model/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "map/while/comnet_model/rnn/while/Exit_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2_1"
  input: "^gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/transpose_1_grad/transpose"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/Enter"
  input: "map/while/comnet_model/rnn/TensorArrayStack/range"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn_1/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn/while/Exit_3_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/map/while/comnet_model/rnn/while/Exit_2_grad/b_exit"
  input: "gradients/map/while/comnet_model/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/map/while/comnet_model/rnn/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/map/while/comnet_model/rnn/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/Merge_3_grad/Switch:1"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/Enter_1"
  input: "map/while/comnet_model/rnn/while/GreaterEqual"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2"
  input: "^gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_2_grad/Mul/StackPopV2"
  input: "^gradients/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/gru_cell_1/mul_grad/Mul_1/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "gradients/map/while/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
        s: "loc:@map/while/comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "map/while/comnet_model/rnn/TensorArray"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/map/while/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  input: "^gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter_1"
  input: "map/while/comnet_model/rnn/while/Identity_1"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/Enter"
  input: "map/while/comnet_model/rnn/zeros"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/Enter_1"
  op: "Enter"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/Select"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/zeros_like"
  input: "gradients/map/while/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_48"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select_1"
  input: "gradients/map/while/comnet_model/rnn/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/map/while/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_48"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/Enter_1"
  input: "map/while/comnet_model/rnn/while/Identity_3"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_48"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split:1"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_1_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_48"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/Enter_1"
  input: "gru_cell_1/Tanh"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_48"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1/Enter_1"
  input: "gru_cell_1/sub"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\222\t\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_cell_1/sub_grad/Shape"
  input: "gradients/gru_cell_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_grad/Sum"
  input: "gradients/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_cell_1/sub_grad/Neg"
  input: "gradients/gru_cell_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru_cell_1/mul_2_grad/Mul/StackPopV2"
  input: "gradients/gru_cell_1/mul_2_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul_1/ReadVariableOp"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat_1"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/Const"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_1_grad/Const"
  input: "gradients/gru_cell_1/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/comnet_model/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/Enter_1"
  input: "map/while/comnet_model/rnn/while/TensorArrayReadV3"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/Enter_2"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/Enter_3"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/Enter_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/Enter_3"
  input: "gru_cell_1/mul"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2_1/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_1_grad/mod"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul"
  input: "gradients/gru_cell_1/concat_1_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul"
  input: "gradients/gru_cell_1/concat_1_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_1_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/gru_cell_1/concat_1_grad/Slice_1"
  input: "gradients/gru_cell_1/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_grad/Mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/mul_grad/Mul_1/Enter_1"
  input: "gru_cell_1/split"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/mul_grad/Mul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/mul_grad/Mul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/mul_grad/Mul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_49"
  op: "AddN"
  input: "gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_13/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_11/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_9/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_7/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_5/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_3/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_1_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/BiasAdd_15/ReadVariableOp/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_50"
  op: "AddN"
  input: "gradients/gru_cell_1/mul_1_grad/Mul"
  input: "gradients/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru_cell_1/mul_grad/Mul"
  input: "gradients/AddN_50"
  input: "gradients/gru_cell_1/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_51"
  op: "AddN"
  input: "gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_13/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_11/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_9/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_7/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_5/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_3/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_1_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/MatMul_15/ReadVariableOp/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "gradients/gru_cell_1/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/Enter_1"
  input: "gru_cell_1/Sigmoid"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/MatMul/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul/Enter_1"
  input: "gru_cell_1/MatMul/ReadVariableOp"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/gru_cell_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1/Enter_1"
  input: "gru_cell_1/concat"
  input: "^gradients/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPopV2/Enter_1"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPopV2/Enter_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1/StackPopV2/Enter"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_grad/Const"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/gru_cell_1/concat_grad/Const"
  input: "gradients/gru_cell_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_grad/Shape"
  op: "Shape"
  input: "map/while/comnet_model/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru_cell_1/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/gru_cell_1/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_cell_1/concat_grad/mod"
  input: "gradients/gru_cell_1/concat_grad/ShapeN"
  input: "gradients/gru_cell_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/gru_cell_1/concat_grad/ConcatOffset"
  input: "gradients/gru_cell_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/gru_cell_1/concat_grad/ConcatOffset:1"
  input: "gradients/gru_cell_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/Switch:1"
  input: "gradients/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_52"
  op: "AddN"
  input: "gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select"
  input: "gradients/gru_cell_1/mul_1_grad/Mul_1"
  input: "gradients/gru_cell_1/mul_grad/Mul_1"
  input: "gradients/gru_cell_1/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/map/while/comnet_model/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/b_acc"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/Switch:1"
  input: "gradients/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_53"
  op: "AddN"
  input: "gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_12/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_10/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_8/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_6/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_4/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_1_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/BiasAdd_14/ReadVariableOp/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2450
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_54"
  op: "AddN"
  input: "gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_12/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_10/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_8/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_6/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_4/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul_2/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_1_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru_cell_1/MatMul_14/ReadVariableOp/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gru_cell/gates/kernel_1"
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/kernel_1"
  op: "HistogramSummary"
  input: "gru_cell/gates/kernel_1/tag"
  input: "gru_cell/gates/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gru_cell/gates/bias_1"
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias_1"
  op: "HistogramSummary"
  input: "gru_cell/gates/bias_1/tag"
  input: "gru_cell/gates/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gru_cell/candidate/kernel_1"
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel_1"
  op: "HistogramSummary"
  input: "gru_cell/candidate/kernel_1/tag"
  input: "gru_cell/candidate/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gru_cell/candidate/bias_1"
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias_1"
  op: "HistogramSummary"
  input: "gru_cell/candidate/bias_1/tag"
  input: "gru_cell/candidate/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gru_cell_1/gates/kernel_1"
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel_1"
  op: "HistogramSummary"
  input: "gru_cell_1/gates/kernel_1/tag"
  input: "gru_cell_1/gates/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gru_cell_1/gates/bias_1"
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias_1"
  op: "HistogramSummary"
  input: "gru_cell_1/gates/bias_1/tag"
  input: "gru_cell_1/gates/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gru_cell_1/candidate/kernel_1"
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel_1"
  op: "HistogramSummary"
  input: "gru_cell_1/candidate/kernel_1/tag"
  input: "gru_cell_1/candidate/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gru_cell_1/candidate/bias_1"
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias_1"
  op: "HistogramSummary"
  input: "gru_cell_1/candidate/bias_1/tag"
  input: "gru_cell_1/candidate/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense/kernel_1"
      }
    }
  }
}
node {
  name: "dense/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel_1"
  op: "HistogramSummary"
  input: "dense/kernel_1/tag"
  input: "dense/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense/bias_1"
      }
    }
  }
}
node {
  name: "dense/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias_1"
  op: "HistogramSummary"
  input: "dense/bias_1/tag"
  input: "dense/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "dense_1/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel_1"
  op: "HistogramSummary"
  input: "dense_1/kernel_1/tag"
  input: "dense_1/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_1/bias_1"
      }
    }
  }
}
node {
  name: "dense_1/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias_1"
  op: "HistogramSummary"
  input: "dense_1/bias_1/tag"
  input: "dense_1/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "dense_2/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel_1"
  op: "HistogramSummary"
  input: "dense_2/kernel_1/tag"
  input: "dense_2/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_2/bias_1"
      }
    }
  }
}
node {
  name: "dense_2/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias_1"
  op: "HistogramSummary"
  input: "dense_2/bias_1/tag"
  input: "dense_2/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_2_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_2_1"
  op: "HistogramSummary"
  input: "gradients/AddN_2_1/tag"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_1_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_1_1"
  op: "HistogramSummary"
  input: "gradients/AddN_1_1/tag"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_55/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_55"
      }
    }
  }
}
node {
  name: "gradients/AddN_55"
  op: "HistogramSummary"
  input: "gradients/AddN_55/tag"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3_1"
      }
    }
  }
}
node {
  name: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3_1"
  op: "HistogramSummary"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3_1/tag"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Read_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_3"
  op: "Identity"
  input: "Read_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Read_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_4"
  op: "Identity"
  input: "Read_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam/Identity"
  op: "Identity"
  input: "gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/gates/kernel/Adam"
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/gates/kernel/Adam"
  input: "gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1/Identity"
  op: "Identity"
  input: "gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/gates/kernel/Adam_1"
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/gates/kernel/Adam_1"
  input: "gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam/Identity"
  op: "Identity"
  input: "gru_cell/gates/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/gates/bias/Adam"
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/gates/bias/Adam"
  input: "gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam_1/Identity"
  op: "Identity"
  input: "gru_cell/gates/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/gates/bias/Adam_1"
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/gates/bias/Adam_1"
  input: "gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/gates/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam/Identity"
  op: "Identity"
  input: "gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/candidate/kernel/Adam"
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/kernel/Adam"
  input: "gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1/Identity"
  op: "Identity"
  input: "gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/candidate/kernel/Adam_1"
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/kernel/Adam_1"
  input: "gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam/Identity"
  op: "Identity"
  input: "gru_cell/candidate/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/candidate/bias/Adam"
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/bias/Adam"
  input: "gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam_1/Identity"
  op: "Identity"
  input: "gru_cell/candidate/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell/candidate/bias/Adam_1"
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/bias/Adam_1"
  input: "gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell/candidate/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam/Identity"
  op: "Identity"
  input: "gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "gru_cell_1/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "gru_cell_1/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/gates/kernel/Adam"
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/kernel/Adam"
  input: "gru_cell_1/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1/Identity"
  op: "Identity"
  input: "gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "gru_cell_1/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "gru_cell_1/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/gates/kernel/Adam_1"
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/kernel/Adam_1"
  input: "gru_cell_1/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam/Identity"
  op: "Identity"
  input: "gru_cell_1/gates/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/gates/bias/Adam"
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/bias/Adam"
  input: "gru_cell_1/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam_1/Identity"
  op: "Identity"
  input: "gru_cell_1/gates/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/gates/bias/Adam_1"
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/bias/Adam_1"
  input: "gru_cell_1/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/gates/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/gates/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam/Identity"
  op: "Identity"
  input: "gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "gru_cell_1/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "gru_cell_1/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/candidate/kernel/Adam"
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/kernel/Adam"
  input: "gru_cell_1/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1/Identity"
  op: "Identity"
  input: "gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "gru_cell_1/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "gru_cell_1/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/candidate/kernel/Adam_1"
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/kernel/Adam_1"
  input: "gru_cell_1/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam/Identity"
  op: "Identity"
  input: "gru_cell_1/candidate/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/candidate/bias/Adam"
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/bias/Adam"
  input: "gru_cell_1/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam_1/Identity"
  op: "Identity"
  input: "gru_cell_1/candidate/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gru_cell_1/candidate/bias/Adam_1"
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/bias/Adam_1"
  input: "gru_cell_1/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_cell_1/candidate/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_cell_1/candidate/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam/Identity"
  op: "Identity"
  input: "dense/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel/Adam"
    }
  }
}
node {
  name: "dense/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Identity"
  op: "Identity"
  input: "dense/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel/Adam_1"
    }
  }
}
node {
  name: "dense/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam_1"
  input: "dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam/Identity"
  op: "Identity"
  input: "dense/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias/Adam"
    }
  }
}
node {
  name: "dense/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam_1/Identity"
  op: "Identity"
  input: "dense/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias/Adam_1"
    }
  }
}
node {
  name: "dense/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense/bias/Adam_1"
  input: "dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Identity"
  op: "Identity"
  input: "dense_1/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/Adam"
    }
  }
}
node {
  name: "dense_1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam"
  input: "dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Identity"
  op: "Identity"
  input: "dense_1/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam_1"
  input: "dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Identity"
  op: "Identity"
  input: "dense_1/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/Adam"
    }
  }
}
node {
  name: "dense_1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam"
  input: "dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Identity"
  op: "Identity"
  input: "dense_1/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/Adam_1"
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam_1"
  input: "dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Identity"
  op: "Identity"
  input: "dense_2/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/Adam"
    }
  }
}
node {
  name: "dense_2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam"
  input: "dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Identity"
  op: "Identity"
  input: "dense_2/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam_1"
  input: "dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Identity"
  op: "Identity"
  input: "dense_2/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/Adam"
    }
  }
}
node {
  name: "dense_2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam"
  input: "dense_2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Identity"
  op: "Identity"
  input: "dense_2/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/Adam_1"
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam_1"
  input: "dense_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell/gates/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_gru_cell/gates/kernel/Identity"
  op: "Identity"
  input: "Adam/update_gru_cell/gates/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell/gates/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "gru_cell/gates/kernel"
  input: "gru_cell/gates/kernel/Adam"
  input: "gru_cell/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_gru_cell/gates/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru_cell/gates/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_gru_cell/gates/bias/Identity"
  op: "Identity"
  input: "Adam/update_gru_cell/gates/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell/gates/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "gru_cell/gates/bias"
  input: "gru_cell/gates/bias/Adam"
  input: "gru_cell/gates/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_gru_cell/gates/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru_cell/candidate/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_gru_cell/candidate/kernel/Identity"
  op: "Identity"
  input: "Adam/update_gru_cell/candidate/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell/candidate/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "gru_cell/candidate/kernel"
  input: "gru_cell/candidate/kernel/Adam"
  input: "gru_cell/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_gru_cell/candidate/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru_cell/candidate/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_gru_cell/candidate/bias/Identity"
  op: "Identity"
  input: "Adam/update_gru_cell/candidate/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell/candidate/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "gru_cell/candidate/bias"
  input: "gru_cell/candidate/bias/Adam"
  input: "gru_cell/candidate/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_gru_cell/candidate/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/gates/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/gates/kernel/Identity"
  op: "Identity"
  input: "Adam/update_gru_cell_1/gates/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/gates/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "gru_cell_1/gates/kernel"
  input: "gru_cell_1/gates/kernel/Adam"
  input: "gru_cell_1/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_gru_cell_1/gates/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/gates/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/gates/bias/Identity"
  op: "Identity"
  input: "Adam/update_gru_cell_1/gates/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/gates/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "gru_cell_1/gates/bias"
  input: "gru_cell_1/gates/bias/Adam"
  input: "gru_cell_1/gates/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_gru_cell_1/gates/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/candidate/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/candidate/kernel/Identity"
  op: "Identity"
  input: "Adam/update_gru_cell_1/candidate/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/candidate/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "gru_cell_1/candidate/kernel"
  input: "gru_cell_1/candidate/kernel/Adam"
  input: "gru_cell_1/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_gru_cell_1/candidate/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/candidate/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/candidate/bias/Identity"
  op: "Identity"
  input: "Adam/update_gru_cell_1/candidate/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_gru_cell_1/candidate/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "gru_cell_1/candidate/bias"
  input: "gru_cell_1/candidate/bias/Adam"
  input: "gru_cell_1/candidate/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_gru_cell_1/candidate/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/kernel/Identity"
  op: "Identity"
  input: "Adam/update_dense/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_dense/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/bias/Identity"
  op: "Identity"
  input: "Adam/update_dense/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_dense/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_dense/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/Identity"
  op: "Identity"
  input: "Adam/update_dense_1/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Adam"
  input: "dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_dense_1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/Identity"
  op: "Identity"
  input: "Adam/update_dense_1/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/bias"
  input: "dense_1/bias/Adam"
  input: "dense_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_dense_1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/Identity"
  op: "Identity"
  input: "Adam/update_dense_2/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Adam"
  input: "dense_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_dense_2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/Identity"
  op: "Identity"
  input: "Adam/update_dense_2/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/bias"
  input: "dense_2/bias/Adam"
  input: "dense_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_dense_2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/candidate/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/candidate/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/gates/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/gates/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/candidate/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/candidate/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/gates/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/gates/kernel/ResourceApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/candidate/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/candidate/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/gates/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/gates/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/candidate/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/candidate/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/gates/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/gates/kernel/ResourceApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
        s: "loc:@Read_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/candidate/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/candidate/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/gates/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell/gates/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/candidate/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/candidate/kernel/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/gates/bias/ResourceApplyAdam"
  input: "^Adam/update_gru_cell_1/gates/kernel/ResourceApplyAdam"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense_1/bias/Adam/Assign"
  input: "^dense_1/bias/Adam_1/Assign"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Adam/Assign"
  input: "^dense_1/kernel/Adam_1/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_2/bias/Adam/Assign"
  input: "^dense_2/bias/Adam_1/Assign"
  input: "^dense_2/bias/Assign"
  input: "^dense_2/kernel/Adam/Assign"
  input: "^dense_2/kernel/Adam_1/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^global_step/Assign"
  input: "^gru_cell/candidate/bias/Adam/Assign"
  input: "^gru_cell/candidate/bias/Adam_1/Assign"
  input: "^gru_cell/candidate/bias/Assign"
  input: "^gru_cell/candidate/kernel/Adam/Assign"
  input: "^gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^gru_cell/candidate/kernel/Assign"
  input: "^gru_cell/gates/bias/Adam/Assign"
  input: "^gru_cell/gates/bias/Adam_1/Assign"
  input: "^gru_cell/gates/bias/Assign"
  input: "^gru_cell/gates/kernel/Adam/Assign"
  input: "^gru_cell/gates/kernel/Adam_1/Assign"
  input: "^gru_cell/gates/kernel/Assign"
  input: "^gru_cell_1/candidate/bias/Adam/Assign"
  input: "^gru_cell_1/candidate/bias/Adam_1/Assign"
  input: "^gru_cell_1/candidate/bias/Assign"
  input: "^gru_cell_1/candidate/kernel/Adam/Assign"
  input: "^gru_cell_1/candidate/kernel/Adam_1/Assign"
  input: "^gru_cell_1/candidate/kernel/Assign"
  input: "^gru_cell_1/gates/bias/Adam/Assign"
  input: "^gru_cell_1/gates/bias/Adam_1/Assign"
  input: "^gru_cell_1/gates/bias/Assign"
  input: "^gru_cell_1/gates/kernel/Adam/Assign"
  input: "^gru_cell_1/gates/kernel/Adam_1/Assign"
  input: "^gru_cell_1/gates/kernel/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 45
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "global_step"
        string_val: "gru_cell/gates/kernel"
        string_val: "gru_cell/gates/bias"
        string_val: "gru_cell/candidate/kernel"
        string_val: "gru_cell/candidate/bias"
        string_val: "gru_cell_1/gates/kernel"
        string_val: "gru_cell_1/gates/bias"
        string_val: "gru_cell_1/candidate/kernel"
        string_val: "gru_cell_1/candidate/bias"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_2/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "gru_cell/gates/kernel/Adam"
        string_val: "gru_cell/gates/kernel/Adam_1"
        string_val: "gru_cell/gates/bias/Adam"
        string_val: "gru_cell/gates/bias/Adam_1"
        string_val: "gru_cell/candidate/kernel/Adam"
        string_val: "gru_cell/candidate/kernel/Adam_1"
        string_val: "gru_cell/candidate/bias/Adam"
        string_val: "gru_cell/candidate/bias/Adam_1"
        string_val: "gru_cell_1/gates/kernel/Adam"
        string_val: "gru_cell_1/gates/kernel/Adam_1"
        string_val: "gru_cell_1/gates/bias/Adam"
        string_val: "gru_cell_1/gates/bias/Adam_1"
        string_val: "gru_cell_1/candidate/kernel/Adam"
        string_val: "gru_cell_1/candidate/kernel/Adam_1"
        string_val: "gru_cell_1/candidate/bias/Adam"
        string_val: "gru_cell_1/candidate/bias/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "gru_cell/gates/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/gates/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "gru_cell_1/candidate/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 45
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "global_step"
        string_val: "gru_cell/gates/kernel"
        string_val: "gru_cell/gates/bias"
        string_val: "gru_cell/candidate/kernel"
        string_val: "gru_cell/candidate/bias"
        string_val: "gru_cell_1/gates/kernel"
        string_val: "gru_cell_1/gates/bias"
        string_val: "gru_cell_1/candidate/kernel"
        string_val: "gru_cell_1/candidate/bias"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_2/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "gru_cell/gates/kernel/Adam"
        string_val: "gru_cell/gates/kernel/Adam_1"
        string_val: "gru_cell/gates/bias/Adam"
        string_val: "gru_cell/gates/bias/Adam_1"
        string_val: "gru_cell/candidate/kernel/Adam"
        string_val: "gru_cell/candidate/kernel/Adam_1"
        string_val: "gru_cell/candidate/bias/Adam"
        string_val: "gru_cell/candidate/bias/Adam_1"
        string_val: "gru_cell_1/gates/kernel/Adam"
        string_val: "gru_cell_1/gates/kernel/Adam_1"
        string_val: "gru_cell_1/gates/bias/Adam"
        string_val: "gru_cell_1/gates/bias/Adam_1"
        string_val: "gru_cell_1/candidate/kernel/Adam"
        string_val: "gru_cell_1/candidate/kernel/Adam_1"
        string_val: "gru_cell_1/candidate/bias/Adam"
        string_val: "gru_cell_1/candidate/bias/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  input: "regularization_loss"
  input: "gru_cell/gates/kernel_1"
  input: "gru_cell/gates/bias_1"
  input: "gru_cell/candidate/kernel_1"
  input: "gru_cell/candidate/bias_1"
  input: "gru_cell_1/gates/kernel_1"
  input: "gru_cell_1/gates/bias_1"
  input: "gru_cell_1/candidate/kernel_1"
  input: "gru_cell_1/candidate/bias_1"
  input: "dense/kernel_1"
  input: "dense/bias_1"
  input: "dense_1/kernel_1"
  input: "dense_1/bias_1"
  input: "dense_2/kernel_1"
  input: "dense_2/bias_1"
  input: "gradients/gru_cell/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/gru_cell/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/gru_cell/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/gru_cell/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/gru_cell_1/MatMul/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/gru_cell_1/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/gru_cell_1/MatMul_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/gru_cell_1/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/AddN_2_1"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/AddN_1_1"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_1/ReadVariableOp/Enter_grad/b_acc_3_1"
  input: "gradients/AddN_55"
  input: "gradients/map/while/comnet_model/sequential/BiasAdd_2/ReadVariableOp/Enter_grad/b_acc_3_1"
  attr {
    key: "N"
    value {
      i: 30
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_784d5f96eb7741698b87eb84fcda7e37/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "global_step"
        string_val: "gru_cell/candidate/bias"
        string_val: "gru_cell/candidate/bias/Adam"
        string_val: "gru_cell/candidate/bias/Adam_1"
        string_val: "gru_cell/candidate/kernel"
        string_val: "gru_cell/candidate/kernel/Adam"
        string_val: "gru_cell/candidate/kernel/Adam_1"
        string_val: "gru_cell/gates/bias"
        string_val: "gru_cell/gates/bias/Adam"
        string_val: "gru_cell/gates/bias/Adam_1"
        string_val: "gru_cell/gates/kernel"
        string_val: "gru_cell/gates/kernel/Adam"
        string_val: "gru_cell/gates/kernel/Adam_1"
        string_val: "gru_cell_1/candidate/bias"
        string_val: "gru_cell_1/candidate/bias/Adam"
        string_val: "gru_cell_1/candidate/bias/Adam_1"
        string_val: "gru_cell_1/candidate/kernel"
        string_val: "gru_cell_1/candidate/kernel/Adam"
        string_val: "gru_cell_1/candidate/kernel/Adam_1"
        string_val: "gru_cell_1/gates/bias"
        string_val: "gru_cell_1/gates/bias/Adam"
        string_val: "gru_cell_1/gates/bias/Adam_1"
        string_val: "gru_cell_1/gates/kernel"
        string_val: "gru_cell_1/gates/kernel/Adam"
        string_val: "gru_cell_1/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "dense/bias/Read/ReadVariableOp"
  input: "dense/bias/Adam/Read_1/ReadVariableOp"
  input: "dense/bias/Adam_1/Read_1/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "dense/kernel/Adam/Read_1/ReadVariableOp"
  input: "dense/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "dense_1/bias/Read/ReadVariableOp"
  input: "dense_1/bias/Adam/Read_1/ReadVariableOp"
  input: "dense_1/bias/Adam_1/Read_1/ReadVariableOp"
  input: "dense_1/kernel/Read/ReadVariableOp"
  input: "dense_1/kernel/Adam/Read_1/ReadVariableOp"
  input: "dense_1/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "dense_2/bias/Read/ReadVariableOp"
  input: "dense_2/bias/Adam/Read_1/ReadVariableOp"
  input: "dense_2/bias/Adam_1/Read_1/ReadVariableOp"
  input: "dense_2/kernel/Read/ReadVariableOp"
  input: "dense_2/kernel/Adam/Read_1/ReadVariableOp"
  input: "dense_2/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "global_step"
  input: "gru_cell/candidate/bias/Read/ReadVariableOp"
  input: "gru_cell/candidate/bias/Adam/Read_1/ReadVariableOp"
  input: "gru_cell/candidate/bias/Adam_1/Read_1/ReadVariableOp"
  input: "gru_cell/candidate/kernel/Read/ReadVariableOp"
  input: "gru_cell/candidate/kernel/Adam/Read_1/ReadVariableOp"
  input: "gru_cell/candidate/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "gru_cell/gates/bias/Read/ReadVariableOp"
  input: "gru_cell/gates/bias/Adam/Read_1/ReadVariableOp"
  input: "gru_cell/gates/bias/Adam_1/Read_1/ReadVariableOp"
  input: "gru_cell/gates/kernel/Read/ReadVariableOp"
  input: "gru_cell/gates/kernel/Adam/Read_1/ReadVariableOp"
  input: "gru_cell/gates/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "gru_cell_1/candidate/bias/Read/ReadVariableOp"
  input: "gru_cell_1/candidate/bias/Adam/Read_1/ReadVariableOp"
  input: "gru_cell_1/candidate/bias/Adam_1/Read_1/ReadVariableOp"
  input: "gru_cell_1/candidate/kernel/Read/ReadVariableOp"
  input: "gru_cell_1/candidate/kernel/Adam/Read_1/ReadVariableOp"
  input: "gru_cell_1/candidate/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "gru_cell_1/gates/bias/Read/ReadVariableOp"
  input: "gru_cell_1/gates/bias/Adam/Read_1/ReadVariableOp"
  input: "gru_cell_1/gates/bias/Adam_1/Read_1/ReadVariableOp"
  input: "gru_cell_1/gates/kernel/Read/ReadVariableOp"
  input: "gru_cell_1/gates/kernel/Adam/Read_1/ReadVariableOp"
  input: "gru_cell_1/gates/kernel/Adam_1/Read_1/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "global_step"
        string_val: "gru_cell/candidate/bias"
        string_val: "gru_cell/candidate/bias/Adam"
        string_val: "gru_cell/candidate/bias/Adam_1"
        string_val: "gru_cell/candidate/kernel"
        string_val: "gru_cell/candidate/kernel/Adam"
        string_val: "gru_cell/candidate/kernel/Adam_1"
        string_val: "gru_cell/gates/bias"
        string_val: "gru_cell/gates/bias/Adam"
        string_val: "gru_cell/gates/bias/Adam_1"
        string_val: "gru_cell/gates/kernel"
        string_val: "gru_cell/gates/kernel/Adam"
        string_val: "gru_cell/gates/kernel/Adam_1"
        string_val: "gru_cell_1/candidate/bias"
        string_val: "gru_cell_1/candidate/bias/Adam"
        string_val: "gru_cell_1/candidate/bias/Adam_1"
        string_val: "gru_cell_1/candidate/kernel"
        string_val: "gru_cell_1/candidate/kernel/Adam"
        string_val: "gru_cell_1/candidate/kernel/Adam_1"
        string_val: "gru_cell_1/gates/bias"
        string_val: "gru_cell_1/gates/bias/Adam"
        string_val: "gru_cell_1/gates/bias/Adam_1"
        string_val: "gru_cell_1/gates/kernel"
        string_val: "gru_cell_1/gates/kernel/Adam"
        string_val: "gru_cell_1/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_3/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_4/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense/bias/Adam"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dense/bias/Adam_1"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam_1"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam_1"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam_1"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam_1"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam_1"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/bias"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/bias/Adam"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/bias/Adam_1"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/kernel"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/kernel/Adam"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "gru_cell/candidate/kernel/Adam_1"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "gru_cell/gates/bias"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "gru_cell/gates/bias/Adam"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "gru_cell/gates/bias/Adam_1"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "gru_cell/gates/kernel"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "gru_cell/gates/kernel/Adam"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "gru_cell/gates/kernel/Adam_1"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/bias"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/bias/Adam"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/bias/Adam_1"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/kernel"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/kernel/Adam"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "gru_cell_1/candidate/kernel/Adam_1"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/bias"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/bias/Adam"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/bias/Adam_1"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/kernel"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/kernel/Adam"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "gru_cell_1/gates/kernel/Adam_1"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "_make_dataset_2nBXRk7Lda0"
      output_arg {
        name: "prefetchdataset"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorSliceDataset/tensors/component_0"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 331
              }
            }
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_100.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_101.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_102.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_103.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_105.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_106.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_108.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_109.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_10.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_110.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_111.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_112.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_113.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_114.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_116.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_117.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_118.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_11.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_120.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_121.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_122.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_124.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_125.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_126.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_12.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_130.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_131.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_132.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_133.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_134.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_135.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_136.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_137.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_138.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_13.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_15.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_16.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_17.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_18.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_19.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_1.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_20.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_21.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_22.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_23.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_24.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_25.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_26.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_27.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_28.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_29.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_2.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_33.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_34.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_36.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_38.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_39.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_3.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_40.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_41.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_43.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_44.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_46.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_47.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_48.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_49.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_50.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_51.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_53.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_54.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_55.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_56.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_57.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_58.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_59.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_5.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_60.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_61.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_62.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_63.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_65.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_66.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_68.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_69.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_72.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_73.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_75.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_76.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_77.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_78.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_7.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_80.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_81.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_82.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_83.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_84.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_85.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_86.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_87.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_88.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_89.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_8.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_90.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_91.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_92.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_93.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_95.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_96.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_98.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_99.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_12_AP_k_9.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_100.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_101.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_102.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_104.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_105.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_106.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_107.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_108.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_10.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_112.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_113.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_114.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_116.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_117.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_118.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_119.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_120.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_121.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_122.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_123.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_124.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_125.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_126.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_127.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_128.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_12.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_130.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_131.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_132.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_133.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_134.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_136.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_138.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_13.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_14.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_15.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_16.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_19.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_1.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_20.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_21.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_22.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_23.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_25.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_27.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_28.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_29.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_2.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_30.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_32.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_33.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_34.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_36.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_37.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_38.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_39.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_3.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_41.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_42.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_44.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_46.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_47.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_48.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_49.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_4.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_50.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_51.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_53.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_54.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_55.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_57.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_58.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_59.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_5.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_60.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_63.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_64.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_66.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_67.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_69.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_6.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_70.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_72.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_73.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_74.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_75.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_76.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_77.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_78.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_7.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_80.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_81.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_82.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_84.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_85.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_86.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_87.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_89.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_8.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_90.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_91.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_92.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_93.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_94.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_95.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_96.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_97.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_98.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_99.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_15_AP_k_9.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_100.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_103.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_104.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_105.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_106.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_108.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_109.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_10.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_110.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_111.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_112.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_113.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_114.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_115.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_116.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_11.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_121.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_122.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_123.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_124.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_125.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_126.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_128.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_129.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_12.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_130.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_131.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_132.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_133.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_134.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_135.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_136.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_137.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_14.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_16.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_17.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_18.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_19.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_1.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_20.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_22.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_23.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_27.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_29.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_2.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_30.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_31.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_32.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_33.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_34.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_35.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_36.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_38.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_3.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_40.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_41.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_42.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_43.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_44.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_47.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_49.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_4.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_50.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_51.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_52.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_53.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_54.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_55.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_56.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_57.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_58.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_59.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_5.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_60.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_63.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_64.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_65.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_66.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_68.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_69.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_6.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_70.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_73.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_74.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_75.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_76.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_77.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_78.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_79.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_7.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_80.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_81.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_82.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_84.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_85.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_86.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_87.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_88.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_8.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_90.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_91.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_92.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_93.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_94.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_95.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_96.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_97.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_98.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_99.tfrecords"
            string_val: "./nsfnet/50_nodes_route/tfrecords/train/results_synth50_9_AP_k_9.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/tensors/component_0:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 331
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "TensorSliceDataset:handle:0"
      input: "ShuffleDataset/buffer_size:output:0"
      input: "ShuffleDataset/seed:output:0"
      input: "ShuffleDataset/seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/cycle_length"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/block_length"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/sloppy"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/buffer_output_elements"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/prefetch_input_elements"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 8
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset"
      op: "ParallelInterleaveDataset"
      input: "ShuffleDataset:handle:0"
      input: "ParallelInterleaveDataset/cycle_length:output:0"
      input: "ParallelInterleaveDataset/block_length:output:0"
      input: "ParallelInterleaveDataset/sloppy:output:0"
      input: "ParallelInterleaveDataset/buffer_output_elements:output:0"
      input: "ParallelInterleaveDataset/prefetch_input_elements:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_rn3e6kArW78"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/buffer_size_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/seed_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/seed2_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset"
      op: "ShuffleAndRepeatDataset"
      input: "ParallelInterleaveDataset:handle:0"
      input: "ShuffleAndRepeatDataset/buffer_size_1:output:0"
      input: "ShuffleAndRepeatDataset/seed_1:output:0"
      input: "ShuffleAndRepeatDataset/seed2_1:output:0"
      input: "ShuffleAndRepeatDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/num_parallel_calls"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "ShuffleAndRepeatDataset:handle:0"
      input: "ParallelMapDataset/num_parallel_calls:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_TcbQUifozpg"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/batch_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 32
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/Const_3"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/Const_4"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/Const_5"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/Const_6"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: 2450
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/Const_7"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: 2450
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/padding_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/padding_value_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/padding_value_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/padding_value_3"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/padding_value_4"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/padding_value_5"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/padding_value_6"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/padding_value_7"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2/drop_remainder"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDatasetV2"
      op: "PaddedBatchDatasetV2"
      input: "ParallelMapDataset:handle:0"
      input: "PaddedBatchDatasetV2/batch_size:output:0"
      input: "PaddedBatchDatasetV2/Const:output:0"
      input: "PaddedBatchDatasetV2/Const_1:output:0"
      input: "PaddedBatchDatasetV2/Const_2:output:0"
      input: "PaddedBatchDatasetV2/Const_3:output:0"
      input: "PaddedBatchDatasetV2/Const_4:output:0"
      input: "PaddedBatchDatasetV2/Const_5:output:0"
      input: "PaddedBatchDatasetV2/Const_6:output:0"
      input: "PaddedBatchDatasetV2/Const_7:output:0"
      input: "PaddedBatchDatasetV2/padding_value:output:0"
      input: "PaddedBatchDatasetV2/padding_value_1:output:0"
      input: "PaddedBatchDatasetV2/padding_value_2:output:0"
      input: "PaddedBatchDatasetV2/padding_value_3:output:0"
      input: "PaddedBatchDatasetV2/padding_value_4:output:0"
      input: "PaddedBatchDatasetV2/padding_value_5:output:0"
      input: "PaddedBatchDatasetV2/padding_value_6:output:0"
      input: "PaddedBatchDatasetV2/padding_value_7:output:0"
      input: "PaddedBatchDatasetV2/drop_remainder:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 8
        }
      }
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2450
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2450
              }
            }
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset/buffer_size_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset"
      op: "PrefetchDataset"
      input: "PaddedBatchDatasetV2:handle:0"
      input: "PrefetchDataset/buffer_size_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2450
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2450
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "prefetchdataset"
      value: "PrefetchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_TcbQUifozpg"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "parse_sparsetodense_2"
        type: DT_INT64
      }
      output_arg {
        name: "parse_parsesingleexample_parsesingleexample"
        type: DT_INT64
      }
      output_arg {
        name: "parse_parsesingleexample_parsesingleexample_0"
        type: DT_INT64
      }
      output_arg {
        name: "parse_parsesingleexample_parsesingleexample_1"
        type: DT_INT64
      }
      output_arg {
        name: "parse_sparsetodense_3"
        type: DT_INT64
      }
      output_arg {
        name: "parse_sparsetodense_4"
        type: DT_INT64
      }
      output_arg {
        name: "parse_truediv"
        type: DT_FLOAT
      }
      output_arg {
        name: "parse_truediv_1"
        type: DT_FLOAT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "parse/ParseSingleExample/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "arg0"
      input: "parse/ParseSingleExample/Const:output:0"
      input: "parse/ParseSingleExample/Const_1:output:0"
      input: "parse/ParseSingleExample/Const_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "n_links"
            s: "n_paths"
            s: "n_total"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 5
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
            s: "delay"
            s: "links"
            s: "paths"
            s: "sequances"
            s: "traffic"
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:4"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:4"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:4"
      input: "parse/SparseToDense/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/sub/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "parse/sub"
      op: "Sub"
      input: "parse/SparseToDense:dense:0"
      input: "parse/sub/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "parse/truediv/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "parse/truediv"
      op: "RealDiv"
      input: "parse/sub:z:0"
      input: "parse/truediv/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_1/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_1"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:0"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:0"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:0"
      input: "parse/SparseToDense_1/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/sub_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.799999952316284
          }
        }
      }
    }
    node_def {
      name: "parse/sub_1"
      op: "Sub"
      input: "parse/SparseToDense_1:dense:0"
      input: "parse/sub_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "parse/truediv_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.5
          }
        }
      }
    }
    node_def {
      name: "parse/truediv_1"
      op: "RealDiv"
      input: "parse/sub_1:z:0"
      input: "parse/truediv_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_2/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_2"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:1"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:1"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:1"
      input: "parse/SparseToDense_2/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_3/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_3"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:2"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:2"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:2"
      input: "parse/SparseToDense_3/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_4/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_4"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:3"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:3"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:3"
      input: "parse/SparseToDense_4/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    ret {
      key: "parse_parsesingleexample_parsesingleexample"
      value: "parse/ParseSingleExample/ParseSingleExample:dense_values:0"
    }
    ret {
      key: "parse_parsesingleexample_parsesingleexample_0"
      value: "parse/ParseSingleExample/ParseSingleExample:dense_values:1"
    }
    ret {
      key: "parse_parsesingleexample_parsesingleexample_1"
      value: "parse/ParseSingleExample/ParseSingleExample:dense_values:2"
    }
    ret {
      key: "parse_sparsetodense_2"
      value: "parse/SparseToDense_2:dense:0"
    }
    ret {
      key: "parse_sparsetodense_3"
      value: "parse/SparseToDense_3:dense:0"
    }
    ret {
      key: "parse_sparsetodense_4"
      value: "parse/SparseToDense_4:dense:0"
    }
    ret {
      key: "parse_truediv"
      value: "parse/truediv:z:0"
    }
    ret {
      key: "parse_truediv_1"
      value: "parse/truediv_1:z:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_52oRgbbAY9U"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "tfrecorddataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "compression_type"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "arg0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      device: "/device:CPU:0"
    }
    ret {
      key: "tfrecorddataset"
      value: "TFRecordDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_rn3e6kArW78"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "flatmapdataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "flat_filenames/shape"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "flat_filenames"
      op: "Reshape"
      input: "arg0"
      input: "flat_filenames/shape:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "flat_filenames:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorSliceDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_52oRgbbAY9U"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    ret {
      key: "flatmapdataset"
      value: "FlatMapDataset:handle:0"
    }
  }
}
versions {
  producer: 27
  min_consumer: 12
}
